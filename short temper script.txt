if(!self.isplayer) {
	bonus(-99999999);
	self.textparticle(~No effect!~);
} else {
	var skipsetup = false;
	if(self.varexists(~poweractuatorrunning~)) skipsetup = true;
	trace(skipsetup);
	if(skipsetup) {
		trace(~skipping setup~);
		self.setvar(~ncrpowertime~|self.getvar(~ncrpowertime~) + 5.0);
	}
	if(!skipsetup) {
		self.setvar(~poweractuatorrunning~|true);
		trace(~starting power actuator~);
		self.setvar(~ncrpowertime~|5.0);
		var Rules = self.getvar(~ncr_get_Rules~);
		var oldbonusdamage = Rules.bonusdamage;
		if(Rules.bonusdamage == null) Rules.bonusdamage = 0;
		Rules.bonusdamage += 2;
		inflictself(~extradamage~|2);
		inflict(~extradamage~|2);
		var tw = new motion.actuators.SimpleActuator(null|0.1|null);
		tw._repeat = -1;
		var func = new hscript.Parser().parseString(~
			if(self == null # self.getvar(\~ncrpowertime\~) <= 0.01 # self.doendturnnow # self.hp <= 0 # self.graphic == null # target == null # target.graphic == null # target.hp <= 0) {
				trace(\~power actuator stopping\~);
				Rules.bonusdamage = ~ + oldbonusdamage + ~;
				if(self != null && self.status != null) removestatusself(\~extradamage\~|2);
				if(self != null && target.status != null) removestatus(\~extradamage\~|2);
				tw.stop();
				if(self != null) self.resetvar(\~poweractuatorrunning\~);
				if(self != null) self.resetvar(\~ncrpowertime\~);
				if(target != null && target.hp > 0) { new elements.CombatCommand(\~msg\~|\~[]\~).execute(); }
				sfx(\~_weaken\~);
			} else {
				var time = self.getvar(\~ncrpowertime\~);
				var timestring = time + \~\~;
				timestring = timestring.split(\~0000\~)[0];
				if(timestring.length < 2) timestring += \~.0\~;
				new elements.CombatCommand(\~msg\~|\~[200%]\~ + timestring).execute();
				time -= 0.1;
				self.setvar(\~ncrpowertime\~|time);
			}
		~);
		var interp = new hscript.Interp();
		interp.variables.set(~self~| self);
		interp.variables.set(~target~| target);
		interp.variables.set(~Rules~| Rules);
		interp.variables.set(~tw~| tw);
		interp.variables.set(~trace~| trace);
		interp.variables.set(~sfx~| sfx);
		interp.variables.set(~removestatusself~| removestatusself);
		interp.variables.set(~removestatus~| removestatus);
		self.resetvar(~ncr_get_Rules~);
		tw.onRepeat(interp.execute| [func]);
		interp.execute(func);
		tw.move();
	}
}