bonus(-9999999999999);
if(!self.isplayer) self.textparticle(~No effect!~); else
if(!simulation) {
	var selfscript = ~removeequipment(\~Equipment That Does Nothing\~);~; if(self.scriptendturn.indexOf(selfscript) == -1) self.scriptendturn = selfscript + self.scriptendturn;
	self.setvar(~wishingcard~|e);
	var diceavailable = false;
	if(self.dicepool.length > 0) for(dice in self.dicepool) if(dice.available()) { diceavailable = true; break; }
	if(self.equipment.length > 0) for(eq in self.equipment) if(eq.ready && eq.assigneddice.length > 0) for(dice in eq.assigneddice) if(dice != null && dice.available()) { diceavailable = true; break; }
	if(!diceavailable) { givedice(1); self.setvar(~lendeddice~|1); }
	self.setvar(~slotsbackup~|[]);
	self.setvar(~slotseqbackup~|[]);
	self.setvar(~shockslotseqbackup~|[]);
	self.setvar(~skillsbackup~|[]);
	var slotsbackup = self.getvar(~slotsbackup~);
	var slotseqbackup = self.getvar(~slotseqbackup~);
	var shockslotseqbackup = self.getvar(~shockslotseqbackup~);
	var skillsbackup = self.getvar(~skillsbackup~);
	for(eq in self.equipment) {
		eq.setvar(~standardcard~|1);
		eq.removedice();
		slotsbackup.push(eq.slots);
		shockslotseqbackup.push(eq.shocked_slots);
		slotseqbackup.push(eq);
		eq.slots = [];
		eq.shocked_slots = [];
		skillsbackup.push(eq.skillsavailable.copy());
		trace(eq.name);
		trace(eq.skillsavailable);
		trace(eq.skillsavailable.length);
		if(eq.skillsavailable.length > 0) { trace(~this has skills~); for(skill in eq.skillsavailable) { trace(~making skill false~); eq.skillsavailable[eq.skillsavailable.indexOf(skill)] = false; } }
		trace(eq.skillsavailable);
	}
	self.setvar(~slotsbackup~|slotsbackup);
	self.setvar(~slotseqbackup~|slotseqbackup);
	self.setvar(~shockslotseqbackup~|shockslotseqbackup);
	self.setvar(~skillsbackup~|skillsbackup);
	self.setvar(~selfstatusbackup~|self.status.copy());
	self.setvar(~targetstatusbackup~|target.status.copy());

	if(self.usecpuinsteadofdice) { self.setvar(~rolljackpot~|self.roll_jackpot); self.roll_jackpot = -1; /*thx to cody for this bit*/ }

	var buttonx = 100;
	var buttony = 400;

	var charlist = [~A~|~B~|~C~|~D~|~E~|~F~|~G~|~H~|~I~|~J~|~K~|~L~|~M~|~N~|~O~|~P~|~Q~|~R~|~S~|~T~|~U~|~V~|~W~|~X~|~Y~|~Z~|~a~|~b~|~c~|~d~|~e~|~f~|~g~|~h~|~i~|~j~|~k~|~l~|~m~|~n~|~o~|~p~|~q~|~r~|~s~|~t~|~u~|~v~|~w~|~x~|~y~|~z~|~'~|~_~|~@~|~1~|~2~|~3~|~4~|~5~|~6~|~7~|~8~|~9~|~0~|~.~|~?~|~!~|~Bkspace~|~Confirm~];


	self.setvar(~wandwish~|~[200%]~);

	var i = 0;


	for(char in charlist) {
		i++;
		var charholder = new elements.Equipment(~Equipment That Does Nothing~);
		self.equipment.push(charholder);
		charholder.script = ~self.equipmentused--;~;
		charholder.slotpositions[0].y -= 153;
		charholder.slotpositions[0].x -= 260;
		charholder.displayname = char;
		charholder.equipmentcol = 0;
		if(char == char.toLowerCase() && char.toLowerCase() != char.toUpperCase()) charholder.displayname = ~[70%]~ + charholder.displayname;
		if(charholder.displayname == ~Confirm~ # charholder.displayname == ~Bkspace~) charholder.equipmentcol = 2;
		charholder.fulldescription = ~~;
		charholder.height = 270;
		charholder.width = 270;
		charholder.x = buttonx;
		charholder.y = buttony;
		charholder.equipalpha = 0.0;
		buttonx += 270;
		if(i == 13) {
			buttonx = 160;
			buttony += 270;
		}
		if(i == 26) {
			buttonx = 100;
			buttony += 300;
		}
		if(i == 39) {
			buttonx = 160;
			buttony += 270;
		}
		if(i == 52) {
			buttonx = 100;
			buttony += 300;
		}
		if(i == 65) {
			buttonx = 1620;
			buttony += 270;
		}
	}

	var tw = new motion.actuators.SimpleActuator(null|1/60|null);
	tw._repeat = -1;
	var s = new elements.Skill(~Against all odds_old~);
	s.script = ~
		var phonedone = false;
		var wandwish = self.getvar(\~wandwish\~);
		for(eq in self.equipment) {
			if(self.getvar(\~phonephase2\~) != 1) {
				if(eq.equipalpha > 0.0 && eq.getvar(\~standardcard\~) == 1) eq.equipalpha -= 0.2;
				if(eq.equipalpha < 1.0 && eq.getvar(\~standardcard\~) != 1) eq.equipalpha += 0.2;
				if(eq.assigneddice.length > 0 && eq.assigneddice[0] != null) {
					eq.removedice();
					var neweq = eq.copy();				
					neweq.height = 270;
					neweq.width = 270;
					neweq.equipalpha = eq.equipalpha;
					neweq.displayname = eq.displayname;
					neweq.equipmentcol = eq.equipmentcol;
					neweq.slotpositions = eq.slotpositions;
					neweq.script = eq.script;
					self.equipment.push(neweq);
					eq.name = \~deleteme\~;
					eq.slots = [];
					eq.equipalpha = 0;
					if(eq.displayname != \~Confirm\~) {
						sfx(\~jackpot_increasecounter\~);
						if(eq.displayname == \~Bkspace\~ && wandwish.length > 6) wandwish = wandwish.substr(0|wandwish.length - 1);
						else
						if(eq.displayname.substr(0|1) == \~_\~) wandwish += \~_\~;
						else
						if(eq.displayname.substr(0|1) == \~[\~) wandwish += eq.displayname.substr(5|1);
						else
						if(eq.displayname != \~Bkspace\~) wandwish += eq.displayname.substr(0|1);
					}
					else {
						sfx(\~_thinghappens\~);
						self.setvar(\~phonephase2\~|1);
					}
				}
			}
			else {
				if(eq.equipalpha <= 1.0 && eq.getvar(\~standardcard\~) == 1) {
					eq.equipalpha += 0.2;
				}
				if(eq.equipalpha > 0.0 && eq.getvar(\~standardcard\~) != 1) {
					eq.removedice();
					eq.equipalpha -= 0.2;
					eq.slots = [];
					eq.script = \~self.equipmentused--;\~;
				}
				if(eq.equipalpha <= 0.0 && eq.getvar(\~standardcard\~) != 1) {
					eq.name = \~deleteme\~;
					phonedone = true;
				}
			}
		}
		
		new elements.CombatCommand(\~msg\~|wandwish).execute();
		self.setvar(\~wandwish\~|wandwish);
		
		removeequipment(\~deleteme\~);
		if(self.doendturnnow) {
			trace(\~ending turn\~);
			for(eq in self.equipment) {
				if(eq.getvar(\~standardcard\~) == 1) {
					eq.equipalpha = 1.0;
					eq.slots = self.getvar(\~slotsbackup\~)[self.getvar(\~slotseqbackup\~).indexOf(eq)];
					eq.shocked_slots = self.getvar(\~shockslotseqbackup\~)[self.getvar(\~slotseqbackup\~).indexOf(eq)];
					eq.skillsavailable = self.getvar(\~skillsbackup\~)[self.getvar(\~slotseqbackup\~).indexOf(eq)];
					if(self.usecpuinsteadofdice) self.roll_jackpot = self.getvar(\~rolljackpot\~);
				}
				else {
					eq.name = \~deleteme\~;
				}
			}
			removeequipment(\~deleteme\~);
			removeequipment(\~Equipment That Does Nothing\~);
			self.resetvar(\~slotsbackup\~);
			self.resetvar(\~slotseqbackup\~);
			self.resetvar(\~shockslotseqbackup\~);
			self.resetvar(\~skillsbackup\~);
			self.resetvar(\~rolljackpot\~);
			new elements.CombatCommand(\~msg\~|\~\~).execute();
			wandwish = wandwish.split(\~[200%]\~)[1].split(\~_\~).join(\~ \~);
			var wandwisharr = wandwish.split(\~\~);
			wandwish = \~\~;
			for(char in wandwisharr) wandwish = char + wandwish;
			var exceptions = getcolumn(loaddata(\~ncrmod/wishredirects\~)|\~exceptions\~);
			var redirects = getcolumn(loaddata(\~ncrmod/wishredirects\~)|\~redirect\~);
			if(exceptions.indexOf(wandwish) != -1) wandwish = redirects[exceptions.indexOf(wandwish)];
			if(getequipmentlist().indexOf(wandwish) != -1) {
				if(self.getvar(\~ncrrobotepisode4\~) == 1 && self.getvar(\~ncrrobotepisode4wishlist\~).indexOf(wandwish) != -1) { self.textparticle(\~Already wished!\~); }
				else {
					if(self.getvar(\~ncrrobotepisode4\~) == 1) {
						self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat([wandwish]));
						var familylist = loadtext(\~ncrmod/wishfamilies\~);
						for(i in 0...familylist.length)  {
							if(familylistsplit.indexOf(wandwish) != -1) {
								self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat(familylistsplit));
							}
						}
						if(!new elements.Equipment(wandwish).hastag(\~powercard\~)) {
							if(wandwish.substr(wandwish.length - 1|1) == \~?\~) {
								self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat([wandwish.substr(0|wandwish.length - 1)]));
							}
							else {
								self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat([wandwish + \~?\~]));
							}
						}
					}
					var newcard = new elements.Equipment(wandwish);
					var replacecard = self.equipment[self.equipment.indexOf(self.getvar(\~wishingcard\~))];
					trace(\~card made\~);
					newcard.x = self.getvar(\~wishingcardx\~);
					newcard.y = self.getvar(\~wishingcardy\~);
					self.equipment[self.equipment.indexOf(self.getvar(\~wishingcard\~))] = newcard;
					trace(\~card replaced\~);
					newcard.animate(\~flashandshake\~);
					self.setvar(\~doonthis\~|newcard); var estandardize = \~var e = self.getvar(\\\~doonthis\\\~); \~; var doscripts = new elements.Skill(\~Against all odds_old\~); doscripts.script = estandardize + newcard.scriptbeforecombat; doscripts.execute(self|target); doscripts.script = estandardize + newcard.scriptbeforestartturn; doscripts.execute(self|target); doscripts.script = estandardize + newcard.scriptonstartturn; doscripts.execute(self|target); self.resetvar(\~doonthis\~);
					newcard.arrangeslots();
					self.createsparedice(newcard);
					trace(\~card flashed\~);
				}
			}
			else self.textparticle(\~Invalid wish!\~);
			self.resetvar(\~wishingcard\~); self.resetvar(\~diditwork\~);
			self.getvar(\~wishactuator\~).stop();
			self.status = self.getvar(\~selfstatusbackup\~);
			target.status = self.getvar(\~targetstatusbackup\~);
			self.resetvar(\~selfstatusbackup\~);
			self.resetvar(\~targetstatusbackup\~);
			self.resetvar(\~phonephase2\~);
			self.resetvar(\~wishactuator\~);
			self.resetvar(\~wandwish\~);
			if(self.getvar(\~lendeddice\~) == 1) { for(dice in self.dicepool) { if(dice.available() && dice.basevalue == 1) { dice.animate(\~disappear\~); break; } } }
			self.resetvar(\~lendeddice\~);
		}
		
		if(phonedone) {
			for(eq in self.equipment) {
				if(eq.getvar(\~standardcard\~) == 1) {
					eq.equipalpha = 1.0;
					var importantindex = self.getvar(\~slotseqbackup\~).indexOf(eq);
					eq.slots = self.getvar(\~slotsbackup\~)[importantindex];
					eq.shocked_slots = self.getvar(\~shockslotseqbackup\~)[importantindex];
					eq.skillsavailable = self.getvar(\~skillsbackup\~)[importantindex];
					if(self.usecpuinsteadofdice) self.roll_jackpot = self.getvar(\~rolljackpot\~);
				}
			}
			removeequipment(\~Equipment That Does Nothing\~);
			self.resetvar(\~slotsbackup\~);
			self.resetvar(\~slotseqbackup\~);
			self.resetvar(\~shockslotseqbackup\~);
			self.resetvar(\~skillsbackup\~);
			self.resetvar(\~rolljackpot\~);
			new elements.CombatCommand(\~msg\~|\~\~).execute();
			wandwish = wandwish.split(\~[200%]\~)[1].split(\~_\~).join(\~ \~);
			var wandwisharr = wandwish.split(\~\~);
			wandwish = \~\~;
			for(char in wandwisharr) wandwish = char + wandwish;
			var exceptions = getcolumn(loaddata(\~ncrmod/wishredirects\~)|\~exceptions\~);
			var redirects = getcolumn(loaddata(\~ncrmod/wishredirects\~)|\~redirect\~);
			if(exceptions.indexOf(wandwish) != -1) wandwish = redirects[exceptions.indexOf(wandwish)];
			if(getequipmentlist().indexOf(wandwish) != -1) {
				if(self.getvar(\~ncrrobotepisode4\~) == 1 && self.getvar(\~ncrrobotepisode4wishlist\~).indexOf(wandwish) != -1) { self.textparticle(\~Already wished!\~); }
				else {
					if(self.getvar(\~ncrrobotepisode4\~) == 1) {
						self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat([wandwish]));
						var familylist = loadtext(\~ncrmod/wishfamilies\~);
						for(i in 0...familylist.length)  {
							if(familylistsplit.indexOf(wandwish) != -1) {
								self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat(familylistsplit));
							}
						}
						if(!new elements.Equipment(wandwish).hastag(\~powercard\~)) {
							if(wandwish.substr(wandwish.length - 1|1) == \~?\~) {
								self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat([wandwish.substr(0|wandwish.length - 1)]));
							}
							else {
								self.setvar(\~ncrrobotepisode4wishlist\~|self.getvar(\~ncrrobotepisode4wishlist\~).concat([wandwish + \~?\~]));
							}
						}
					}
					var newcard = new elements.Equipment(wandwish);
					var replacecard = self.equipment[self.equipment.indexOf(self.getvar(\~wishingcard\~))];
					trace(\~card made\~);
					newcard.x = self.getvar(\~wishingcardx\~);
					newcard.y = self.getvar(\~wishingcardy\~);
					self.equipment[self.equipment.indexOf(self.getvar(\~wishingcard\~))] = newcard;
					trace(\~card replaced\~);
					newcard.animate(\~flashandshake\~);
					self.setvar(\~doonthis\~|newcard); var estandardize = \~var e = self.getvar(\\\~doonthis\\\~); \~; var doscripts = new elements.Skill(\~Against all odds_old\~); doscripts.script = estandardize + newcard.scriptbeforecombat; doscripts.execute(self|target); doscripts.script = estandardize + newcard.scriptbeforestartturn; doscripts.execute(self|target); doscripts.script = estandardize + newcard.scriptonstartturn; doscripts.execute(self|target); self.resetvar(\~doonthis\~);
					newcard.arrangeslots();
					self.createsparedice(newcard);
					trace(\~card flashed\~);
				}
			}
			else self.textparticle(\~Invalid wish!\~);
			self.resetvar(\~wishingcard\~); self.resetvar(\~diditwork\~);
			self.getvar(\~wishactuator\~).stop();
			self.status = self.getvar(\~selfstatusbackup\~);
			target.status = self.getvar(\~targetstatusbackup\~);
			self.resetvar(\~selfstatusbackup\~);
			self.resetvar(\~targetstatusbackup\~);
			self.resetvar(\~phonephase2\~);
			self.resetvar(\~wishactuator\~);
			self.resetvar(\~wandwish\~);
			if(self.getvar(\~lendeddice\~) == 1) { for(dice in self.dicepool) { if(dice.available() && dice.basevalue == 1) { dice.animate(\~disappear\~); break; } } }
			self.resetvar(\~lendeddice\~);
		}
	~;
	tw.onRepeat(s.execute|[self|target]);
	self.setvar(~wishactuator~|tw);
	tw.move();
}