Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
Chalk,Roll an extra dice,1,givedice();,Magic Dice,COUNTDOWN,4,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Chalk_upgraded,Roll an extra dice|[gray](2 uses this turn),1,givedice();,Magic Dice,COUNTDOWN,4,BRIGHTCYAN,,,,,2,YES,NO,,,,,,,,,,,,,
Chalk_downgraded,Roll an extra dice[;]|get [vanish]1 vanish,1,givedice(); inflictself(~ncr_vanish~); sfx(~_vanish~);,Magic Dice,COUNTDOWN,4,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Stress Test,Calculate again[;] do [vanish]dmg|equal to number calculated,1,robotroll(); var d = 0; for (mydice in self.dicepool){ if (mydice.available()){ d = mydice.basevalue; } }; attack(d[;]VANISH); sfx(~_vanish~);,,COUNTDOWN,3,PINK,change_power,change_power,,,0,NO,NO,robotonly,,,,,,,,,,,,robotroll(); 
Stress Test_upgraded,Calculate again[;] do [vanish]dmg|equal to number calculated|,1,robotroll(); var d = 0; for (mydice in self.dicepool){ if (mydice.available()){ d = mydice.basevalue; } }; attack(d[;]VANISH); sfx(~_vanish~);,,COUNTDOWN,3,PINK,,,,,2,NO,NO,robotonly,,,,,,,,,,,,robotroll(); 
Stress Test_downgraded,Calculate again[;] deal|[vanish]1 damage,1,robotroll(); attack(1[;]VANISH); sfx(~_vanish~);,,COUNTDOWN,3,PINK,,,,,0,NO,NO,robotonly,,,,,,,,,,,,robotroll(); 
Paralyzing Fear,Deal [shock]2 damage[;] inflict [vanish]1|vanish[;] stun [stun]1 equipment,1,attack(2[;]SHOCK); sfx(~_vanish~); inflict(~mf_stun~); inflict(~ncr_vanish~); sfx(~_shock~);,Flashbang,COUNTDOWN,10,YELLOW,change_power,change_power,stun,,0,NO,NO,,1,,,,,,,,,,,
Paralyzing Fear_upgraded,Deal [shock]4 damage[;] inflict [vanish]2|vanish[;] stun [stun]1 equipment,1,attack(4[;]SHOCK); sfx(~_vanish~); inflict(~mf_stun~); inflict(~ncr_vanish~|2); sfx(~_shock~);,Flashbang,COUNTDOWN,10,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Paralyzing Fear_downgraded,Deal [shock]2 damage[;]|inflict [vanish]1 vanish,1,attack(2|SHOCK); sfxdamage(target[;]2); inflict(~ncr_vanish~); sfx(~_vanish~);,Flashbang,COUNTDOWN,10,YELLOW,,,,none,0,NO,NO,,,,,,,,,,,,,
Paralyzing Fear?,Deal [shock]2 damage[;] inflict [vanish]1|vanish[;] stun [stun]1 dice,1,attack(2[;]SHOCK); sfx(~_vanish~); inflict(~mf_stun~); inflict(~ncr_vanish~); sfx(~_shock~);,Flashbang,COUNTDOWN,10,YELLOW,change_power,change_power,,,0,NO,NO,alternateversion,1,,,,,,,,,,,
Paralyzing Fear?_upgraded,Deal [shock]4 damage[;] inflict [vanish]2|vanish[;] stun [stun]1 dice,1,attack(4[;]SHOCK); sfx(~_vanish~); inflict(~mf_stun~); inflict(~ncr_vanish~|2); sfx(~_shock~);,Flashbang,COUNTDOWN,10,YELLOW,,,,,0,NO,NO,alternateversion,,,,,,,,,,,,
Paralyzing Fear?_downgraded,Deal [shock]2 damage[;]|inflict [vanish]1 vanish,1,attack(2|SHOCK); sfxdamage(target[;]2); inflict(~ncr_vanish~); sfx(~_vanish~);,Flashbang,COUNTDOWN,10,YELLOW,,,,none,0,NO,NO,alternateversion,,,,,,,,,,,,
Fear Siphon,Drain [heart]3 health for each|[vanish]vanish on enemy,1,var drainamt = 0; if(getstatus(VANISH) > 0) { drainamt = target.dice + target.extradice + target.bonusdice; } else { drainamt = getstatus(~ncr_vanish~); } drain(drainamt * 3); sfx(~_vanish~); sfx(~_drain~);,Life Leech,COUNTDOWN,10,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Fear Siphon_upgraded,Drain [heart]4 health for each|[vanish]vanish on enemy,1,var drainamt = 0; if(getstatus(VANISH) > 0) { drainamt = target.dice + target.extradice + target.bonusdice; } else { drainamt = getstatus(~ncr_vanish~); } drain(drainamt * 4); sfx(~_vanish~); sfx(~_drain~);,Life Leech,COUNTDOWN,10,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Fear Siphon_downgraded,Drain [heart]2 health for each|[vanish]vanish on enemy,1,var drainamt = 0; if(getstatus(VANISH) > 0) { drainamt = target.dice + target.extradice + target.bonusdice; } else { drainamt = getstatus(~ncr_vanish~); } drain(drainamt * 2); sfx(~_vanish~); sfx(~_drain~);,Life Leech,COUNTDOWN,10,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Vanishing Act,Inflict [vanish]Vanish_ALL on both,1,inflict(VANISH); inflictself(VANISH); sfx(~_vanish~);,Hadoken,COUNTDOWN,12,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,inflictself(VANISH); sfx(~_vanish~);
Vanishing Act_upgraded,Inflict [vanish]Vanish_ALL on both[;] do|[vanish]2 dmg per own dice vanished,1,if(getstatusself(~alternate_reduce~) == 0) { var total = 0; var hasvalue = [false| false| false| false| false| false| false]; for (i in 0 ... self.dicepool.length){  if (self.dicepool[i].available()){   if (!hasvalue[self.dicepool[i].basevalue]){    hasvalue[self.dicepool[i].basevalue] = true;   }else{    total += 2;   }  } } } attack(total|VANISH); inflict(VANISH); inflictself(VANISH); sfx(~_vanish~);,Hadoken,COUNTDOWN,12,PINK,,,,,0,NO,NO,,,,,,,,,,,,,inflictself(VANISH); sfx(~_vanish~);
Vanishing Act_downgraded,Inflict [vanish]Vanish_ALL on yourself,1,inflictself(VANISH); sfx(~_vanish~);,Hadoken,COUNTDOWN,12,PINK,,,,,0,NO,NO,,,,,,,,,,,,,inflictself(VANISH); sfx(~_vanish~);
Panic Attack,[vanish]10 dmg + [vanish]2 vanish|[gray](once per battle),1,attack(10[;]VANISH); inflict(~ncr_vanish~[;]2); sfx(~_vanish~); sfxdamage(target|10);,Hadoken,COUNTDOWN,10,PINK,change_power,change_power,,,0,NO,YES,excludefromrandomlists,,,,,,,,,,,,
Panic Attack_upgraded,[vanish]13 dmg + [vanish]4 vanish|[gray](once per battle),1,attack(13[;]VANISH); inflict(~ncr_vanish~[;]4); sfx(~_vanish~); sfxdamage(target|13);,Hadoken,COUNTDOWN,10,PINK,,,,,0,NO,YES,excludefromrandomlists,,,,,,,,,,,,
Panic Attack_downgraded,[vanish]5 dmg + [vanish]1 vanish|[gray](once per battle),1,attack(5[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~); sfxdamage(target|5);,Hadoken,COUNTDOWN,10,PINK,,,,,0,NO,YES,excludefromrandomlists,,,,,,,,,,,,
Urn of Ashes,1-3: inflict [vanish]<d6> vanish|4-6: do [vanish]<d6> damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(~ncr_vanish~[;]d); }else{ attack(d[;]VANISH); sfxdamage(target|d); }; sfx(~_vanish~);,Hadoken,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Urn of Ashes_upgraded,1-3: inflict [vanish]3 vanish|4-6: do [vanish]6 damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(~ncr_vanish~[;]3); }else{ attack(6[;]VANISH); sfxdamage(target|6); }; sfx(~_vanish~);,Hadoken,NORMAL,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Urn of Ashes_downgraded,Deal [vanish]<d6> damage,2,attack(d[;]VANISH); sfx(~_vanish~);,Hadoken,MAX3,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Spiritual Medicine,Inflict [vanish]2 vanish[;]|inflict [poison]2 poison,1,inflict(~ncr_vanish~[;]2); sfx(~_vanish~); inflict(POISON[;]2); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Spiritual Medicine_upgraded,Inflict [vanish]3 vanish[;]|inflict [poison]3 poison,1,inflict(~ncr_vanish~[;]3); sfx(~_vanish~); inflict(POISON[;]3); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Spiritual Medicine_downgraded,Inflict [vanish]1 vanish[;]|inflict [poison]1 poison,1,inflict(~ncr_vanish~[;]1); sfx(~_vanish~); inflict(POISON[;]1); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Special Homerun,Deal [sword]<d6> damage|Inflict [vanish]1 vanish per|damage over 5 this does,2,var h = target.hp; attack(d); h-=target.hp; sfxdamage(target[;]d); if(h > 5){ inflict(~ncr_vanish~[;]h - 5); sfx(~_vanish~); };,Delude,MAX5,,RED,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Special Homerun_upgraded,Deal [sword]<d6> damage|Inflict [vanish]1 vanish per|damage over 4 this does,2,var h = target.hp; attack(d); h-=target.hp; sfxdamage(target[;]d); if(h > 4){ inflict(~ncr_vanish~[;]h - 4); sfx(~_vanish~); };,Delude,MAX5,,RED,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Special Homerun_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target[;]d);,Delude,MAX5,,RED,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Swing,Deal [sword]2 dmg[;] return dice[;]|but destroy a random dice|[gray](Reusable),2,attack(2[;]VANISH); sfx(~_vanish~); givedice(d); rand([for(dice in self.dicepool) if(dice.available()) dice]).animate(~disappear~);,Delude,NORMAL,,PURPLE,change_power,change_power,,,-1,NO,NO,excludefromrandomlists,,,,,,,,,,,,sfx(~_vanish~); givedice(d); rand([for(dice in self.dicepool) if(dice.available()) dice]).animate(~disappear~);
Swing_upgraded,Deal [sword]3 dmg[;] return dice[;]|but destroy a random dice|[gray](Reusable),2,attack(3[;]VANISH); sfx(~_vanish~); givedice(d); rand([for(dice in self.dicepool) if(dice.available()) dice]).animate(~disappear~);,Delude,NORMAL,,PURPLE,,,,,-1,NO,NO,excludefromrandomlists,,,,,,,,,,,,sfx(~_vanish~); givedice(d); rand([for(dice in self.dicepool) if(dice.available()) dice]).animate(~disappear~);
Swing_downgraded,Deal [sword]2 dmg[;] return dice[;]|but destroy a random dice,2,attack(2[;]VANISH); sfx(~_vanish~); givedice(d); rand([for(dice in self.dicepool) if(dice.available()) dice]).animate(~disappear~);,Delude,NORMAL,,PURPLE,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,sfx(~_vanish~); givedice(d); rand([for(dice in self.dicepool) if(dice.available()) dice]).animate(~disappear~);
Spooksword of Spooks,Deal [vanish]<double> damage|While equipped[;] [vanish]ALL of|your duplicate dice vanish,2,attack(d*2[;]VANISH); sfx(~_vanish~);,Delude,NORMAL,,PINK,change_power,change_power,vanish,,0,NO,NO,,,,,inflictself(VANISH); sfx(~_vanish~);,,,,,,,,
Spooksword of Spooks_upgraded,Deal [vanish]<double> damage|While equipped[;] [vanish]ALL of|your duplicate dice vanish,2,attack(d*2[;]VANISH); sfx(~_vanish~);,Delude,NORMAL|FREE1,,PINK,,,,,0,NO,NO,,,,,inflictself(VANISH); sfx(~_vanish~);,,,,,,,,
Spooksword of Spooks_downgraded,Deal [vanish]<double> damage|While equipped[;] [vanish]ALL of|your duplicate dice vanish,2,attack(2*d[;]VANISH); sfx(~_vanish~);,Delude,MAX3,,PINK,,,,,0,NO,NO,,,,,inflictself(VANISH); sfx(~_vanish~);,,,,,,,,
Spooksword of Spooks?,Deal [vanish]<double> damage|While equipped[;] each item|use may vanish a dice,2,attack(d*2[;]VANISH); sfx(~_vanish~);,Delude,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,,,,,inflictself(VANISH); sfx(~_vanish~);,,,,,,,,
Spooksword of Spooks?_upgraded,Deal [vanish]<double> damage|While equipped[;] each item|use may vanish a dice,2,attack(d*2[;]VANISH); sfx(~_vanish~);,Delude,NORMAL|FREE1,,PINK,,,,,0,NO,NO,,,,,inflictself(VANISH); sfx(~_vanish~);,,,,,,,,
Spooksword of Spooks?_downgraded,Deal [vanish]<double> damage|While equipped[;] each item|use may vanish a dice,2,attack(2*d[;]VANISH); sfx(~_vanish~);,Delude,MAX3,,PINK,,,,,0,NO,NO,,,,,inflictself(VANISH); sfx(~_vanish~);,,,,,,,,
Pandora's Tray,Roll 2 dice[;] get [vanish]2 vanish|[gray](Reusable),1,var amount = 2; var dicearray = []; for(x in 0...amount){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(dicearray); inflictself(~ncr_vanish~|amount);,Snake Eyes,COUNTDOWN,8,PURPLE,change_power,change_power,,,-1,YES,NO,,1,,,,,,,,,,,
Pandora's Tray_upgraded,Roll 3 dice[;] get [vanish]3 vanish|[gray](Reusable),1,var amount = 3; var dicearray = []; for(x in 0...amount){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(dicearray); inflictself(~ncr_vanish~|amount);,Snake Eyes,COUNTDOWN,8,PURPLE,,,,,-1,YES,NO,,,,,,,,,,,,,
Pandora's Tray_downgraded,Roll 1 dice[;] get [vanish]1 vanish|[gray](Reusable),1,var amount = 1; var dicearray = []; for(x in 0...amount){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(dicearray); inflictself(~ncr_vanish~|amount);,Snake Eyes,COUNTDOWN,8,PURPLE,,,,,-1,YES,NO,,,,,,,,,,,,,
Spectral Storm,[vanish]2 dmg to you and enemy|[gray](Reusable),1,attack(2[;]VANISH); sfx(~_vanish~); boomerang(2[;]VANISH);,Boom!,COUNTDOWN,2,PINK,change_power,change_power,,,-1,NO,NO,,1,,,,,,,,,,,
Spectral Storm_upgraded,[vanish]4 dmg to you and enemy|[gray](Reusable),1,attack(4[;]VANISH); sfx(~_vanish~); boomerang(4[;]VANISH);,Boom!,COUNTDOWN,2,PINK,,,,,-1,NO,NO,,,,,,,,,,,,,
Spectral Storm_downgraded,[vanish]2 dmg to yourself|[gray](Reusable),1,attackself(2[;]VANISH); sfx(~_vanish~);,Boom!,COUNTDOWN,2,PINK,,,,,-1,YES,NO,,,,,,,,,,,,,
Paralily,Inflict [vanish]1 vanish|(Cost [mana]2: +[vanish]1 extra),1,inflict(~ncr_vanish~); sfx(~_vanish~); if(getstatusself(MANA) >= 2){ removestatusself(MANA[;]2); inflict(~ncr_vanish~); };,Delude,NORMAL|NORMAL,5,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Paralily_upgraded,Inflict [vanish]1 vanish|(Cost [mana]2: +[vanish]1 extra),1,inflict(~ncr_vanish~); sfx(~_vanish~); if(getstatusself(MANA) >= 2){ removestatusself(MANA[;]2); inflict(~ncr_vanish~); };,Delude,MAX4|MAX4,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Paralily_downgraded,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Delude,NORMAL|NORMAL,5,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Ghost Imaging,Receive [vanish]vanish[;]|restore [heal]<d6> health,1,inflictself(~ncr_vanish~); attackself(-d); sfx(~_vanish~); sfx(~_heal~);,Delude,MAX5,,PINK,change_power,change_power,,,0,YES,NO,robotonly,,,,,,,,,,,,
Ghost Imaging_upgraded,Receive [vanish]vanish[;]|restore [heal]<d6> health,1,inflictself(~ncr_vanish~); attackself(-d); sfx(~_vanish~); sfx(~_heal~);,Delude,NORMAL,,PINK,,,,,0,YES,NO,robotonly,,,,,,,,,,,,
Ghost Imaging_downgraded,Receive [vanish]vanish[;]|restore [heal]<d6> health,1,inflictself(~ncr_vanish~); attackself(-d); sfx(~_vanish~); sfx(~_heal~);,Delude,MAX3,,PINK,,,,,0,YES,NO,robotonly,,,,,,,,,,,,
Salt Circle,Inflict [lock]1 lock per|[vanish]vanish on enemy,2,var lockamt = getstatus(~ncr_vanish~); if(getstatus(VANISH) > 0) lockamt = target.dice + target.extradice + target.bonusdice; inflict(LOCK[;]lockamt); sfx(~_vanish~); sfx(~_lock~);,Padlock,EVEN,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Salt Circle_upgraded,Inflict [lock]1 lock per|[vanish]vanish on enemy,2,var lockamt = getstatus(~ncr_vanish~); if(getstatus(VANISH) > 0) lockamt = target.dice + target.extradice + target.bonusdice; inflict(LOCK[;]lockamt); sfx(~_vanish~); sfx(~_lock~);,Padlock,NORMAL,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Salt Circle_downgraded,Inflict [lock]1 lock if|enemy has [vanish]vanish,2,if(getstatus(~ncr_vanish~) > 0 # getstatus(VANISH) > 0){ inflict(LOCK[;]1); }; sfx(~_vanish~); sfx(~_lock~);,Padlock,EVEN,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Magic Mushroom,Inflict [weaken]1 weaken[;] [vanish]1|vanish & [poison]2 poison,1,inflict(~ncr_vanish~); inflict(WEAKEN[;]1); inflict(POISON[;]2); sfx(~_vanish~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,PURPLE,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Magic Mushroom_upgraded,Inflict [weaken]1 weaken[;] [vanish]2|vanish & [poison]3 poison,1,inflict(~ncr_vanish~[;]2); inflict(WEAKEN[;]1); inflict(POISON[;]3); sfx(~_vanish~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Magic Mushroom_downgraded,Inflict [weaken]1 weaken[;] [vanish]1|vanish or [poison]2 poison,1,var f = [~ncr_vanish~[;]WEAKEN[;]POISON]; inflict(rand(f)[;]1); sfx(~_vanish~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Phantom Dirk,Deal [vanish]<d6> damage|On even[;] inflict [vanish]2 vanish,1,attack(d[;]VANISH); sfx(~_vanish~); if(d%2 == 0){ inflict(~ncr_vanish~[;]2); };,Delude,MAX4,,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Phantom Dirk_upgraded,Deal [vanish]<d6> damage|On even[;] inflict [vanish]2 vanish,1,attack(d[;]VANISH); sfx(~_vanish~); if(d%2 == 0){ inflict(~ncr_vanish~[;]2); };,Delude,NORMAL,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Phantom Dirk_downgraded,Deal [vanish]<d6> damage,1,attack(d[;]VANISH); sfx(~_vanish~);,Delude,MAX4,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Dark Arts,[vanish]<double> damage. Next turn[;]|you get [vanish]<d6> vanish,2,attack(d*2[;]VANISH); jinx(~Dark Arts~[;]~get [vanish]%VAR% vanish~[;]~Get [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~[;]%VAR%); sfx(\~_vanish\~);~[;]self[;]self[;]1[;]d); sfx(~_vanish~);,Strobe Light,MAX5,,GRAY,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,jinx(~Dark Arts~[;]~get [vanish]%VAR% vanish~[;]~Get [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~[;]%VAR%); sfx(\~_vanish\~);~[;]self[;]self[;]1[;]d); sfx(~_vanish~);
Dark Arts_upgraded,[vanish]<double> damage. Next turn[;]|you get [vanish]<d6> vanish,2,attack(d*2[;]VANISH); jinx(~Dark Arts~[;]~get [vanish]%VAR% vanish~[;]~Get [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~[;]%VAR%); sfx(\~_vanish\~);~[;]self[;]self[;]1[;]d); sfx(~_vanish~);,Strobe Light,NORMAL,,GRAY,,,,,0,NO,NO,,,,,,,,,,,,,jinx(~Dark Arts~[;]~get [vanish]%VAR% vanish~[;]~Get [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~[;]%VAR%); sfx(\~_vanish\~);~[;]self[;]self[;]1[;]d); sfx(~_vanish~);
Dark Arts_downgraded,[vanish]<d6> damage. Next turn[;]|you get [vanish]<d6> vanish,2,attack(d[;]VANISH); jinx(~Dark Arts~[;]~get [vanish]%VAR% vanish~[;]~Get [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~[;]%VAR%); sfx(\~_vanish\~);~[;]self[;]self[;]1[;]d); sfx(~_vanish~);,Strobe Light,MAX5,,GRAY,,,,,0,NO,NO,,,,,,,,,,,,,jinx(~Dark Arts~[;]~get [vanish]%VAR% vanish~[;]~Get [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~[;]%VAR%); sfx(\~_vanish\~);~[;]self[;]self[;]1[;]d); sfx(~_vanish~);
Paranoia,Double the enemy's|[vanish]vanish,1,inflict(~ncr_vanish~[;]getstatus(~ncr_vanish~)); sfx(~_vanish~);,Delude,COUNTDOWN,6,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Paranoia_upgraded,Triple the enemy's|[vanish]vanish,1,inflict(~ncr_vanish~[;]getstatus(~ncr_vanish~) * 2); sfx(~_vanish~);,Delude,COUNTDOWN,6,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Paranoia_downgraded,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Delude,COUNTDOWN,6,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Spectrodrop,Inflict [vanish]2 vanish|(If [mana]>=3: do [vanish]<d6> damage),1,inflict(~ncr_vanish~|2); sfx(~_vanish~); if(getstatusself(MANA) >= 3){ attack(d[;]VANISH); };,Hadoken,NORMAL|NORMAL,6,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Spectrodrop_upgraded,Inflict [vanish]2 vanish|(If [mana]>=3: do [vanish]<d6> damage),1,inflict(~ncr_vanish~|2); sfx(~_vanish~); if(getstatusself(MANA) >= 3){ attack(d[;]VANISH); };,Hadoken,NORMAL|NORMAL,8,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Spectrodrop_downgraded,Inflict [vanish]2 vanish|(If [mana]>=3: do [vanish]<d6> damage),1,inflict(~ncr_vanish~|2); sfx(~_vanish~); if(getstatusself(MANA) >= 3){ attack(d[;]VANISH); };,Hadoken,NORMAL|NORMAL,4,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Monster Ash,[fire]<d6> dmg + [fire]1 burn[;] twice|if enemy has [vanish] vanish,1,if(getstatus(~ncr_vanish~) > 0 # getstatus(VANISH) > 0){ attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~[;]~~[;]0.2); }; attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX4,,RED,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Monster Ash_upgraded,[fire]<d6> dmg + [fire]1 burn[;] twice|if enemy has [vanish] vanish,1,if(getstatus(~ncr_vanish~) > 0 # getstatus(VANISH) > 0){ attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~[;]~~[;]0.2); }; attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX5,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Monster Ash_downgraded,Deal [fire] <d6> damage|Inflict [fire]1 burn,1,attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX4,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Pyrophobia,[vanish]<d6> dmg + [vanish]1 vanish[;] twice|if enemy is [fire] burning,1,if(getstatus(FIRE) > 0){ attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.2); }; attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX4,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Pyrophobia_upgraded,[vanish]<d6> dmg + [vanish]1 vanish[;] twice|if enemy is [fire] burning,1,if(getstatus(FIRE) > 0){ attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.2); }; attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX5,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Pyrophobia_downgraded,Deal [vanish] <d6> damage|Inflict [vanish]1 vanish,1,attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX4,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Tears for Fears,[ice]<d6> dmg + [ice]1 freeze[;] twice|if enemy has [vanish] vanish,1,if(getstatus(~ncr_vanish~) > 0 # getstatus(VANISH) > 0){ attack(d[;]ICE); inflict(ICE); sfx(~_ice~[;]~~[;]0.2); }; attack(d[;]ICE); inflict(ICE); sfx(~_ice~);,Flash Freeze,MAX4,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Tears for Fears_upgraded,[ice]<d6> dmg + [ice]1 freeze[;] twice|if enemy has [vanish] vanish,1,if(getstatus(~ncr_vanish~) > 0 # getstatus(VANISH) > 0){ attack(d[;]ICE); inflict(ICE); sfx(~_ice~[;]~~[;]0.2); }; attack(d[;]ICE); inflict(ICE); sfx(~_ice~);,Flash Freeze,MAX5,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Tears for Fears_downgraded,Deal [ice]<d6> damage|Inflict [ice]1 freeze,1,attack(d[;]ICE); inflict(ICE); sfx(~_ice~);,Flash Freeze,MAX4,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Christmas Past,[vanish]<d6> dmg + [vanish]1 vanish[;] twice|if enemy is [ice] frozen,1,if(getstatus(ICE) > 0){ attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.2); }; attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX4,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Christmas Past_upgraded,[vanish]<d6> dmg + [vanish]1 vanish[;] twice|if enemy is [ice] frozen,1,if(getstatus(ICE) > 0){ attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.2); }; attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX5,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Christmas Past_downgraded,Deal [vanish] <d6> damage|Inflict [vanish]1 vanish,1,attack(d[;]VANISH); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX4,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Bottled Death,[vanish]4 damage + [vanish]1 vanish|[gray](once per battle),1,attack(4[;]VANISH); sfxdamage(target[;]4); inflict(~ncr_vanish~); sfx(~_vanish~);,Strobe Light,NORMAL,,PURPLE,change_power,change_power,,,0,NO,YES,excludefromrandomlists,,,,,,,,,,,,
Bottled Death_upgraded,[vanish]6 damage + [vanish]1 vanish|[gray](once per battle),1,attack(6[;]VANISH); sfxdamage(target[;]6); inflict(~ncr_vanish~); sfx(~_vanish~);,Strobe Light,NORMAL,,PURPLE,,,,,0,NO,YES,excludefromrandomlists,,,,,,,,,,,,
Bottled Death_downgraded,[vanish]2 damage + [vanish]1 vanish|[gray](once per battle),1,attack(2[;]VANISH); sfxdamage(target[;]2); inflict(~ncr_vanish~); sfx(~_vanish~);,Strobe Light,NORMAL,,PURPLE,,,,,0,NO,YES,excludefromrandomlists,,,,,,,,,,,,
Fear of Justice,[vanish]4 damage + [vanish]1 vanish|,2,attack(4[;]VANISH); sfxdamage(target[;]4); inflict(~ncr_vanish~); sfx(~_vanish~);,Strobe Light,REQUIRE6,,PINK,change_power,change_power,,,-1,NO,NO,,,,,,,,,,,,,
Fear of Justice_upgraded,[vanish]4 damage + [vanish]1 vanish|,2,attack(4[;]VANISH); sfxdamage(target[;]4); inflict(~ncr_vanish~); sfx(~_vanish~);,Strobe Light,MIN5,,PINK,,,,,-1,NO,NO,,,,,,,,,,,,,
Fear of Justice_downgraded,[vanish]2 damage + [vanish]1 vanish|,2,attack(2[;]VANISH); sfxdamage(target[;]2); inflict(~ncr_vanish~); sfx(~_vanish~);,Strobe Light,REQUIRE6,,PINK,,,,,-1,NO,NO,,,,,,,,,,,,,
Ghostburst,Do [vanish]<double> dmg + [vanish]1 vanish|Roll 2 fewer dice next turn,1,attack(d*2[;]VANISH); inflict(~ncr_vanish~); sfxdamage(target[;]d*2); sfx(~_vanish~); self.bonusdicenextturn-=2;,Delude,MAX5,,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,self.bonusdicenextturn-=2;
Ghostburst_upgraded,Do [vanish]<double> dmg + [vanish]1 vanish|Roll 2 fewer dice next turn,1,attack(d*2[;]VANISH); inflict(~ncr_vanish~); sfxdamage(target[;]d*2); sfx(~_vanish~); self.bonusdicenextturn-=2;,Delude,NORMAL,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,self.bonusdicenextturn-=2;
Ghostburst_downgraded,Do [vanish]<double> dmg + [vanish]1 vanish|Roll 2 fewer dice next turn,1,attack(d*2[;]VANISH); inflict(~ncr_vanish~); sfxdamage(target[;]d*2); sfx(~_vanish~); self.bonusdicenextturn-=2;,Delude,MAX3,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,self.bonusdicenextturn-=2;
Three Card Monte,Inflict [vanish]1 vanish[;] deal [sword]<d6>|damage on 3 or less,1,if(d <= 3){ attack(d); sfxdamage(target[;]d); }; inflict(~ncr_vanish~); sfx(~_vanish~);,Delude,NORMAL,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Three Card Monte_upgraded,Inflict [vanish]1 vanish[;] deal [sword]<d6>|damage on 4 or less,1,if(d <= 4){ attack(d); sfxdamage(target[;]d); }; inflict(~ncr_vanish~); sfx(~_vanish~);,Delude,NORMAL,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Three Card Monte_downgraded,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Delude,NORMAL,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,,,,
Ghost Pepper,Even: Inflict [vanish]1 vanish|Odd: [sword]1 dmg[;] reroll dice,1,if(d%2 == 0){ inflict(~ncr_vanish~); sfx(~_vanish~); }else{ attack(1); sfxdamage(target[;]1); givedice(); };,Delude,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,if(d%2 == 1){givedice();};
Ghost Pepper_upgraded,Even: Inflict [vanish]2 vanish|Odd: [sword]2 dmg[;] reroll dice,1,if(d%2 == 0){ inflict(~ncr_vanish~|2); sfx(~_vanish~); }else{ attack(2); sfxdamage(target[;]2); givedice(); };,Delude,NORMAL,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,if(d%2 == 1){givedice();};
Ghost Pepper_downgraded,Even: Inflict [vanish]1 vanish|Odd: [sword]1 dmg[;] reroll dice,1,if(d%2 == 0){ inflict(~ncr_vanish~); sfx(~_vanish~); }else{ attack(1); sfxdamage(target[;]1); givedice(); };,Delude,MIN4,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,if(d%2 == 1){givedice();};
Strange Cauldron,Inflict [vanish]1 vanish[;] get a|new dice with unique value,1,inflict(~ncr_vanish~); sfx(~_vanish~); var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) {givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); givedice(notseen[0]); },Delude,ODD,,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,if(actualdice[0].basevalue <=6){ var t = []; var x = 6; while(x > actualdice[0].basevalue){ t.push(x); x-=1; }; givedice(rand(t)); }else{ givedice(6); }; self.dicepool[self.dicepool.length - 1].animate(~fire~);
Strange Cauldron_upgraded,+[vanish]1[;] get a unique dice|,1,inflict(~ncr_vanish~); sfx(~_vanish~); var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) {givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); givedice(notseen[0]); },Delude,ODD,,PINK,,,,,2,NO,NO,,,,,,,,,,,,,if(actualdice[0].basevalue <=6){ var t = []; var x = 6; while(x > actualdice[0].basevalue){ t.push(x); x-=1; }; givedice(rand(t)); }else{ givedice(6); }; self.dicepool[self.dicepool.length - 1].animate(~fire~);
Strange Cauldron_downgraded,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Delude,ODD,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Fool's Lance,Inflict [vanish]Vanish_ALL,1,inflict(VANISH); sfx(~_vanish~);,Mass Deception,COUNTDOWN,9,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Fool's Lance_upgraded,Inflict [vanish]Vanish_ALL deal [vanish]1|dmg per dice enemy rolls,1,inflict(VANISH); sfx(~_vanish~); var s = target.dice+target.extradice+target.bonusdice; attack(s|VANISH); sfxdamage(target|s);,Mass Deception,COUNTDOWN,9,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Fool's Lance_downgraded,Inflict [vanish]2 vanish,1,inflict(~ncr_vanish~|2); sfx(~_fire~);,Mass Deception,COUNTDOWN,9,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Blade of October,Deal [sword]<d6> damage. On 21[;]|inflict [weaken]1[;] [shock]1 and [vanish]1,2,attack(d); sfxdamage(target[;]d); sfx(~_magic~); if(d == 21){ inflict(WEAKEN); sfx(~_weaken~); inflict(SHOCK); sfx(~_shock~[;]~~[;]0.6); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.7); };,JOAT Smash,MIN4|MIN4|MIN4|MIN4,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Blade of October_upgraded,Deal [sword]<d6> damage. On 21[;]|inflict [weaken]1[;] [shock]1 and [vanish]1,2,attack(d); sfxdamage(target[;]d); sfx(~_magic~); if(d == 21){ inflict(WEAKEN); sfx(~_weaken~); inflict(SHOCK); sfx(~_shock~[;]~~[;]0.6); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.7); };,JOAT Smash,MIN3|MIN3|MIN3|MIN3,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Blade of October_downgraded,Deal [sword]<d6> damage. On 21[;]|inflict [weaken]1[;] [shock]1 and [vanish]1,2,attack(d); sfxdamage(target[;]d); sfx(~_magic~); if(d == 21){ inflict(WEAKEN); sfx(~_weaken~); inflict(SHOCK); sfx(~_shock~[;]~~[;]0.6); inflict(~ncr_vanish~); sfx(~_vanish~[;]~~[;]0.7); };,JOAT Smash,REQUIRE6|REQUIRE5|REQUIRE4|REQUIRE6,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Specter Panel,Deal [sword]<d6> damage|([vanish]Vanish enemy each turn),2,attack(d); sfxdamage(target|d);,Delude,MAX5,,PINK,change_power,change_power,,,0,NO,NO,,,,,,e.animate(~flashandshake~); inflict(~ncr_vanish~); sfx(~_vanish~);,,,,,,,
Specter Panel_upgraded,Deal [sword]<d6> damage|([vanish]Vanish enemy each turn),2,attack(d); sfxdamage(target|d);,Delude,MAX5|FREE2,,PINK,,,,,0,NO,NO,,,,,,e.animate(~flashandshake~); inflict(~ncr_vanish~); sfx(~_vanish~);,,,,,,,
Specter Panel_downgraded,Deal [sword]<d6> damage|([vanish]Vanish enemy each turn),2,attack(d); sfxdamage(target|d);,Delude,MAX3,,PINK,,,,,0,NO,NO,,,,,,e.animate(~flashandshake~); inflict(~ncr_vanish~); sfx(~_vanish~);,,,,,,,
Holy Ghost,Deal [sword]<d6> damage[;] add|[vanish]1 vanish if used first,2,attack(d); sfxdamage(target|d); if(self.equipmentused <= 1){inflict(~ncr_vanish~); sfx(~_vanish~);};,Delude,MAX4|FREE2,,PINK,change_power,change_power,,,0,NO,NO,,,,,e.changecolour(~PINK~);,,if(self.equipmentused >= 1){e.changecolour(~GRAY~);};,,,,,,
Holy Ghost_upgraded,Deal [sword]<d6> damage[;] add|[vanish]1 vanish if used first,2,attack(d); sfxdamage(target|d); if(self.equipmentused <= 1){inflict(~ncr_vanish~); sfx(~_vanish~);};,Delude,NORMAL|FREE2,,PINK,,,,,0,NO,NO,,,,,e.changecolour(~PINK~);,,if(self.equipmentused >= 1){e.changecolour(~GRAY~);};,,,,,,
Holy Ghost_downgraded,Deal [sword]<d6> damage[;] add|[vanish]1 vanish if used first,2,attack(d); sfxdamage(target|d); if(self.equipmentused <= 1){inflict(~ncr_vanish~); sfx(~_vanish~);};,Delude,MAX4,,PINK,,,,,0,NO,NO,,,,,e.changecolour(~PINK~);,,if(self.equipmentused >= 1){e.changecolour(~GRAY~);};,,,,,,
Penance of Folly,Gain [heart]2 max hp if you win|(Receive [vanish]1 each turn),1,,Mutagen,,,PINK,change_power,change_power,,,0,NO,NO,,,,if(!flee){self.maxhp+=2; self.hp+=2; sfx(~_cure~); };,,e.animate(~flashandshake~); sfx(~_vanish~); inflictself(~ncr_vanish~);,,,,,,,
Penance of Folly_upgraded,Gain [heart]3 max hp if you win|(Receive [vanish]1 each turn),1,,Mutagen,,,PINK,,,,,0,NO,NO,,,,if(!flee){self.maxhp+=3; self.hp+=3; sfx(~_cure~); };,,e.animate(~flashandshake~); sfx(~_vanish~); inflictself(~ncr_vanish~);,,,,,,,
Penance of Folly_downgraded,No effect if you win|(Receive [vanish]1 each turn),1,,Mutagen,,,PINK,,,,,0,NO,NO,,,,,,e.animate(~flashandshake~); sfx(~_vanish~); inflictself(~ncr_vanish~);,,,,,,,
Tempting Fate,[vanish]<triple> damage + [vanish]1 vanish[;]|(Enemy gets [dodge]1 each turn),2,attack(d*3|VANISH); sfx(~_vanish~); sfxdamage(target|d*3);,Delude,MAX4,,PINK,change_power,change_power,,,0,NO,NO,,,,,inflict(DODGE);,e.animate(~flashandshake~); sfx(~_dodge~);,,,,,,,
Tempting Fate_upgraded,[vanish]<triple> damage + [vanish]1 vanish[;]|(Enemy gets [dodge]1 each turn),2,attack(d*3|VANISH); sfx(~_vanish~); sfxdamage(target|d*3);,Delude,MAX5,,PINK,,,,,0,NO,NO,,,,,inflict(DODGE);,e.animate(~flashandshake~); sfx(~_dodge~);,,,,,,,
Tempting Fate_downgraded,[vanish]<triple> damage + [vanish]1 vanish[;]|(Enemy gets [dodge]1 each turn),2,attack(d*3|VANISH); sfx(~_vanish~); sfxdamage(target|d*3);,Delude,MAX2,,PINK,,,,,0,NO,NO,,,,,inflict(DODGE);,e.animate(~flashandshake~); sfx(~_dodge~);,,,,,,,
Draugurteinn,Deal [vanish]10 damage|(Start of turn: inflict [vanish]1[]),2,attack(10|VANISH); sfxdamage(target|10); sfx(~_vanish~); /*thanks wiktionary*/,Mass Deception,COUNTDOWN,16,PINK,change_power,change_power,,,0,NO,NO,,,,,,inflict(FIRE); sfx(~_fire~);,,,,,,,
Draugurteinn_upgraded,Deal [vanish]14 damage|(Start of turn: inflict [vanish]1[]),2,attack(14|VANISH); sfxdamage(target|14); sfx(~_vanish~);,Mass Deception,COUNTDOWN,16,PINK,,,,,0,NO,NO,,,,,,inflict(FIRE); sfx(~_fire~);,,,,,,,
Draugurteinn_downgraded,Deal [vanish]5 damage|(Start of turn: inflict [vanish]1[]),2,attack(5|VANISH); sfxdamage(target|5); sfx(~_vanish~);,Mass Deception,COUNTDOWN,16,PINK,,,,,0,NO,NO,,,,,,inflict(FIRE); sfx(~_fire~);,,,,,,,
Diluteplicate,Duplicate a dice[;] but results|will vanish in 2 seconds,1,givedice([d[;]d]); var s = self.dicepool; s[s.length - 1].animate(~disappear~|2.2); s[s.length - 2].animate(~disappear~|2.0);,Boom!,MAX4,,PINK,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Diluteplicate_upgraded,Duplicate a dice[;] but results|will vanish in 2 seconds,1,givedice([d[;]d]); var s = self.dicepool; s[s.length - 1].animate(~disappear~|2.2); s[s.length - 2].animate(~disappear~|2.0);,Boom!,NORMAL,,PINK,,,,,0,YES,NO,,,,,,,,,,,,,
Diluteplicate_downgraded,Duplicate a dice[;] but results|will vanish in 2 seconds,1,givedice([d[;]d]); var s = self.dicepool; s[s.length - 1].animate(~disappear~|2.2); s[s.length - 2].animate(~disappear~|2.0);,Boom!,MAX2,,PINK,,,,,0,YES,NO,,,,,,,,,,,,,
Ominous Wind,Deal [sword]<d6> damage|On 6[;] inflict [fright]1 fright,2,attack(d); sfxdamage(target|d); if(d == 6){sfx(~_vanish~|~~|0.2); inflict(~ncr_fright~);};,Jumpscare,NORMAL,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Ominous Wind_upgraded,Deal [sword]<d6> damage|On 6[;] inflict [fright]2 fright,2,attack(d); sfxdamage(target|d); if(d == 6){sfx(~_vanish~|~~|0.2); inflict(~ncr_fright~);};,Jumpscare,NORMAL,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Ominous Wind_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Jumpscare,NORMAL,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Abnormally Spooky Pebble,Inflict [fright]1 fright|[70%][gray]''You mean pebbles aren't spooky?''[],1,inflict(~ncr_fright~); sfx(~_vanish~); ,Jumpscare,MIN4,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Abnormally Spooky Pebble_upgraded,Inflict [fright]2 fright|[70%][gray]''You mean pebbles aren't spooky?''[],1,inflict(~ncr_fright~|2); sfx(~_vanish~); ,Jumpscare,MIN4,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Abnormally Spooky Pebble_downgraded,Inflict [fright]1 fright|[70%][gray]''You mean pebbles aren't spooky?''[],1,inflict(~ncr_fright~); sfx(~_vanish~); ,Jumpscare,REQUIRE4,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Deep Creep,[vanish]2 damage + [fright]2 fright|,1,attack(2|VANISH); inflict(~ncr_fright~|2); sfx(~_vanish~); sfxdamage(target|2);,Jumpscare,COUNTDOWN,10,PURPLE,change_power,change_power,,,-1,NO,NO,,,,,,,,,,,,,
Deep Creep_upgraded,[vanish]3 damage + [fright]3 fright|,1,attack(3|VANISH); inflict(~ncr_fright~|3); sfx(~_vanish~); sfxdamage(target|3);,Jumpscare,COUNTDOWN,10,PURPLE,,,,,-1,NO,NO,,,,,,,,,,,,,
Deep Creep_downgraded,[vanish]1 damage + [fright]1 fright|,1,attack(1|VANISH); inflict(~ncr_fright~|1); sfx(~_vanish~); sfxdamage(target|1);,Jumpscare,COUNTDOWN,10,PURPLE,,,,,-1,NO,NO,,,,,,,,,,,,,
Frightful Potion,Inflict [fright]4 fright|[gray](once per battle),2,inflict(~ncr_fright~|4); sfx(~_vanish~); ,Jumpscare,COUNTDOWN,8,PURPLE,change_power,change_power,,,0,NO,YES,,,,,,,,,,,,,
Frightful Potion_upgraded,Inflict [fright]6 fright|[gray](once per battle),2,inflict(~ncr_fright~|6); sfx(~_vanish~); ,Jumpscare,COUNTDOWN,8,PURPLE,,,,,0,NO,YES,,,,,,,,,,,,,
Frightful Potion_downgraded,Inflict [fright]1 fright,2,inflict(~ncr_fright~|1); sfx(~_vanish~); ,Jumpscare,COUNTDOWN,8,PURPLE,,,,,0,NO,YES,,,,,,,,,,,,,
Fear Strike,Gain [shield]Pierce[;] then|deal [vanish]5 damage,2,inflictself(~pierce~); sfx(~_magic~); attack(5|VANISH); sfxdamage(target|5); sfx(~_vanish~|~~|0.3);,Hadoken,COUNTDOWN,5,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,inflictself(~pierce~); sfx(~_magic~);
Fear Strike_upgraded,Gain [shield]Pierce[;] then|deal [vanish]8 damage,2,inflictself(~pierce~); sfx(~_magic~); attack(8|VANISH); sfxdamage(target|8); sfx(~_vanish~|~~|0.3);,Hadoken,COUNTDOWN,5,PINK,,,,,0,NO,NO,,,,,,,,,,,,,inflictself(~pierce~); sfx(~_magic~);
Fear Strike_downgraded,Gain [shield]Pierce[;] then|deal [vanish]3 damage,2,inflictself(~pierce~); sfx(~_magic~); attack(3|VANISH); sfxdamage(target|3); sfx(~_vanish~|~~|0.3);,Hadoken,COUNTDOWN,5,PINK,,,,,0,NO,NO,,,,,,,,,,,,,inflictself(~pierce~); sfx(~_magic~);
Invisible Shotgun,Deal [vanish]<triple> damage|to everyone,1,attack(d*3|VANISH); sfx(~_vanish~); sfxdamage(target|d*3); attackself(d*3|VANISH); sfxdamage(self|d*3);,Boom!,MAX4,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Invisible Shotgun_upgraded,Deal [vanish]<triple> damage|to everyone,1,attack(d*3|VANISH); sfx(~_vanish~); sfxdamage(target|d*3); attackself(d*3|VANISH); sfxdamage(self|d*3);,Boom!,MAX5,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Invisible Shotgun_downgraded,Deal [vanish]<triple> damage|to everyone,1,attack(d*3|VANISH); sfx(~_vanish~); sfxdamage(target|d*3); attackself(d*3|VANISH); sfxdamage(self|d*3);,Boom!,MAX3,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
False Idol,At the start of turn <d6>[;]|inflict [vanish]3 vanish,1,if(turn >= d){self.textparticle(~No effect!~);}else{jinx(~Flame Idol~[;]~inflict [vanish]%VAR% vanish~[;]~Inflict [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~|%VAR%); sfx(\~_vanish\~);~[;]target[;]self[;]d-turn[;]3); sfx(~_magic~);};,Whacksies,MIN2,,PINK,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
False Idol_upgraded,At the start of turn <d6>[;]|inflict [vanish]6 vanish,1,if(turn >= d){self.textparticle(~No effect!~);}else{jinx(~Flame Idol~[;]~inflict [vanish]%VAR% vanish~[;]~Inflict [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~|%VAR%); sfx(\~_vanish\~);~[;]target[;]self[;]d-turn[;]6); sfx(~_magic~);};,Whacksies,MIN2,,PINK,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
False Idol_downgraded,At the start of turn <d6>[;]|inflict [vanish]1 vanish,1,if(turn >= d){self.textparticle(~No effect!~);}else{jinx(~Flame Idol~[;]~inflict [vanish]%VAR% vanish~[;]~Inflict [vanish]%VAR% vanish~[;]~inflict(\~ncr_vanish\~|%VAR%); sfx(\~_vanish\~);~[;]target[;]self[;]d-turn[;]1); sfx(~_magic~);};,Whacksies,MIN2,,PINK,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Bermuda Trishula,Deal [vanish]7 dmg[;] triple if enemy|has at least [vanish]1 per dice,1,var dmg = 7; if(getstatus(VANISH) > 0 # getstatus(~ncr_vanish~) >= target.dice+target.extradice+target.bonusdice){dmg = dmg * 3;}; attack(dmg|VANISH); sfxdamage(target|dmg); sfx(~_vanish~);,Mass Deception,COUNTDOWN,11,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Bermuda Trishula_upgraded,Deal [vanish]11 dmg[;] triple if enemy|has at least [vanish]1 per dice,1,var dmg = 11; if(getstatus(VANISH) > 0 # getstatus(~ncr_vanish~) >= target.dice+target.extradice+target.bonusdice){dmg = dmg * 3;}; attack(dmg|VANISH); sfxdamage(target|dmg); sfx(~_vanish~);,Mass Deception,COUNTDOWN,11,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Bermuda Trishula_downgraded,Deal [vanish]5 dmg[;] triple if enemy|has at least [vanish]1 per dice,1,var dmg = 5; if(getstatus(VANISH) > 0 # getstatus(~ncr_vanish~) >= target.dice+target.extradice+target.bonusdice){dmg = dmg * 3;}; attack(dmg|VANISH); sfxdamage(target|dmg); sfx(~_vanish~);,Mass Deception,COUNTDOWN,11,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Fear Launch,Roll a new dice[;] do [vanish] vanish|dmg equal to its value,1,var r = rand([1|2|3|4|5|6]); givedice(r); attack(r[;]VANISH); sfx(~_vanish~);,Hadoken,COUNTDOWN,6,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,givedice();
Fear Launch_upgraded,Roll a new dice[;] do [vanish] vanish|dmg equal to its value|,1,var r = rand([1|2|3|4|5|6]); givedice(r); attack(r[;]VANISH); sfx(~_vanish~);,Hadoken,COUNTDOWN,6,PINK,,,,,2,NO,NO,,,,,,,,,,,,,givedice();
Fear Launch_downgraded,Roll a new dice[;] do [vanish] vanish|dmg equal to its value[;]|receive [vanish]1 vanish,1,var r = rand([1|2|3|4|5|6]); givedice(r); attack(r[;]VANISH); sfx(~_vanish~); inflictself(~ncr_vanish~);,Hadoken,COUNTDOWN,6,PINK,,,,,0,NO,NO,,,,,,,,,,,,,givedice();
Slade's Braid,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,COUNTDOWN,2,PINK,change_power,change_power,,,0,NO,NO,,1,,,,,,,,,,,
Slade's Braid_upgraded,Inflict [vanish]1 vanish|,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,COUNTDOWN,2,PINK,,,,,2,NO,NO,,,,,,,,,,,,,
Slade's Braid_downgraded,Inflict [haunted]1 haunt,1,inflict(HAUNTED); sfx(~_curse~);,Hadoken,COUNTDOWN,2,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Baddy Bad,When the enemy gets [vanish]3+|vanish[;] deal [vanish]10 damage,1,attack(10[;]VANISH); sfx(~_vanish~); sfxdamage(target[;]10);,Hadoken,,,PURPLE,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,,,,,if(getstatus(VANISH) > 0 # getstatus(~ncr_vanish~) >= 3 ){ e.doequipmentaction(self[;]target[;]1[;][][;]0[;]true); };,,,,,,
Baddy Bad_upgraded,When the enemy gets [vanish]3+|vanish[;] deal [vanish]14 damage,1,attack(14[;]VANISH); sfx(~_vanish~); sfxdamage(target[;]14);,Hadoken,,,PURPLE,,,,,0,NO,NO,excludefromrandomlists,,,,,,if(getstatus(VANISH) > 0 # getstatus(~ncr_vanish~) >= 3 ){ e.doequipmentaction(self[;]target[;]1[;][][;]0[;]true); };,,,,,,
Baddy Bad_downgraded,When the enemy gets [vanish]3+|vanish[;] deal [vanish]5 damage,1,attack(5[;]VANISH); sfx(~_vanish~); sfxdamage(target[;]5);,Hadoken,,,PURPLE,,,,,0,NO,NO,excludefromrandomlists,,,,,,if(getstatus(VANISH) > 0 # getstatus(~ncr_vanish~) >= 3 ){ e.doequipmentaction(self[;]target[;]1[;][][;]0[;]true); };,,,,,,
Phantom Shield,When you inflict [vanish] vanish on|enemy[;] gain [shield]2 shield|,1,inflictself(SHIELD[;]2); sfx(~_shield~);,Barricade,,,PINK,change_power,change_power,,,-1,NO,NO,excludefromrandomlists,,,,e.setvar(~vanishcount~[;]0);,e.setvar(~vanishcount~[;]0);,if(getstatus(~ncr_vanish~) > e.getvar(~vanishcount~)){ e.doequipmentaction(self[;]target[;]0[;][][;]0[;]true); }; e.setvar(~vanishcount~[;]getstatus(~ncr_vanish~)); if(getstatus(VANISH) > 0) e.setvar(~vanishcount~|999);,,,,,,
Phantom Shield_upgraded,When you inflict [vanish] vanish on|enemy[;] gain [shield]3 shield|,1,inflictself(SHIELD[;]3); sfx(~_shield~);,Barricade,,,PINK,,,,,-1,NO,NO,excludefromrandomlists,,,,e.setvar(~vanishcount~[;]0);,e.setvar(~vanishcount~[;]0);,if(getstatus(~ncr_vanish~) > e.getvar(~vanishcount~)){ e.doequipmentaction(self[;]target[;]0[;][][;]0[;]true); }; e.setvar(~vanishcount~[;]getstatus(~ncr_vanish~)); if(getstatus(VANISH) > 0) e.setvar(~vanishcount~|999);,,,,,,
Phantom Shield_downgraded,When you inflict [vanish] vanish on|enemy[;] gain [shield]1 shield|,1,inflictself(SHIELD); sfx(~_shield~);,Barricade,,,PINK,,,,,-1,NO,NO,excludefromrandomlists,,,,e.setvar(~vanishcount~[;]0);,e.setvar(~vanishcount~[;]0);,if(getstatus(~ncr_vanish~) > e.getvar(~vanishcount~)){ e.doequipmentaction(self[;]target[;]0[;][][;]0[;]true); }; e.setvar(~vanishcount~[;]getstatus(~ncr_vanish~)); if(getstatus(VANISH) > 0) e.setvar(~vanishcount~|999);,,,,,,
Short Sceptre,Deal [sword]3 damage|Inflict [vanish]1 vanish,1,attack(3); inflict(~ncr_vanish~); sfxdamage(target[;]3); sfx(~_vanish~);,Delude,COUNTDOWN,6,PINK,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Short Sceptre_upgraded,Deal [sword]5 damage|Inflict [vanish]1 vanish,1,attack(5); inflict(~ncr_vanish~); sfxdamage(target[;]5); sfx(~_vanish~);,Delude,COUNTDOWN,6,PINK,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Short Sceptre_downgraded,Deal [sword]2 damage|Inflict [vanish]1 vanish,1,attack(2); inflict(~ncr_vanish~); sfxdamage(target[;]2); sfx(~_vanish~);,Delude,COUNTDOWN,6,PINK,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Free Energy,Even: Shock [shock]1 item|Odd: Inflict [vanish]1 vanish,1,if(d%2 == 0){ inflict(SHOCK); sfx(~_shock~); }else{ inflict(~ncr_vanish~); sfx(~_vanish~); }; /*pseudoscience is still a vanish theme*/,Static Shock,NORMAL,,YELLOW,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Free Energy_upgraded,Even: Shock [shock]2 items|Odd: Inflict [vanish]2 vanish,1,if(d%2 == 0){ inflict(SHOCK[;]2); sfx(~_shock~); }else{ inflict(ncr_vanish[;]2); sfx(~_vanish~); };,Static Shock,NORMAL,,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Free Energy_downgraded,Even: Shock [shock]1 item|Odd: Inflict [vanish]1 vanish,1,if(d%2 == 0){ inflict(SHOCK); sfx(~_shock~); }else{ inflict(~ncr_vanish~); sfx(~_vanish~); };,Static Shock,MAX3,,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Geocities,Inflict [vanish]1 vanish[;] then heal|[heal]2 hp per vanish on enemy,1,inflict(~ncr_vanish~); sfx(~_vanish~); var healamt = 0; if(getstatus(VANISH) > 0) { healamt = target.dice + target.extradice + target.bonusdice; } else { healamt = getstatus(~ncr_vanish~); } attackself(-2*healamt); sfx(~_heal~); sfx(~_survive~);,Hadoken,COUNTDOWN,9,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,attackself(-2*getstatus(FIRE)); sfx(~_heal~); sfx(~_survive~);
Geocities_upgraded,Inflict [vanish]1 vanish[;] then heal|[heal]3 hp per vanish on enemy,1,inflict(~ncr_vanish~); sfx(~_vanish~); var healamt = 0; if(getstatus(VANISH) > 0) { healamt = target.dice + target.extradice + target.bonusdice; } else { healamt = getstatus(~ncr_vanish~); } attackself(-3*healamt); sfx(~_heal~); sfx(~_survive~);,Hadoken,COUNTDOWN,9,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,attackself(-3*getstatus(FIRE)); sfx(~_heal~); sfx(~_survive~);
Geocities_downgraded,Inflict [vanish]1 vanish[;] then heal|[heal]1 hp per vanish on enemy,1,inflict(~ncr_vanish~); sfx(~_vanish~); var healamt = 0; if(getstatus(VANISH) > 0) { healamt = target.dice + target.extradice + target.bonusdice; } else { healamt = getstatus(~ncr_vanish~); } attackself(-3*healamt); sfx(~_heal~); sfx(~_survive~);,Hadoken,COUNTDOWN,9,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,attackself(-1*getstatus(FIRE)); sfx(~_heal~); sfx(~_survive~);
Perturb,Inflict [vanish]1 vanish|[gray](Reusable),1,inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,COUNTDOWN,3,PURPLE,change_power,change_power,,,-1,NO,NO,,1,,,,,,,,,,,
Perturb_upgraded,Inflict [vanish]2 vanish|[gray](Reusable),1,inflict(~ncr_vanish~|2); sfx(~_vanish~);,Hadoken,COUNTDOWN,3,PURPLE,,,,,-1,NO,NO,,,,,,,,,,,,,
Perturb_downgraded,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,COUNTDOWN,3,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Wonderwall,Gain [shield]2 shield|Inflict [vanish]1 vanish,1,inflictself(SHIELD[;]2); sfx(~_shield~); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX3,,PINK,change_power,change_power,,,0,YES,NO,,1,,,,,,,,,,,
Wonderwall_upgraded,Gain [shield]4 shield|Inflict [vanish]1 vanish,1,inflictself(SHIELD[;]4); sfx(~_shield~); inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX3,,PINK,,,,,0,YES,NO,,,,,,,,,,,,,
Wonderwall_downgraded,Inflict [vanish]1 vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,Hadoken,MAX3,,PINK,,,,,0,YES,NO,,,,,,,,,,,,,
Channel Spirits,Vanish your duplicate dice[;]|[vanish]4 dmg per dice vanished,1,var damage = 4; sfx(~_vanish~);  var vanishcount = 0; var c = 0; var hasvalue = [false| false| false| false| false| false| false]; var dicevanished = false; for (i in 0 ... self.dicepool.length){  if (self.dicepool[i].available()){   if (!self.dicepool[i].intween()){    if (!hasvalue[self.dicepool[i].basevalue]){     hasvalue[self.dicepool[i].basevalue] = true;    }else{     self.dicepool[i].animate(~disappear~|c);     vanishcount++;     c += 0.1;     dicevanished = true;    }   }  } }  if (dicevanished){  sfx(~_diceburn~); }  attack(damage * vanishcount|VANISH); sfxdamage(damage * vanishcount|VANISH); /*strange duplihate sidegrade cross magic dagger*/,Mass Deception,COUNTDOWN,4,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,for(mydice in self.dicepool){ mydice.animate(~fire~[;]total/10); total+=1; };
Channel Spirits_upgraded,Vanish your duplicate dice[;]|[vanish]5 dmg per dice vanished,1,var damage = 5; sfx(~_vanish~);  var vanishcount = 0; var c = 0; var hasvalue = [false| false| false| false| false| false| false]; var dicevanished = false; for (i in 0 ... self.dicepool.length){  if (self.dicepool[i].available()){   if (!self.dicepool[i].intween()){    if (!hasvalue[self.dicepool[i].basevalue]){     hasvalue[self.dicepool[i].basevalue] = true;    }else{     self.dicepool[i].animate(~disappear~|c);     vanishcount++;     c += 0.1     dicevanished = true;    }   }  } }  if (dicevanished){  sfx(~_diceburn~); }  attack(damage * vanishcount|VANISH); sfxdamage(damage * vanishcount|VANISH);,Mass Deception,COUNTDOWN,4,PINK,,,,,0,NO,NO,,,,,,,,,,,,,for(mydice in self.dicepool){ mydice.animate(~fire~[;]total/10); total+=1; };
Channel Spirits_downgraded,Vanish your duplicate dice[;]|[vanish]3 dmg per dice vanished,1,var damage = 3; sfx(~_vanish~);  var vanishcount = 0; var c = 0; var hasvalue = [false| false| false| false| false| false| false]; var dicevanished = false; for (i in 0 ... self.dicepool.length){  if (self.dicepool[i].available()){   if (!self.dicepool[i].intween()){    if (!hasvalue[self.dicepool[i].basevalue]){     hasvalue[self.dicepool[i].basevalue] = true;    }else{     self.dicepool[i].animate(~disappear~|c);     vanishcount++;     c += 0.1     dicevanished = true;    }   }  } }  if (dicevanished){  sfx(~_diceburn~); }  attack(damage * vanishcount|VANISH); sfxdamage(damage * vanishcount|VANISH);,Mass Deception,COUNTDOWN,4,PINK,,,,,0,NO,NO,,,,,,,,,,,,,for(mydice in self.dicepool){ mydice.animate(~fire~[;]total/10); total+=1; };
Ultra Lockpick,Split a dice in two[;]|nudge both results|,1,var amt = 2; var list = split(d|amt); for(i in 0...amt) list[i]--; for(i in 0...amt) list.remove(0); if(list.length > 0) givedice(list); else self.textparticle(~No effect!~);,Magic Lockpick,NORMAL,,BRIGHTCYAN,change_power,change_power,,,-1,YES,NO,,,,,,,,,,,,,
Ultra Lockpick_upgraded,Split a dice in three[;]|nudge both results|,1,var amt = 3; var list = split(d|amt); for(i in 0...amt) list[i]--; for(i in 0...amt) list.remove(0); if(list.length > 0) givedice(list); else self.textparticle(~No effect!~);,Magic Lockpick,NORMAL,,BRIGHTCYAN,,,,,-1,YES,NO,,,,,,,,,,,,,
Ultra Lockpick_downgraded,Split a dice in two[;]|nudge both results,1,var amt = 2; var list = split(d|amt); for(i in 0...amt) list[i]--; for(i in 0...amt) list.remove(0); if(list.length > 0) givedice(list); else self.textparticle(~No effect!~);,Magic Lockpick,NORMAL,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Hyper Lockpick,Split a dice in two[;]|[fire]burn lowest result|,1,givedice(split(d)); var lowest = 7; var s = self.dicepool; var list = [s[s.length - 1]|s[s.length - 2]]; for(dice in list) if(dice.basevalue < lowest) lowest = dice.basevalue; var c = 0; for(dice in list) if(dice.basevalue == lowest) dice.animate(~fire~|c += 0.1);,Magic Lockpick,NORMAL,,RED,,,,,-1,YES,NO,,,,,,,,,,,,,
Hyper Lockpick_upgraded,Split a dice in three[;]|[fire]burn lowest result|,1,givedice(split(d|3)); var lowest = 7; var s = self.dicepool; var list = [s[s.length - 1]|s[s.length - 2]]; for(dice in list) if(dice.basevalue < lowest) lowest = dice.basevalue; var c = 0; for(dice in list) if(dice.basevalue == lowest) dice.animate(~fire~|c += 0.1);,Magic Lockpick,NORMAL,,RED,,,,,-1,YES,NO,,,,,,,,,,,,,
Hyper Lockpick_downgraded,Split a dice in two[;]|[fire]burn lowest result,1,givedice(split(d)); var lowest = 7; var s = self.dicepool; var list = [s[s.length - 1]|s[s.length - 2]]; for(dice in list) if(dice.basevalue < lowest) lowest = dice.basevalue; var c = 0; for(dice in list) if(dice.basevalue == lowest) dice.animate(~fire~|c += 0.1);,Magic Lockpick,NORMAL,,RED,,,,,0,YES,NO,,,,,,,,,,,,,
Anticrucible,Roll 3 extra dice|Burn your other dice,1,var fireisalt = false; var dummyfighter = new elements.Fighter(~Wisp~); dummyfighter.addstatus(~fire~|1); trace(dummyfighter.status.length); if(dummyfighter.status.length > 0) { for(stat in dummyfighter.status) { if(stat.type == ~alternate_fire~) { fireisalt = true; } } } var inflictwhat = fireisalt ? ~alternate_fire~ : ~fire~; var dicearray = []; for(x in 0...3){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; var c = 0; for(dice in self.dicepool) if(dice.availableorlocked()) dice.animate(inflictwhat|c += 0.1); givedice(dicearray); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,RED,change_power,change_power,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Anticrucible_upgraded,Roll 4 extra dice|Burn your other dice,1,var fireisalt = false; var dummyfighter = new elements.Fighter(~Wisp~); dummyfighter.addstatus(~fire~|1); trace(dummyfighter.status.length); if(dummyfighter.status.length > 0) { for(stat in dummyfighter.status) { if(stat.type == ~alternate_fire~) { fireisalt = true; } } } var inflictwhat = fireisalt ? ~alternate_fire~ : ~fire~; var dicearray = []; for(x in 0...4){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; var c = 0; for(dice in self.dicepool) if(dice.availableorlocked()) dice.animate(inflictwhat|c += 0.1); givedice(dicearray); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,RED,,,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Anticrucible_downgraded,Roll an extra dice|Burn your other dice,1,var fireisalt = false; var dummyfighter = new elements.Fighter(~Wisp~); dummyfighter.addstatus(~fire~|1); trace(dummyfighter.status.length); if(dummyfighter.status.length > 0) { for(stat in dummyfighter.status) { if(stat.type == ~alternate_fire~) { fireisalt = true; } } } var inflictwhat = fireisalt ? ~alternate_fire~ : ~fire~; var c = 0; for(dice in self.dicepool) if(dice.availableorlocked()) dice.animate(inflictwhat|c += 0.1); sfx(~_thinghappens~); givedice(); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,RED,,,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Snow Globe,Roll 3 extra dice|Freeze your other dice,1,var dicearray = []; for(x in 0...3){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; var c = 0; for(dice in self.dicepool) if(dice.availableorlocked()) dice.animate(~ice~|c += 0.1); givedice(dicearray); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Snow Globe_upgraded,Roll 4 extra dice|Freeze your other dice,1,var dicearray = []; for(x in 0...4){ dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; var c = 0; for(dice in self.dicepool) if(dice.availableorlocked()) dice.animate(~ice~|c += 0.1); givedice(dicearray); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,BRIGHTCYAN,,,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Snow Globe_downgraded,Roll an extra dice|Freeze your other dice,1,var c = 0; for(dice in self.dicepool) if(dice.available()) dice.animate(~ice~|c += 0.1); sfx(~_thinghappens~); givedice(); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,BRIGHTCYAN,,,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Frozen Wisp,Even: [vanish]<d6> dmg[;] vanish on 6|Odd: [ice]<d6> dmg[;] freeze on 5,2,if(d%2 == 0){ attack(d[;]VANISH); sfx(~_vanish~); }else{ attack(d[;]ICE); sfx(~_ice~); }; if(d == 5){ inflict(ICE); }; if(d == 6){ inflict(~ncr_vanish~); };,Delude,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Frozen Wisp_upgraded,Even: [vanish]<d6> dmg + [vanish]1 vanish|Odd: [ice]<d6> dmg + [ice]1 freeze,2,if(d%2 == 0){ attack(d[;]VANISH); sfx(~_vanish~); inflict(~ncr_vanish~); }else{ attack(d[;]ICE); sfx(~_ice~); inflict(ICE); };,Delude,NORMAL,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Frozen Wisp_downgraded,Even: Deal [vanish]<d6> damage|Odd: Deal [ice]<d6> damage,2,if(d%2 == 0){ attack(d[;]VANISH); sfx(~_vanish~); }else{ attack(d[;]ICE); sfx(~_ice~); };,Delude,NORMAL,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Exorcision Kit,Even: [vanish]<d6> dmg[;] vanish on 6|Odd: [fire]<d6> dmg[;] burn on 5,2,if(d%2 == 0){ attack(d[;]VANISH); sfx(~_vanish~); }else{ attack(d[;]FIRE); sfx(~_fire~); }; if(d == 5){ inflict(FIRE); }; if(d == 6){ inflict(~ncr_vanish~); };,Ember,NORMAL,,RED,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Exorcision Kit_upgraded,Even: [vanish]<d6> dmg + [vanish]1 vanish|Odd: [fire]<d6> dmg + [ice]1 burn,2,if(d%2 == 0){ attack(d[;]VANISH); sfx(~_vanish~); inflict(~ncr_vanish~); }else{ attack(d[;]FIRE); sfx(~_fire~); inflict(FIRE); };,Ember,NORMAL,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Exorcision Kit_downgraded,Even: Deal [vanish]<d6> damage|Odd: Deal [fire]<d6> damage,2,if(d%2 == 0){ attack(d[;]VANISH); sfx(~_vanish~); }else{ attack(d[;]FIRE); sfx(~_fire~); };,Ember,NORMAL,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Obsidian Blade,Deal [sword]<d6> damage. On 6[;]|instead[;] [fire]burn all dice,2,if(d != 6) attack(d); if(d == 6){inflict(FIRE|ALL); sfx(~_fire~);};,Heat Ray,MIN4,,GRAY,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Obsidian Blade_upgraded,Deal [sword]<d6> damage. On 6[;]|instead[;] [fire]burn all dice,2,if(d != 6) attack(d); if(d == 6){inflict(FIRE|ALL); sfx(~_fire~);};,Heat Ray,NORMAL,,GRAY,,,,,0,YES,NO,,,,,,,,,,,,,
Obsidian Blade_downgraded,Deal [sword]<d6> damage. On 6[;]|instead[;] [fire]burn all dice,2,if(d != 6) attack(d); if(d == 6){inflict(FIRE|ALL); sfx(~_fire~);};,Heat Ray,REQUIRE6,,GRAY,,,,,0,YES,NO,,,,,,,,,,,,,
Polar Blade,Deal [sword]<d6> damage. On 6[;]|instead[;] [ice]freeze all dice,2,if(d != 6) attack(d); if(d == 6){inflict(ICE|ALL); sfx(~_ice~);};,Arctic Storm,MIN4,,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Polar Blade_upgraded,Deal [sword]<d6> damage. On 6[;]|instead[;] [ice]freeze all dice,2,if(d != 6) attack(d); if(d == 6){inflict(ICE|ALL); sfx(~_ice~);};,Arctic Storm,NORMAL,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Polar Blade_downgraded,Deal [sword]<d6> damage. On 6[;]|instead[;] [ice]freeze all dice,2,if(d != 6) attack(d); if(d == 6){inflict(ICE|ALL); sfx(~_ice~);};,Arctic Storm,REQUIRE6,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Gemstone Sceptre,Even turn: [sword]6 dmg + [vanish]1|Odd turn: [sword]6 dmg + [ice]1,2,if(turn % 2 == 0){attack(6); inflict(~ncr_vanish~); sfx(~_vanish~);}else{attack(6); sfx(~_ice~); inflict(ICE);}; sfxdamage(target|6);,Ember,COUNTDOWN,8,PURPLE,change_power,change_power,,,0,NO,NO,,,,,if(turn % 2 == 0){e.changecolour(~PINK~);}else{e.changecolour(~BLUE~);};,,,,,,,,
Gemstone Sceptre_upgraded,Even turn: [sword]8 dmg + [vanish]1|Odd turn: [sword]8 dmg + [ice]1,2,if(turn % 2 == 0){attack(8); inflict(~ncr_vanish~); sfx(~_vanish~);}else{attack(8); sfx(~_ice~); inflict(ICE);}; sfxdamage(target|8);,Ember,COUNTDOWN,8,PURPLE,,,,,0,NO,NO,,,,,if(turn % 2 == 0){e.changecolour(~PINK~);}else{e.changecolour(~BLUE~);};,,,,,,,,
Gemstone Sceptre_downgraded,Even turn: [sword]3 dmg + [vanish]1|Odd turn: [sword]3 dmg + [ice]1,2,if(turn % 2 == 0){attack(3); inflict(~ncr_vanish~); sfx(~_vanish~);}else{attack(3); sfx(~_ice~); inflict(ICE);}; sfxdamage(target|3);,Ember,COUNTDOWN,8,PURPLE,,,,,0,NO,NO,,,,,if(turn % 2 == 0){e.changecolour(~PINK~);}else{e.changecolour(~BLUE~);};,,,,,,,,
Flaming Sceptre,Even turn: [sword]6 dmg + [vanish]1|Odd turn: [sword]6 dmg + [fire]1,2,if(turn % 2 == 0){attack(6); inflict(~ncr_vanish~); sfx(~_vanish~);}else{attack(6); sfx(~_fire~); inflict(FIRE);}; sfxdamage(target|6);,Ember,COUNTDOWN,8,PURPLE,change_power,change_power,,,0,NO,NO,,,,,if(turn % 2 == 0){e.changecolour(~PINK~);}else{e.changecolour(~RED~);};,,,,,,,,
Flaming Sceptre_upgraded,Even turn: [sword]8 dmg + [vanish]1|Odd turn: [sword]8 dmg + [fire]1,2,if(turn % 2 == 0){attack(8); inflict(~ncr_vanish~); sfx(~_vanish~);}else{attack(8); sfx(~_fire~); inflict(FIRE);}; sfxdamage(target|8);,Ember,COUNTDOWN,8,PURPLE,,,,,0,NO,NO,,,,,if(turn % 2 == 0){e.changecolour(~PINK~);}else{e.changecolour(~RED~);};,,,,,,,,
Flaming Sceptre_downgraded,Even turn: [sword]3 dmg + [vanish]1|Odd turn: [sword]3 dmg + [fire]1,2,if(turn % 2 == 0){attack(3); inflict(~ncr_vanish~); sfx(~_vanish~);}else{attack(3); sfx(~_fire~); inflict(FIRE);}; sfxdamage(target|3);,Ember,COUNTDOWN,8,PURPLE,,,,,0,NO,NO,,,,,if(turn % 2 == 0){e.changecolour(~PINK~);}else{e.changecolour(~RED~);};,,,,,,,,
Poofdice Potion,Deal [vanish]10 dmg + [vanish]1 vanish|Lose a dice this fight,1,attack(10|VANISH); sfxdamage(target|10); inflict(~ncr_vanish~); sfx(~_vanish~); self.extradice-=1;,Infinity Mirror,COUNTDOWN,6,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,self.extradice-=1;
Poofdice Potion_upgraded,Deal [vanish]13 dmg + [vanish]1 vanish|Lose a dice this fight,1,attack(13|VANISH); sfxdamage(target|13); inflict(~ncr_vanish~); sfx(~_vanish~); self.extradice-=1;,Infinity Mirror,COUNTDOWN,6,PINK,,,,,0,NO,NO,,,,,,,,,,,,,self.extradice-=1;
Poofdice Potion_downgraded,Deal [vanish]7 dmg + [vanish]1 vanish|Lose a dice this fight,1,attack(7|VANISH); sfxdamage(target|7); inflict(~ncr_vanish~); sfx(~_vanish~); self.extradice-=1;,Infinity Mirror,COUNTDOWN,6,PINK,,,,,0,NO,NO,,,,,,,,,,,,,self.extradice-=1;
Deer Will,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,1,attack(d|VANISH); sfxdamage(target|d); inflict(~ncr_vanish~); sfx(~_vanish~); sfx(~_roar~|~~|0.4);,Bear Smash,MAX5,,PINK,change_power,change_power,,,0,NO,NO,witchonly,1,,,,,,,,,,,
Deer Will_upgraded,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,1,attack(d|VANISH); sfxdamage(target|d); inflict(~ncr_vanish~); sfx(~_vanish~); sfx(~_roar~|~~|0.4);,Bear Smash,MAX5|FREE2,,PINK,,,,,0,NO,NO,witchonly,,,,,,,,,,,,
Deer Will_downgraded,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,1,attack(d|VANISH); sfxdamage(target|d); inflict(~ncr_vanish~); sfx(~_vanish~); sfx(~_roar~|~~|0.4);,Bear Smash,MAX3,,PINK,,,,,0,NO,NO,witchonly,,,,,,,,,,,,
