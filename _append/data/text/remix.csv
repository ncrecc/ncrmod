Name,Description,Image,ImageOffset,Implemented,Rule Change,Apply On Continue
The Inventor?,All chest contents are duplicated[;] but|you must make two gadgets per battle.,_inventor,-90|-40,YES,Rules.inventor_setgadgets(2); Rules.doublechests = true; ,YES
Marshmallow?,On odd turns[;] your starting rolls are odd.|On even turns[;] your starting rolls are even.,marshmallow,10|-10,YES,Rules.addextrascript(~if(turn % 2 == 1) { Rules.playerdicerange([1[;] 3[;] 5]); } else { Rules.playerdicerange([2[;] 4[;] 6]); }~[;] ~beforestartturn~);,YES
Rotten Apple?,Gain [heart]5[] max health[;] but|lose 1 after each fight.,applemimic,0|0,YES,if(self.getvar(~ncrappleapplied~) != true) { self.maxhp += 5; self.hp += 5; self.setvar(~ncrappleapplied~|true); } Rules.addextrascript(~if(self.maxhp > 1) { self.maxhp -= 1; if(self.hp > self.maxhp) { self.hp = self.maxhp; } }~[;] ~aftercombat~);,YES
Wisp?,Swap all [vanish]Vanish equipment for|[fire]Fire equipment[;] and vice versa.,wisp,20|-60,NO,//uhhhhh,YES
The Robot?,Expand the Jackpot reward pool.,_robot,-90|-20,YES,Rules.jackpotskills = [~One More Roll~|~Regenerate~|~Lucky Shot~|~Barricade~|~Snake Eyes~|~Firebomb~|~Protection~|~Refrigerator~|~Flashbang~|~Stardust~|~Steal~|~Megabump~|~Reroll~|~Flash Freeze~|~Replicate~|~Mumble~|~Blood Sip~|~Drunken Boxing~|~Install Evony~|~impulse 101~|~Obfuscate~|~Proximity Mine~]; Rules.jackpotskills_lowodds = [~Fury~|~Teleport~|~Hook~|~Bear Smash~|~Jackhammer~|~Heat Ray~|~Oh No!~|~Clone Device~|~Magic Six~|~Arctic Storm~|~Briar Bush~|~Quick Thinking~|~Light Switch~|~Megaflip~|~Dramatic Pause~|~Rod~|~Deep Breath~];,YES
The Warrior?,Your skillcard changes to another|dice manipulator every turn.,_warrior,-90|-20,YES,if(self.getvar(~ncrthewarriorapplied~) != true) { self.setvar(~ncrthewarrior_skillcardpool~|[~Combat Roll~|~Combat Spatula~|~Combat Slam~|~Combat Key~|~Combat Bulb~|~Combat Tweak~|~Combat Bump~|~Combat Grip~|~Combat Doppel~|~Combat Mirror~|~Combat Gumball~|~Combat Gold~|~Combat Silver~|~Combat Flip~|~Combat Ungerade~|~Combat Spanner~|~Combat Calculate~|~Combat Keyhole~|~Combat Scroll~|~Combat Innovate~|~Combat Crucible~|~Combat Murk~]); trace(self.getvar(~ncrthewarrior_skillcardpool~)); self.setvar(~ncrthewarriorapplied~|true); } Rules.addextrascript(~trace(self.getvar(\~ncrthewarrior_skillcardpool\~)); var skillcardpool = self.getvar(\~ncrthewarrior_skillcardpool\~); trace(self.getvar(\~ncrthewarrior_skillcardpool\~)); trace(skillcardpool); var skillpick = rand(skillcardpool); trace(skillpick); self.replaceskillcard(skillpick); trace(\~replaced ok\~); skillcardpool.remove(skillpick); trace(\~removed ok\~); if(skillcardpool.length > 0) { self.setvar(\~ncrthewarrior_skillcardpool\~|skillcardpool); trace(\~skillcardpoold ok\~); } else { self.setvar(\~ncrthewarrior_skillcardpool\~|[\~Combat Roll\~|\~Combat Spatula\~|\~Combat Slam\~|\~Combat Key\~|\~Combat Bulb\~|\~Combat Tweak\~|\~Combat Bump\~|\~Combat Grip\~|\~Combat Doppel\~|\~Combat Mirror\~|\~Combat Gumball\~|\~Combat Gold\~|\~Combat Silver\~|\~Combat Flip\~|\~Combat Ungerade\~|\~Combat Spanner\~|\~Combat Calculate\~|\~Combat Keyhole\~|\~Combat Scroll\~|\~Combat Innovate\~|\~Combat Crucible\~|\~Combat Murk\~]); self.getskillcard().allowupdatereusabledescription = true; self.getskillcard().updatereuseabledescription(); }~[;] ~beforestartturn~);,YES
The Exit?,Lose [heart]10[] max health[;] but|you won't get any more rules.,*exit,-90|-50,NO,//this might never work since disabling rules.remix also disables; surprise; the rules screen and the rules indicator on the top-left corner; which is pretty awkward. if(self.getvar(~ncrtheexitapplied~) != true) { self.maxhp -= 10; if(self.hp > self.maxhp) { self.hp = self.maxhp; } } self.setvar(~ncrtheexitapplied~|true); } Rules.remix = false;,YES
Buster?,Jackpot rewards are now static.,dragon,-130|-60,YES,var jacklist = Rules.jackpotskills; var rarejacklist = Rules.jackpotskills_lowodds; var chosenjacks = []; for(i in 0...3) { if(chance(80)) { chosenjacks.push(rand(jacklist)); jacklist.remove(chosenjacks[i]); } else { chosenjacks.push(rand(rarejacklist)); rarejacklist.remove(chosenjacks[i]); } } Rules.jackpotskills = chosenjacks; Rules.jackpotskills_lowodds = [];,YES
The Jester?,Swap certain cards with their|Parallel Universe counterparts.,_jester,-90|-20,YES,var cardlist = Deck.getcards(~all~); if(cardlist.length > 0 { for(c in cardlist){ if(c.equipment.name == ~Kapow~) { c.delete(); Deck.createcard(~Boop~); } else if(cardlist.length > 0 { for(c in cardlist){ if(c.equipment.name == ~Boop~) { c.delete(); Deck.createcard(~Kapow~); } else if(c.equipment.name == ~Blammo~) { c.delete(); Deck.createcard(~Bop~); } else if(c.equipment.name == ~Bop~) { c.delete(); Deck.createcard(~Blammo~); } else if(c.equipment.name == ~Sour Candy~) { c.delete(); Deck.createcard(~Sweets~); } else if(c.equipment.name == ~Sweets~) { c.delete(); Deck.createcard(~Sour Candy~); } else if(c.equipment.name == ~Call for Backup Inventor~) { c.delete(); Deck.createcard(~Call for Backup Inventor?~); } else if(c.equipment.name == ~Call for Backup Inventor?~) { c.delete(); Deck.createcard(~Call for Backup Inventor~); } else if(c.equipment.name == ~Call for Backup Thief~) { c.delete(); Deck.createcard(~Call for Backup Thief?~); } else if(c.equipment.name == ~Call for Backup Thief?~) { c.delete(); Deck.createcard(~Call for Backup Thief~); } else if(c.equipment.name == ~Call for Backup Warrior~) { c.delete(); Deck.createcard(~Call for Backup Warrior?~); } else if(c.equipment.name == ~Call for Backup Warrior?~) { c.delete(); Deck.createcard(~Call for Backup Warrior~); } else if(c.equipment.name == ~Call for Backup Robot~) { c.delete(); Deck.createcard(~Call for Backup Robot?~); } else if(c.equipment.name == ~Call for Backup Robot?~) { c.delete(); Deck.createcard(~Call for Backup Robot~); } else if(c.equipment.name == ~Call for Backup Witch~) { c.delete(); Deck.createcard(~Call for Backup Witch?~); } else if(c.equipment.name == ~Call for Backup Witch?~) { c.delete(); Deck.createcard(~Call for Backup Witch~); } } },NO
The Thief?,Switch to [quote]Uptick[quote] rules.,_thief,-90|-20,YES,if(self.getskillcard().name.substr(0|6) != ~Uptick~) { self.replaceskillcard(~Uptick@1~); self.setvar(~uptick~|1); } Rules.addextrascript(~var uptick = self.getvar(\~uptick\~); Rules.stackplayerdice([[uptick]][;] true); self.replaceskillcard(\~Uptick@\~ + uptick);~|~beforestartturn~); Rules.addextrascript(~var uptick = self.getvar(\~uptick\~) + 1; if(uptick >=7) uptick = 1; self.setvar(\~uptick\~[;] uptick);~|~endturn~); Rules.addextrascript(~var uptick = self.getvar(\~uptick\~) + 1; if(uptick >=7) uptick = 1; self.setvar(\~uptick\~[;] uptick);~|~aftercombat); self.changelimitbreak(~Trips~);,YES
Banshee?,At the end of each turn[;] your limit|break is decharged by 2 points.,banshee,-20|0,YES,Rules.addextrascript(~if(self.isplayer) { self.limitvalue -= 2; if (self.limitvalue < 0) { self.limitvalue = 0; } } ~[;] ~endturn~);,YES
Loud Bird?,Your limit break is|permanently weakened.,loudbird,-130|-60,YES,if(self.limitbreak.name == ~Fury~) self.changelimitbreak(~Tantrum~); if(self.limitbreak.name == ~Unlucky Roll~ # self.limitbreak.name == ~Trips~) self.changelimitbreak(~Very Unlucky Roll~); if(self.limitbreak.name == ~Autoroll~) self.changelimitbreak(~Lucky Shot~); if(self.limitbreak.name == ~Focus~) self.changelimitbreak(~Unfocused~); if(self.limitbreak.name == ~Crystal Ball~) self.changelimitbreak(~Marble~); if(self.limitbreak.name == ~Snap!~) self.changelimitbreak(~Magic Trick~);,YES
Sneezy?,At the start of each turn[;]|countdowns decrease by 2.,sneezey,-20|-10,YES,Rules.addextrascript(~boostcountdowns(2);~[;] ~onstartturn~);,YES
Aoife?,Double dice and HP for everyone.,knight,0|-30,YES,if(self.getvar(~ncraoifeapplied~) != true) { self.dice *= 2; self.maxhp *= 2; self.hp *= 2; self.setvar(~ncraoifeapplied~|true); } Rules.addextrascript(~target.dice *= 2; target.maxhp *= 2; target.hp *= 2;~[;] ~beforecombat~);,YES
Warlock?,Half of all status effects are different.,warlock,-70|-50,YES,if(self.getvar(~ncrwarlockstatuslist~) == null) { var statuslist = [~silence~|~poison~|~fire~|~shock~|~ice~|~weaken~|~curse~|~blind~|~fury~|~lock~|~shield~|~reequipnext~|~dodge~|~thorns~|~confuse~|~clock~|~ctrig~|~reequipnext~|~survive~|~vampire~]; shuffle(statuslist); for(i in 1...10) { statuslist.pop(); } self.setvar(~ncrwarlockstatuslist~|statuslist); } for(s in self.getvar(~ncrwarlockstatuslist~)) { if(s == ~clock~) { for(i in 1...7) { Rules.setalternate(~counter_~ + i); } } else if(s == ~ctrig~) { for(i in 1...7) { Rules.setalternate(~dice_trigger_~ + i); } } else if(s == ~fire~ # s == ~ice~) { Rules.setalternate(s); Rules.setalternate(s + ~_all~); else { Rules.setalternate(s); } },YES
The Witch?,Switch to [quote]Countdown[quote] rules.,_witch,-90|-30,YES,Rules.stackplayerdice([[6[;] 5[;] 4[;] 3[;] 2[;] 1]][;] false);,YES
