Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Category,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Parallel Universe,Special?,Error Immune,Show Gold,Appears For Parts,Hide Reuseable,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: End Turn,Script: On any equipment use,Script: Before execute,Script: On Snap,Script: On Fury,Script: On any countdown reduce
Trinity Charm,Roll a 3[;] 33% chance|to roll another 3,1,var odds = 33.33; if(getstatusself(~luck~) > 0){ odds = 66.66; } else if(getstatusself(~luck+~) > 0){ odds = 100; }   if(chance(odds)) { self.textparticle(~Success!~); givedice([3|3]); } else{ givedice(3); },Magic Dice,MIN4,,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trinity Charm_upgraded,Roll a 3[;] 33% chance|to roll another 3,1,var odds = 33.33; if(getstatusself(~luck~) > 0){ odds = 66.66; } else if(getstatusself(~luck+~) > 0){ odds = 100; }   if(chance(odds)) { self.textparticle(~Success!~); givedice([3|3]); } else{ givedice(3); },Magic Dice,COUNTDOWN,4,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trinity Charm_downgraded,Roll a 3,1,givedice(3); //tc has gone through a million and one iterations. in its very first incarnation it was a 3-coutndown 33% chance to roll a 3; 3 uses this turn but it kind of captured the very essence of why jackeea doesn't like chance items. same with when its chance was to roll three 3s. at some point the base was needs 3 and the upgrade made it min 3. the incarnation this was in before i wrote this note and redesigned it was the same as before; but min3 and the upgrade made it a countdown of 3. for the longest time i refused to touch tc because i didn't want it to involve any number that wasn't a 3. this incarnation involves a 4 (min; countdown) and a 2 (how many 3s you roll when the chance succeeds). oh well. (also: in its very first few stages; it was green. how bizarre is that?) (also also: if this were morefluff i would've just stuck with the first design and never rethought it. nah jk ilu jackeea),Magic Dice,MIN4,,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Funk Blaster,Double [weaken]weaken|[gray](once per battle),1,inflict(WEAKEN| getstatus(WEAKEN));,Theremin,COUNTDOWN,18,WEAPON,ORANGE,change_power,change_power,,_weaken,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Funk Blaster_upgraded,Double [weaken]weaken|[gray](once per battle),1,inflict(WEAKEN| getstatus(WEAKEN));,Theremin,COUNTDOWN,12,WEAPON,ORANGE,,,,_weaken,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Funk Blaster_downgraded,Increase [weaken]weaken by 50%|[gray](once per battle),1,inflict(WEAKEN| getstatus(WEAKEN) * 0.5);,Theremin,COUNTDOWN,18,WEAPON,ORANGE,,,,_weaken,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Funk Blaster_weakened,Increase [weaken]weaken by 50%|[gray](once per battle),1,inflict(WEAKEN| getstatus(WEAKEN) * 0.5);,Theremin,COUNTDOWN,12,WEAPON,ORANGE,,,,_weaken,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
FK 47,[sword]9[;] rob enemy after battle|[gray](unusable after turn 1),1,self.finderskeepers = 1; screenshake(); attack(9);,Steal,NORMAL|NORMAL,9,WEAPON,GREEN,change_power,change_function,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,if(turn > 1) {e.availablethisturn = false;},,,,,,,
FK 47_upgraded,[sword]9[;] rob enemy after battle|[gray](unusable after turn 2),1,self.finderskeepers = 1; screenshake(); attack(9);,Steal,NORMAL|NORMAL,9,WEAPON,GREEN,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,if(turn > 2) {e.availablethisturn = false;},,,,,,,
FK 47_downgraded,Do [sword]9 damage|[gray](unusable after turn 1),1,attack(9);,Steal,NORMAL|NORMAL,9,WEAPON,GREEN,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,if(turn > 1) {e.availablethisturn = false;},,,,,,,
FK 47_weakened,Do [sword]9 damage|[gray](unusable after turn 2),1,attack(9);,Steal,NORMAL|NORMAL,9,WEAPON,GREEN,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,if(turn > 2) {e.availablethisturn = false;},,,,,,,
Switchblade,Do [sword]<d6> damage,1,attack(d);,Pea Gun,EVEN,,WEAPON,RED,change_requirements,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,if(turn % 2 == 0) { if(e.getslots() == [~EVEN~]) { e.changeslots([~ODD~|~FREE1~]);  } else {   e.changeslots([~EVEN~]);  } },,,,,,,
Switchblade_upgraded,Do [sword]<d6> damage[;]|+1 if dice is odd,1,if (d % 2 == 1) {attack(d + 1);} else {attack(d);},Pea Gun,NORMAL,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Switchblade_downgraded,Do [sword]<d6> damage,1,attack(d);,Pea Gun,ODD,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Fantasy,Do [sword]999 damage,1,attack(999);,Catapult,ODD|ODD,9,ITEM,PURPLE,change_power,change_function,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Fantasy_upgraded,Do [sword]999 damage,1,attack(999);,Catapult,ODD|ODD,7,ITEM,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Fantasy_downgraded,Do [sword]1 damage,1,attack(1);,Catapult,ODD|ODD,10,ITEM,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Heavenly Nectar,Recover [heal]<d6> health|for both you and enemy,2,attackself(-d); attack(-d);,Recover,NORMAL,,ITEM,GREEN,change_power,change_function,,_heal,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Heavenly Nectar_upgraded,Recover [heal]<double> health|for both you and enemy,2,attackself(-d * 2); attack(-d * 2);,Recover,NORMAL,,ITEM,GREEN,,,,_heal,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Heavenly Nectar_downgraded,Recover [heal]<d6> health|for you[;] [heal]<double> for enemy,2,attackself(-d); attack(-d * 2);,Recover,NORMAL,,ITEM,GREEN,,,,_heal,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gas Lamp,Return dice. In [jinx]2 turns[;]|return them again,1,givedice([d|d]); jinx(~Gas Lamp~|~receive two %VAR%s~|~Receive two %VAR%s~|~inflict(\~stash\~+%VAR%|2); sfx(\~magic_gaindice\~);~|self|self|2|d);,Replicate,DOUBLES|DOUBLES,,ITEM,PINK,change_power,change_function,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Gas Lamp_upgraded,Return dice. In [jinx]2 turns[;]|return them again,1,givedice([actualdice[0].basevalue|actualdice[1].basevalue]); jinx(~Gas Lamp+~|~receive some dice~|~Receive some dice~|~if(\~%VAR%\~.substr(0|1) == \~%VAR%\~.substr(1|1)) { inflict(\~stash\~ + \~%VAR%\~.substr(0|1)|2); } else { inflict(\~stash\~ + \~%VAR%\~.substr(0|1)); inflict(\~stash\~ + \~%VAR%\~.substr(1|1)); } sfx(\~magic_gaindice\~);~|self|self|2|(actualdice[0].basevalue * 10) + actualdice[1].basevalue);,Replicate,MIN3|MIN3,,ITEM,PINK,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gas Lamp_downgraded,Return dice. In [jinx]2 turns[;]|return them again,1,givedice([1|1]); jinx(~Gas Lamp-~|~receive two %VAR%s~|~Receive two %VAR%s~|~inflict(\~stash\~+%VAR%|2); sfx(\~magic_gaindice\~);~|self|self|2|1);,Replicate,REQUIRE1|REQUIRE1,,ITEM,PINK,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hyper Beam,Do [sword]7 damage[;]|end your turn,1,attack(7); self.endturnnow();,Plasma Gun,REQUIRE5,,WEAPON,GRAY,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hyper Beam_upgraded,Do [sword]9 damage[;]|end your turn,1,attack(9); self.endturnnow();,Plasma Gun,REQUIRE5,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hyper Beam_downgraded,Do [sword]5 damage[;]|end your turn,1,attack(5); self.endturnnow();,Plasma Gun,REQUIRE5,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Russian Roulette,Do [sword]<double> damage to|either you or the enemy,1,var odds = 50; if(getstatusself(~luck~) > 0){ odds = 100; } else if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { attackself(d); } else { attack(d); },Drunken Boxing,NORMAL,,WEAPON,RED,add3,change_function,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Russian Roulette_downgraded,Do [sword]<double> damage to yourself,1,attackself(d);,Drunken Boxing,NORMAL,,WEAPON,RED,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Facepalm,Just straight up take [sword]<d6>|damage. See if I care.,1,attackself(d);,Catapult,NORMAL,,WEAPON,RED,add3,change_power,,_damage,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Facepalm_downgraded,Just straight up take [sword]<d6>|damage. See if I care.,1,attackself(d);,Catapult,NORMAL|FREE6,,WEAPON,RED,,,,_damage,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Zombocom,Do [sword]<d6>[;] inflict 1 to 4|of a random effect|[gray][90%][quote]The unattainable is unknown[quote],2,var s = rand([CURSE|LOCK|FIRE|FIRE|FIRE|FIRE|ICE|ICE|ICE|ICE|WEAKEN|WEAKEN|WEAKEN|SHOCK|SHOCK|SHOCK|POISON|POISON]); var r = rand([1|1|2|2|2|3|3|4]); attack(d); inflict(s|r);,Stardust,REQUIRE5|REQUIRE5,,WEAPON,PINK,change_power,change_function,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,e.changeslots([rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])|rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])]),,,,,,,
Zombocom_downgraded,Do [sword]<d6> damage|[gray][90%][quote]The only limit is yourself[quote],2,attack(d);,Stardust,REQUIRE5|REQUIRE5,,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,e.changeslots([rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])|rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])]),,,,,,,
Zombocom_upgraded,Do [sword]<d6>[;] inflict 1 to 4|of a random effect|[gray][90%][quote]You can do anything at all[quote],2,var s = rand([CURSE|LOCK|FIRE|FIRE|FIRE|FIRE|ICE|ICE|ICE|ICE|WEAKEN|WEAKEN|WEAKEN|SHOCK|SHOCK|SHOCK|POISON|POISON]); var r = rand([1|1|2|2|2|3|3|4]); attack(d); inflict(s|r);,Stardust,NORMAL|NORMAL,10,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,e.needstotal = rand([2|3|4|5|6|7|8|9|10|11|12]);,,,,,,,
Obmozcom,Do [sword]6[;] inflict 2 or 3|of a random effect|[gray][90%][quote]The vast universe is available[quote],2,var r = rand([3|3|3|2|2|2|2]); var s = rand([CURSE|LOCK|FIRE|FIRE|FIRE|FIRE|ICE|ICE|ICE|ICE|WEAKEN|WEAKEN|WEAKEN|SHOCK|SHOCK|SHOCK|POISON|POISON]); attack(6); inflict(s|r);,Stardust,REQUIRE5|REQUIRE5,,WEAPON,PINK,change_power,change_function,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,e.changeslots([rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])|rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])]),,,,,,,
Obmozcom_downgraded,Do [sword]6 damage|[gray][90%][quote]You'll always be welcome at Obmozcom[quote],2,attack(d);,Stardust,REQUIRE5|REQUIRE5,,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,e.changeslots([rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])|rand([~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~])]),,,,,,,
Obmozcom_upgraded,Do [sword]6[;] inflict 2 or 3|of a random effect|[gray][90%][quote]Obmozcom is omnipotent[quote],2,var r = rand([3|3|3|2|2|2|2]); var s = rand([CURSE|LOCK|FIRE|FIRE|FIRE|FIRE|ICE|ICE|ICE|ICE|WEAKEN|WEAKEN|WEAKEN|SHOCK|SHOCK|SHOCK|POISON|POISON]); attack(6); inflict(s|r);,Stardust,NORMAL|NORMAL,10,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,e.needstotal = rand([2|3|4|5|6|7|8|9|10|11|12]);,,,,,,,
Hijack,Split a dice in two[;]|on 1[;] also do [sword]3 damage,1,if(d==1){ e.castdirection = 1; attack(3); sfx(~_damage~); } else { e.castdirection = 0; } givedice(split(d)| ~splitdice~);,Magic Lockpick,NORMAL,,ITEM,GREEN,change_power,change_function,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hijack_upgraded,Split a <d6>-1 in two[;]|on 1[;] also do [sword]3 damage,1,if(d==1 # d==2){ e.castdirection = 1; attack(3); sfx(~_damage~); givedice(split(d)|~splitdice~); } else { e.castdirection = 0;  givedice(split(d-1)| ~splitdice~); },Magic Lockpick,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hijack_downgraded,Split a dice in two,1,givedice(split(d)| ~splitdice~);,Magic Lockpick,MIN2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pride,Recover [heal]<d6> health[;]|on 6[;] gain [reduce]1 reduce,2,attackself(-d); if(d == 6) {inflictself(REDUCE| 1);},Regenerate,MIN4,,ITEM,GREEN,change_power,change_function,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pride_upgraded,Recover [heal]<d6> health[;]|on even[;] gain [reduce]1 reduce,2,attackself(-d); if(d % 2 == 0) {inflictself(REDUCE| 1);},Regenerate,MIN4,,ITEM,GREEN,,,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pride_downgraded,Recover [heal]<d6> health,2,attackself(-d);,Regenerate,REQUIRE4,,ITEM,GREEN,,,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Presto,Heal [heal]6 for you and enemy|[gray](once per battle),1,attack(-6); attackself(-6);,Regenerate,REQUIRE1,,ITEM,GREEN,change_power,change_function,,_heal,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Presto_upgraded,Heal [heal]6 for you and enemy,1,attack(-6); attackself(-6);,Regenerate,REQUIRE1,,ITEM,GREEN,,,,_heal,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Presto_downgraded,Heal [heal]3 for you and enemy|[gray](once per battle),1,attack(-3); attackself(-3);,Regenerate,REQUIRE1,,ITEM,GREEN,,,,_heal,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glitter Bomb,Remove [mana] from enemy|for [sword]2 damage each,1,attack(getstatus(MANA) * 2); removestatus(MANA|getstatus(MANA));,Plasma Gun,EVEN,,ITEM,PURPLE,,,,_magic,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Tension,Gain [fury]2 fury[;] end your turn|[gray](once per battle),1,inflictself(FURY|2); self.endturnnow();,Fury,NORMAL|NORMAL,9,ITEM,RED,change_power,change_power,,_fury,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Tension_upgraded,Gain [fury]2 fury[;] end your turn|[gray](once per battle),1,inflictself(FURY|2); self.endturnnow();,Fury,COUNTDOWN,9,ITEM,RED,,,,_fury,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Tension_downgraded,Gain [fury]1 fury[;] end your turn|[gray](once per battle),1,inflictself(FURY); self.endturnnow();,Fury,NORMAL|NORMAL,9,ITEM,RED,,,,_fury,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Tension_weakened,Gain [fury]1 fury[;] end your turn|[gray](once per battle),1,inflictself(FURY); self.endturnnow();,Fury,COUNTDOWN,9,ITEM,RED,,,,_fury,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
First Stand,At the start of the first|turn[;] gain [dodge]Dodge,1,,Quick Thinking,,,ITEM,YELLOW,change_power,noeffect,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,e.changecolour(~YELLOW~);,,if(turn == 1) { e.animate(~flashandshake~); e.changecolour(~GRAY~); inflictself(DODGE); sfx(~_dodge~); },,,,,,
First Stand_upgraded,At the start of the first|two turns[;] gain [dodge]Dodge,1,,Quick Thinking,,,ITEM,YELLOW,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,e.changecolour(~YELLOW~);,,if(turn == 1 # turn == 2) { e.animate(~flashandshake~); inflictself(DODGE); sfx(~_dodge~); } if(turn == 2) { e.changecolour(~GRAY~); },,,,,,
My Cool Weapon,Do [sword]<double> damage[;] expand|range by 1 per [mana]1 mana,1,attack(d * 2);,Plasma Gun,MAX2,,MAGIC,PURPLE,change_power,change_function,,_magic,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,e.changeslots(~MAX2~);,var slot = e.getslots(); if(getstatusself(MANA) < 1 && slot[0] != ~MAX2~) { e.animate(~flashandshake~); e.changeslots([~MAX2~]); } else if(getstatusself(MANA) == 1 && slot[0] != ~MAX3~) { e.animate(~flashandshake~); e.changeslots([~MAX3~]); } else if(getstatusself(MANA) == 2 && slot[0] != ~MAX4~) { e.animate(~flashandshake~); e.changeslots([~MAX4~]); } else if(getstatusself(MANA) == 3 && slot[0] != ~MAX5~) { e.animate(~flashandshake~); e.changeslots([~MAX5~]); } else if(getstatusself(MANA) > 3 && slot[0] != ~NORMAL~) { e.animate(~flashandshake~); e.changeslots([~NORMAL~]); } ,,,var slot = e.getslots(); if(getstatusself(MANA) < 1 && slot[0] != ~MAX2~) { e.animate(~flashandshake~); e.changeslots([~MAX2~]); } else if(getstatusself(MANA) == 1 && slot[0] != ~MAX3~) { e.animate(~flashandshake~); e.changeslots([~MAX3~]); } else if(getstatusself(MANA) == 2 && slot[0] != ~MAX4~) { e.animate(~flashandshake~); e.changeslots([~MAX4~]); } else if(getstatusself(MANA) == 3 && slot[0] != ~MAX5~) { e.animate(~flashandshake~); e.changeslots([~MAX5~]); } else if(getstatusself(MANA) > 3 && slot[0] != ~NORMAL~) { e.animate(~flashandshake~); e.changeslots([~NORMAL~]); } ,,,,
My Cool Weapon_downgraded,Do [sword]<double> damage,1,attack(d * 2);,Plasma Gun,MAX2,,MAGIC,PURPLE,,,,_magic,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
My Cool Weapon_upgraded,Do [sword]<double> damage[;] expand|range by 1 per [mana]1 mana,1,attack(d * 2);,Plasma Gun,MAX3,,MAGIC,PURPLE,,,,_magic,0,NO,NO,NO,NO,NO,NO,NO,NO,,,e.changeslots(~MAX3~);,var slot = e.getslots(); if(getstatusself(MANA) < 1 && slot[0] != ~MAX3~) { e.animate(~flashandshake~); e.changeslots([~MAX3~]); } else if(getstatusself(MANA) == 1 && slot[0] != ~MAX4~) { e.animate(~flashandshake~); e.changeslots([~MAX4~]); } else if(getstatusself(MANA) == 2 && slot[0] != ~MAX5~) { e.animate(~flashandshake~); e.changeslots([~MAX5~]); } else if(getstatusself(MANA) > 2 && slot[0] != ~NORMAL~) { e.animate(~flashandshake~); e.changeslots([~NORMAL~]); } ,,,var slot = e.getslots(); if(getstatusself(MANA) < 1 && slot[0] != ~MAX3~) { e.animate(~flashandshake~); e.changeslots([~MAX3~]); } else if(getstatusself(MANA) == 1 && slot[0] != ~MAX4~) { e.animate(~flashandshake~); e.changeslots([~MAX4~]); } else if(getstatusself(MANA) == 2 && slot[0] != ~MAX5~) { e.animate(~flashandshake~); e.changeslots([~MAX5~]); } else if(getstatusself(MANA) > 2 && slot[0] != ~NORMAL~) { e.animate(~flashandshake~); e.changeslots([~NORMAL~]); } ,,,,
Sparkle Sparkle,Cost [mana]-1: return the dice|[gray](Reuseable),1,inflictself(MANA); givedice(d);,Stardust,NORMAL,,MAGIC,PURPLE,,,,_magic,-1,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
My Other Cool Weapon,Do [sword]<double> damage|Cost [mana]1: increase range after use,1,attack(d * 2); var slot = e.getslots(); if(getstatusself(MANA) > 0) { removestatusself(MANA|1); if(slot[0] == ~MAX2~) { e.animate(~flashandshake~); e.changeslots([~MAX3~]); } else if(slot[0] == ~MAX3~) { e.animate(~flashandshake~); e.changeslots([~MAX4~]); } else if(slot[0] == ~MAX4~) { e.animate(~flashandshake~); e.changeslots([~MAX5~]); } else if(slot[0] == ~MAX5~) { e.animate(~flashandshake~); e.changeslots([~NORMAL~]); }  },Plasma Gun,MAX2,,MAGIC,PURPLE,,,,_magic,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,e.changeslots(~MAX2~);,,,,,,,,
Buster Knife,Do [sword]<d6> damage|[gray](immune to errors)|[gray](Reusable),1,attack(d);,Pea Gun,MAX2|FREE1,,WEAPON,GRAY,increaserange,change_function,,_damage,-1,NO,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster Knife_downgraded,Do [sword]<d6> damage|[gray](immune to errors)|[gray](Reusable),1,attack(d);,Pea Gun,MAX2|FREE1,,WEAPON,GRAY,,,,_damage,2,NO,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Keyhole,Flip and split die[;]|flip results,2,var s = split(7-d); givedice([7-s[0]|7-s[1]]|~splitdice~);,Clone Device,NORMAL,,ITEM,,add2,complicate,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cookie Cake,Repeat next action twice,1,inflictself(FURY|2);,Fury,COUNTDOWN,24,ITEM,ORANGE,change_power,change_function,fury,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake_upgraded,Repeat next action twice,1,inflictself(FURY|2);,Fury,COUNTDOWN,18,ITEM,ORANGE,,,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake_downgraded,Repeat next action,1,inflictself(FURY);,Fury,COUNTDOWN,24,ITEM,ORANGE,,,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake_weakened,Repeat next action,1,inflictself(FURY);,Fury,COUNTDOWN,18,ITEM,ORANGE,,,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake?,Repeat next action twice[;]|but disable it next turn,1,inflictself(FURY|2);,Fury,COUNTDOWN,24,ITEM,ORANGE,change_power,change_function,,_fury,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake?_upgraded,Repeat next action twice[;]|but disable it next turn,1,inflictself(FURY|2);,Fury,COUNTDOWN,18,ITEM,ORANGE,,,,_fury,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake?_downgraded,Repeat next action[;]but|disable it next turn,1,inflictself(FURY);,Fury,COUNTDOWN,24,ITEM,ORANGE,,,,_fury,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Cookie Cake?_weakened,Repeat next action[;]but|disable it next turn,1,inflictself(FURY);,Fury,COUNTDOWN,18,ITEM,ORANGE,,,,_fury,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Big Knife,[sword]<d6> - 3[;] get dice - 3|[gray](Reusable),1,if(d < 4){ self.textparticle(~No effect!~); sfx(~_whoosh~); } else { attack(d - 3); givedice(d - 3); },Steal,MIN4,,WEAPON,RED,change_power,change_function,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Big Knife_upgraded,[sword]<d6> - 2[;] get dice - 2|[gray](Reusable),1,if(d < 3){ self.textparticle(~No effect!~); sfx(~_whoosh~); } else { attack(d - 2); givedice(d - 2); },Steal,MIN4,,WEAPON,RED,,,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Big Knife_downgraded,[sword]<d6> - 4[;] get dice - 4|[gray](Reusable),1,if(d < 5){ self.textparticle(~No effect!~); sfx(~_whoosh~); } else { attack(d - 4); givedice(d - 4); },Steal,MIN4,,WEAPON,RED,,,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Biohazard,Inflict [poison]<d6> poison|[gray](cooldown of 3 turns),1,inflict(POISON|d); self.setvar(~biocooldown~|3);,Poison Arrow,NORMAL,,WEAPON,PURPLE,change_power,complicate,,_poison,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~biocooldown~[;]0);,self.setvar(~biocooldown~[;]0);,if(self.getvar(~biocooldown~) > 0) {e.availablethisturn = false; } self.setvar(~biocooldown~[;]self.getvar(~biocooldown~) - 1);,,,,,,,
Biohazard_upgraded,Inflict [poison]<d6> poison|[gray](cooldown of 2 turns),1,inflict(POISON|d); self.setvar(~biocooldown~|2);,Poison Arrow,NORMAL,,WEAPON,PURPLE,,,,_poison,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~biocooldown~[;]0);,self.setvar(~biocooldown~[;]0);,if(self.getvar(~biocooldown~) > 0) {e.availablethisturn = false; } self.setvar(~biocooldown~[;]self.getvar(~biocooldown~) - 1);,,,,,,,
Even Cauldron,Do [sword]1 damage[;]|get [gold]1 gold,1,attack(1); self.gold += 1;,Harvest,NORMAL,,MAGIC,YELLOW,change_power,change_power,,pickupgold,0,NO,NO,NO,NO,NO,YES,NO,NO,1,,,,,,,,,,
Even Cauldron_upgraded,Do [sword]1[;] get [gold]1 gold|[gray](Reuseable),1,attack(1); self.gold += 1;,Harvest,NORMAL,,MAGIC,YELLOW,,,,pickupgold,2,NO,NO,NO,NO,NO,YES,NO,NO,,,,,,,,,,,
Even Cauldron_downgraded,Do [sword]1 damage,1,attack(1);,Harvest,NORMAL,,MAGIC,YELLOW,,,,pickupgold,0,NO,NO,NO,NO,NO,YES,NO,NO,,,,,,,,,,,
Patience,On start of turn 6[;]|increase max health by 3|no,1,,Regenerate,,,ITEM,GREEN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,if(turn == 6) { self.maxhp +=3; attackself(-3); sfx(~_heal~); },,,,,,
Patience_upgraded,On start of turn 5[;]|increase max health by 3,1,,Regenerate,,,ITEM,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(turn == 5) { self.maxhp +=3; attackself(-3); sfx(~_heal~); },,,,,,
Patience_downgraded,On start of turn 6[;]|increase max health by 1,1,,Regenerate,,,ITEM,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(turn == 6) { self.maxhp +=1; attackself(-1); sfx(~_heal~); },,,,,,
Patience_weakened,On start of turn 5[;]|increase max health by 1,1,,Regenerate,,,ITEM,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(turn == 5) { self.maxhp +=1; attackself(-1); sfx(~_heal~); },,,,,,
Berlin Massachusetts Key,Get a dice you already have|[gray](Reuseable),1,var seen = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); } } if(seen.length > 0) { shuffle(seen); givedice(seen[0]); } else { givedice(d); self.textparticle(~Only 1 dice!~) } ,Berlin Nerf OMG,NORMAL,,ITEM,PINK,change_power,removereusable,,none,2,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Berlin Massachusetts Key_upgraded,Get a dice you already have|[gray](Reuseable),1,var seen = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); } } if(seen.length > 0) { shuffle(seen); givedice(seen[0]); } else { givedice(d); self.textparticle(~Only 1 dice!~) } ,Berlin Nerf OMG,NORMAL,,ITEM,PINK,,,,none,3,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spectre Charm,+2 dice this fight[;] but|gain [vanish]Vanish each turn,1,self.extradice += 2; self.setvar(~spectre~|true);,Infinity Mirror,COUNTDOWN,12,ITEM,PURPLE,change_power,change_function,,magic_gaindice,0,YES,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~spectre~[;]false); e.changecolour(~PURPLE~);,self.setvar(~spectre~[;]false); e.changecolour(~PURPLE~);,if(self.getvar(~spectre~) == true) { e.changecolour(~PINK~); inflictself(VANISH); },,,,,,,
Spectre Charm_upgraded,+2 dice this fight[;] and|roll 2 dice now[;] but|gain [vanish]Vanish each turn,1,self.extradice += 2; self.setvar(~spectre~|true); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,Infinity Mirror,COUNTDOWN,12,ITEM,PURPLE,,,,magic_gaindice,0,YES,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~spectre~[;]false); e.changecolour(~PURPLE~);,self.setvar(~spectre~[;]false); e.changecolour(~PURPLE~);,if(self.getvar(~spectre~) == true) { e.changecolour(~PINK~); inflictself(VANISH); },,,,,,,
Spectre Charm_downgraded,+1 dice this fight[;] but|gain [vanish]Vanish each turn,1,self.extradice += 1; self.setvar(~spectre~|true);,Infinity Mirror,COUNTDOWN,12,ITEM,PURPLE,,,,magic_gaindice,0,YES,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~spectre~[;]false); e.changecolour(~PURPLE~);,self.setvar(~spectre~[;]false); e.changecolour(~PURPLE~);,if(self.getvar(~spectre~) == true) { e.changecolour(~PINK~); inflictself(VANISH); },,,,,,,
Slim Jim,Split a <double> in two,1,if(d < 4){ var doub = d * 2; givedice(split(doub)| ~splitdice~); } else if(d == 4){ var r = rand([6|5|4|3|2]); givedice([r|8 - r]); } else if(d == 5){ var r = rand([6|5|4]); givedice([r|10 - r]); } else { givedice([6|6]); },Megabump,MAX3,,ITEM,GREEN,simplify,change_power,,_splitdice,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Slim Jim_downgraded,Split a <d6> in two,1,givedice(split(d)| ~splitdice~);,Megabump,MAX3,,ITEM,GREEN,,,,_splitdice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Retreat,Odd: convert half of your [shield] to HP|Even: return the dice,2,if(d % 2 == 1) {attackself(getstatusself(SHIELD) * -0.5); removestatusself(SHIELD|getstatusself(SHIELD) * 0.5);} else {givedice(d);},Regenerate,NORMAL,,ITEM,ORANGE,change_power,change_function,,_heal,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Retreat_upgraded,Odd: convert half of your [shield] to HP|Return the dice,2,if(d % 2 == 1) {attackself(getstatusself(SHIELD) * -0.5); removestatusself(SHIELD|getstatusself(SHIELD) * 0.5);} givedice(d);,Regenerate,NORMAL,,ITEM,ORANGE,,,,_heal,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Retreat_downgraded,Convert half of your [shield] to HP,2,if(d % 2 == 1) {attackself(getstatusself(SHIELD) * -0.5); removestatusself(SHIELD|getstatusself(SHIELD) * 0.5);} else {givedice(d);},Regenerate,ODD,,ITEM,ORANGE,,,,_heal,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Watering Can,Dice value -1|(Cost [mana]1[]: return two dice),1,if(getstatusself(MANA) > 0) { removestatusself(MANA|1); if(d < 3) { givedice([1|1]); } else { givedice([d-1|d-2]); } } else { givedice(d-1); },Meganudge,MIN2,,ITEM,BRIGHTCYAN,change_power,complicate,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Watering Can_upgraded,Dice value -1|(Cost [mana]1[]: return two dice)|[gray](Reusable),1,if(getstatusself(MANA) > 0) { removestatusself(MANA|1); if(d < 3) { givedice([1|1]); } else { givedice([d-1|d-2]); } } else { givedice(d-1); },Meganudge,MIN2,,ITEM,BRIGHTCYAN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sucker Punch,Do [sword]6[;] return both dice|[gray](must be first action),1,attack(6); givedice([actualdice[0].basevalue|actualdice[1].basevalue]);,Shuriken,NORMAL|NORMAL,9,WEAPON,GREEN,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,if((actualdice[0] == null # actualdice[1] == null) && e.availablethisturn == true) { e.animate(~flashandshake~); e.availablethisturn = false; } else if(actualdice[0].basevalue + actualdice[1].basevalue != 9 && e.availablethisturn == true) {e.animate(~flashandshake~); e.availablethisturn = false; },,,,
Sucker Punch_upgraded,Do [sword]6[;] return both dice|[gray](must be second action),1,attack(6); givedice([actualdice[0].basevalue|actualdice[1].basevalue]);,Shuriken,NORMAL|NORMAL,9,WEAPON,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~lstrike~[;]0); e.availablethisturn = false,,self.setvar(~lstrike~[;]0); e.availablethisturn = false,,,self.setvar(~lstrike~[;]self.getvar(~lstrike~)+1); if (self.getvar(~lstrike~) == 1 && e.availablethisturn == false) { e.animate(~flashandshake~); e.availablethisturn = true; } if (self.getvar(~lstrike~) > 1) { if((actualdice[0] == null # actualdice[1] == null) && e.availablethisturn == true) { e.animate(~flashandshake~); e.availablethisturn = false; } else if(actualdice[0].basevalue + actualdice[1].basevalue != 9 && e.availablethisturn == true) {e.animate(~flashandshake~); e.availablethisturn = false; } },,,,
Sucker Punch_downgraded,Do [sword]6[;] return a dice|[gray](must be first action),1,attack(6);  var returndice = rand([actualdice[0].basevalue|actualdice[1].basevalue]); givedice(returndice);,Shuriken,NORMAL|NORMAL,9,WEAPON,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,if((actualdice[0] == null # actualdice[1] == null) && e.availablethisturn == true) { e.animate(~flashandshake~); e.availablethisturn = false; } else if(actualdice[0].basevalue + actualdice[1].basevalue != 9 && e.availablethisturn == true) {e.animate(~flashandshake~); e.availablethisturn = false; },,,,
Innovate,Get a dice you don't have,1,var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) {givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); givedice(notseen[0]); },Reroll,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Innovate_upgraded,Get a dice you don't have|,1,var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) {givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); givedice(notseen[0]); },Reroll,NORMAL,,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Innovate_downgraded,Get a 4[;] if you don't have one,1,var flag = true; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue == 4 {flag = false; } } if (flag == false) {givedice(d); self.textparticle(~You've got a 4!~);} else { givedice(4); },Reroll,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme,Gimme a gadget,1,Gadget.givegadget(self|e.gadget|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Berlin,Gimme Berlin,1,Gadget.givegadget(self|~Berlin Nerf OMG~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Fluff,Gimme Fluff,1,Gadget.givegadget(self|~Less Fluff~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Glass,Gimme Glass,1,Gadget.givegadget(self|~Plexiglass~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Test Armor,Gain alt reduce,1,inflictself(~alternate_reduce~);,Pillow Fort,NORMAL,,ITEM,ORANGE,,,,_shield,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gullibility Test,Duplicate dice[;] get [vanish]Vanish|[gray](Reuseable),1,givedice([d|d]); inflictself(VANISH);,Broken Gadget,NORMAL,,ITEM,PINK,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Broadkunai,Do [sword]<double> damage|[gray](Reuseable),1,attack(d*2);,Steal,MAX2,,WEAPON,RED,change_power,decreaserange,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Broadkunai_upgraded,Do [sword]<double> damage|[gray](Reuseable),1,attack(d*2);,Steal,MAX2,,WEAPON,RED,,,,_damage,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hell's Bells,Inflict [fire]1 burn per|[weaken]1 weaken on enemy,1,inflict(FIRE|getstatus(WEAKEN));,Hellfire,COUNTDOWN,18,ITEM,RED,change_power,change_function,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hell's Bells_upgraded,Inflict [fire]1 burn per|[weaken]1 weaken on enemy,1,inflict(FIRE|getstatus(WEAKEN));,Hellfire,COUNTDOWN,12,ITEM,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hell's Bells_downgraded,Inflict [fire]1 burn per|[weaken]2 weaken on enemy,1,var f = getstatus(WEAKEN) * 0.5; if (f % 1 != 0) { f = f - 0.5 } inflict(FIRE|f);,Hellfire,COUNTDOWN,18,ITEM,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hell's Bells_weakened,Inflict [fire]1 burn per|[weaken]2 weaken on enemy,1,var f = getstatus(WEAKEN) * 0.5; if (f % 1 != 0) { f = f - 0.5 } inflict(FIRE|f);,Hellfire,COUNTDOWN,12,ITEM,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Under Pressure,Inflict [ice]1 freeze per|[weaken]1 weaken on enemy,1,inflict(ICE|getstatus(WEAKEN));,Arctic Storm,COUNTDOWN,18,ITEM,BRIGHTCYAN,change_power,change_function,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Under Pressure_upgraded,Inflict [ice]1 freeze per|[weaken]1 weaken on enemy,1,inflict(ICE|getstatus(WEAKEN));,Arctic Storm,COUNTDOWN,12,ITEM,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Under Pressure_downgraded,Inflict [ice]1 freeze per|[weaken]2 weaken on enemy,1,var f = getstatus(WEAKEN) * 0.5; if (f % 1 != 0) { f = f - 0.5 } inflict(ICE|f); // the f is for freeze,Arctic Storm,COUNTDOWN,18,ITEM,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Under Pressure_weakened,Inflict [ice]1 freeze per|[weaken]2 weaken on enemy,1,var f = getstatus(WEAKEN) * 0.5; if (f % 1 != 0) { f = f - 0.5 } inflict(ICE|f);,Arctic Storm,COUNTDOWN,12,ITEM,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ground Wire,Inflict [shock]1 shock per|[weaken]1 weaken on enemy,1,inflict(SHOCK|getstatus(WEAKEN));,Electrify,COUNTDOWN,18,ITEM,YELLOW,change_power,change_function,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ground Wire_upgraded,Inflict [shock]1 shock per|[weaken]1 weaken on enemy,1,inflict(SHOCK|getstatus(WEAKEN));,Electrify,COUNTDOWN,12,ITEM,YELLOW,,,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ground Wire_downgraded,Inflict [shock]1 shock per|[weaken]2 weaken on enemy,1,var f = getstatus(WEAKEN) * 0.5; if (f % 1 != 0) { f = f - 0.5 } inflict(SHOCK|f); // the f is for fuckiambeinghitbyalightningbolt,Electrify,COUNTDOWN,18,ITEM,YELLOW,,,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ground Wire_weakened,Inflict [shock]1 shock per|[weaken]2 weaken on enemy,1,var f = getstatus(WEAKEN) * 0.5; if (f % 1 != 0) { f = f - 0.5 } inflict(SHOCK|f);,Electrify,COUNTDOWN,12,ITEM,YELLOW,,,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wisper,Inflict [weaken]1 and [vanish]Vanish|I am so brilliant,1,inflict(WEAKEN); inflict(VANISH);,Burrower,ODD,,ITEM,ORANGE,,,,_weaken,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stale Bat,Do [sword]<d6> damage|(Slots shrink by 2 each turn),1,attack(d); //todo lol. also 'fail bat' 50% chance not to work,Lucky Shot,NORMAL|FREE4,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,e.changeslots([~NORMAL~|~FREE4~]);,if(turn == 2) { e.changeslots([~NORMAL~|~FREE2~]); } else if(turn == 3) { e.changeslots([~NORMAL~]); } else if(turn == 4) { e.changeslots([~MAX4~]); } else if(turn == 5) { e.changeslots([~MAX2~]); } else if(turn == 6) { e.changeslots([]); },,,,,,,
Gimme Eating,Gimme Eating,1,Gadget.givegadget(self|~Healthy Eating~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Under,Gimme Under,1,Gadget.givegadget(self|~Underwhelm~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimmy Neutron,Gimmy Neutron,1,Gadget.givegadget(self|~Neutron Star~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Knife,Gimme Knife,1,Gadget.givegadget(self|~Dice Bash~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Drill,Inflict [weaken]<d6> weaken,2,inflict(WEAKEN|d);,Burrower,MAX3,,WEAPON,ORANGE,change_power,change_function,,_weaken,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Drill_downgraded,Do [weaken]<d6> damage,2,attack(d|WEAKEN);,Burrower,MAX3,,WEAPON,ORANGE,,,,_weaken,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Drill_upgraded,Do [weaken]<d6> damage[;] then|inflict [weaken]<d6> weaken,2,attack(d|WEAKEN); inflict(WEAKEN|d);,Burrower,MAX3,,WEAPON,ORANGE,,,,_weaken,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dril,i love saiyng shit like [quote]Yow!|This kittens got Claws![quote]|whenever a woman stabs|me <var:yow> times in the neck|and chest,2,attack(1);,Throw Dice,COUNTDOWN,45,WEAPON,ORANGE,,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~yow~|38);,,,,if (self.getvar(~yow~) > 0) { inflictself(FURY); self.setvar(~yow~|self.getvar(~yow~)-1); },,e.preventdefault = true; e.maintainfury = true;,
Dril_downgraded,setting foward the|doomsday clock a little bit|because i saw a guy with|yakuza tattoos knifing the|shit out of a mattress,2,jinx(~Doomsday~|~take [sword]38 damage~|~Take [sword]38 damage~|~attack(38); sfxdamage(null|38);~|target|self|2|(d * 3));  sfx(~_thinghappens~);,Throw Dice,COUNTDOWN,45,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Kale Bat,Do [sword]<slotdoubles>. If this defeats[;]|gain max HP equal to excess|damage[;] and destroy this,2,var thp = target.hp; attack(d); if(target.hp <= 0){ var gain = thp - d; gain -= getstatus(~alternate_weaken~); gain -= getstatusself(~extradamage~); gain += getstatus(~reduce~); if(gain < 0) { self.maxhp -= gain; attackself(gain); sfx(~_heal~); } e.name = ~ncrsaysremovethis~; removeequipment(~ncrsaysremovethis~); },Healthy Eating,DOUBLES|DOUBLES,,WEAPON,GREEN,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Kale Bat_upgraded,Do [sword]<d6>. If this defeats[;]|gain max HP equal to excess|damage[;] and destroy this,2,var thp = target.hp; attack(d); if(target.hp <= 0){ var gain = thp - d; gain -= getstatus(~alternate_weaken~); gain -= getstatusself(~extradamage~); gain += getstatus(~reduce~); if(gain < 0) { self.maxhp -= gain; attackself(gain); sfx(~_heal~); } e.name = ~ncrsaysremovethis~; removeequipment(~ncrsaysremovethis~); },Healthy Eating,NORMAL,,WEAPON,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Kale Bat_downgraded,Do [sword]6. If this defeats[;]|gain max HP equal to excess|damage[;] and destroy this,2,var thp = target.hp; attack(6); if(target.hp <= 0){ var gain = thp - 6; gain -= getstatus(~alternate_weaken~); gain -= getstatusself(~extradamage~); gain += getstatus(~reduce~); if(gain < 0) { self.maxhp -= gain; attackself(gain); sfx(~_heal~); } e.name = ~ncrsaysremovethis~; removeequipment(~ncrsaysremovethis~); },Healthy Eating,REQUIRE6|REQUIRE6,,WEAPON,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fail Bat,Do [sword]<d6> damage|50% chance to do nothing,1,if (e.getslots() == [~NORMAL~|~FREE4~]) { attack(d); sfxdamage(target|d); } // screw it - cant get this to work in a way that doesnt look boring n ugly (i.e. always firing towards the target; but chance to just not do any damage and spawn a no effect text particle),Lucky Shot,NORMAL|FREE4,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.changeslots([~NORMAL~|~FREE4~]);,,,,var odds = 50; if(getstatusself(~luck~) > 0){ odds = 100; } else if(getstatusself(~luck+~) > 0){ odds = 100; }  if(!chance(odds)){ e.destroydice(); e.removedice(); e.changeslots([]); e.animate(~curse~); sfx(~_curse~);  },,,
Fail Bat_upgraded,Do [sword]<d6> damage|50% chance to do nothing,1,if (e.getslots() == [~NORMAL~|~FREE6~]) { attack(d); sfxdamage(target|d); },Lucky Shot,NORMAL|FREE6,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.changeslots([~NORMAL~|~FREE6~]);,,,,var odds = 50; if(getstatusself(~luck~) > 0){ odds = 100; } else if(getstatusself(~luck+~) > 0){ odds = 100; }  if(!chance(odds)){ e.destroydice(); e.removedice(); e.changeslots([]); e.animate(~curse~); sfx(~_curse~);  },,,
Fail Bat_downgraded,Do [sword]<d6> damage|75% chance to do nothing,1,if (e.getslots() == [~NORMAL~|~FREE4~]) { attack(d); sfxdamage(target|d); },Lucky Shot,NORMAL|FREE4,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.changeslots([~NORMAL~|~FREE4~]);,,,,var odds = 25; if(getstatusself(~luck~) > 0){ odds = 50; } else if(getstatusself(~luck+~) > 0){ odds = 100; }  if(!chance(odds)){ e.destroydice(); e.removedice(); e.changeslots([]); e.animate(~curse~); sfx(~_curse~); },,,
Wail Bat,Do [sword]<d6> damage|(Get [silence]Silenced each turn),2,attack(d);,Lucky Shot,NORMAL|FREE3,,WEAPON,PURPLE,reducesize,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,if (self.name == Warrior) { self.changelimitbreak(self|~Tantrum~|~Fury?~); } else if (self.name == Thief) { self.changelimitbreak(self|~Very Unlucky Roll~|~Unlucky Roll~); } else if (self.name == Inventor) { self.changelimitbreak(self|~Unfocused~|~Focus~); } else if (self.name == Witch) { self.changelimitbreak(self|~Marble~|~Crystal Ball~); },,e.animate(~flashandshake~); sfx(~silence~); if(self.getstatus(~alternate_reduce~) > 0) { removestatusself(~alternate_reduce~|1); if(SILENCE == ~silence~) self.textparticle(~Blocked silence!~); else { self.textparticle(~Blocked silence?!~); } } else { if(SILENCE == ~silence~) { if(self.name == ~Warrior~ # self.name == ~Thief~ # self.name == ~Inventor~ # self.name == ~Witch~) { self.getskillcard().animate(~silence~); } else { self.textparticle(~No effect!~); } } else { if (self.name == ~Warrior~) { self.changelimitbreak(self|~Fury?~|~Tantrum~); } else if (self.name == ~Thief~) { self.changelimitbreak(self|~Unlucky Roll~|~Very Unlucky Roll~); } else if (self.name == ~Inventor~) { self.changelimitbreak(self|~Focus~|~Unfocused~); } else if (self.name == ~Witch~) { self.changelimitbreak(self|~Crystal Ball~|~Marble~); } else { self.textparticle(~No effect!~); } } inflictself(SILENCE); },if (self.name == Warrior) { self.changelimitbreak(self|~Tantrum~|~Fury?~); } else if (self.name == Thief) { self.changelimitbreak(self|~Very Unlucky Roll~|~Unlucky Roll~); } else if (self.name == Inventor) { self.changelimitbreak(self|~Unfocused~|~Focus~); } else if (self.name == Witch) { self.changelimitbreak(self|~Marble~|~Crystal Ball~); },,,,,
Wail Bat_downgraded,Do [sword]<d6> damage|(Get [silence]Silenced each turn),2,attack(d);,Lucky Shot,NORMAL|FREE1,,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,if (self.name == Warrior) { self.changelimitbreak(self|~Tantrum~|~Fury?~); } else if (self.name == Thief) { self.changelimitbreak(self|~Very Unlucky Roll~|~Unlucky Roll~); } else if (self.name == Inventor) { self.changelimitbreak(self|~Unfocused~|~Focus~); } else if (self.name == Witch) { self.changelimitbreak(self|~Marble~|~Crystal Ball~); },,e.animate(~flashandshake~); sfx(~silence~); if(self.getstatus(~alternate_reduce~) > 0) { removestatusself(~alternate_reduce~|1); if(SILENCE == ~silence~) self.textparticle(~Blocked silence!~); else { self.textparticle(~Blocked silence?!~); } } else { if(SILENCE == ~silence~) { if(self.name == ~Warrior~ # self.name == ~Thief~ # self.name == ~Inventor~ # self.name == ~Witch~) { self.getskillcard().animate(~silence~); } else { self.textparticle(~No effect!~); } } else { if (self.name == ~Warrior~) { self.changelimitbreak(self|~Fury?~|~Tantrum~); } else if (self.name == ~Thief~) { self.changelimitbreak(self|~Unlucky Roll~|~Very Unlucky Roll~); } else if (self.name == ~Inventor~) { self.changelimitbreak(self|~Focus~|~Unfocused~); } else if (self.name == ~Witch~) { self.changelimitbreak(self|~Crystal Ball~|~Marble~); } else { self.textparticle(~No effect!~); } } inflictself(SILENCE); },if (self.name == Warrior) { self.changelimitbreak(self|~Tantrum~|~Fury?~); } else if (self.name == Thief) { self.changelimitbreak(self|~Very Unlucky Roll~|~Unlucky Roll~); } else if (self.name == Inventor) { self.changelimitbreak(self|~Unfocused~|~Focus~); } else if (self.name == Witch) { self.changelimitbreak(self|~Marble~|~Crystal Ball~); },,,,,
Wail Bat_weakened,Do [sword]<d6> damage|(Get [silence]Silenced each turn),1,attack(d);,Lucky Shot,NORMAL|FREE1,,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,if (self.name == Warrior) { self.changelimitbreak(self|~Tantrum~|~Fury?~); } else if (self.name == Thief) { self.changelimitbreak(self|~Very Unlucky Roll~|~Unlucky Roll~); } else if (self.name == Inventor) { self.changelimitbreak(self|~Unfocused~|~Focus~); } else if (self.name == Witch) { self.changelimitbreak(self|~Marble~|~Crystal Ball~); },,e.animate(~flashandshake~); sfx(~silence~); if(self.getstatus(~alternate_reduce~) > 0) { removestatusself(~alternate_reduce~|1); if(SILENCE == ~silence~) self.textparticle(~Blocked silence!~); else { self.textparticle(~Blocked silence?!~); } } else { if(SILENCE == ~silence~) { if(self.name == ~Warrior~ # self.name == ~Thief~ # self.name == ~Inventor~ # self.name == ~Witch~) { self.getskillcard().animate(~silence~); } else { self.textparticle(~No effect!~); } } else { if (self.name == ~Warrior~) { self.changelimitbreak(self|~Fury?~|~Tantrum~); } else if (self.name == ~Thief~) { self.changelimitbreak(self|~Unlucky Roll~|~Very Unlucky Roll~); } else if (self.name == ~Inventor~) { self.changelimitbreak(self|~Focus~|~Unfocused~); } else if (self.name == ~Witch~) { self.changelimitbreak(self|~Crystal Ball~|~Marble~); } else { self.textparticle(~No effect!~); } } inflictself(SILENCE); },if (self.name == Warrior) { self.changelimitbreak(self|~Tantrum~|~Fury?~); } else if (self.name == Thief) { self.changelimitbreak(self|~Very Unlucky Roll~|~Unlucky Roll~); } else if (self.name == Inventor) { self.changelimitbreak(self|~Unfocused~|~Focus~); } else if (self.name == Witch) { self.changelimitbreak(self|~Marble~|~Crystal Ball~); },,,,,
Platinum Blade,Do [sword]<d6> damage. On three|6s in a row[;] start an extra|turn & take this out of play,2,attack(d); if (d == 6) { sfx(~_plasma~); } if(e.dicehistory[0] == 6 && e.dicehistory[1] == 6 && e.dicehistory[2] == 6) { inflictself(EXTRATURN); self.endturnnow(); },Time Stop,NORMAL,,WEAPON,PINK,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,trace(e.dicehistory); if(e.dicehistory[0] == 6 && e.dicehistory[1] == 6 && e.dicehistory[2] == 6) { e.onceperbattle = true; },,,
Platinum Blade_upgraded,Do [sword]<d6> damage. On three|6s in a row[;] gain an extra|turn & take this out of play,2,attack(d); if (d == 6) { self.setvar(~platinum~|self.getvar(~platinum~)+1); sfx(~_plasma~); } else { self.setvar(~platinum~|0); } if (self.getvar(~platinum~) >= 3) { e.removefromthisbattle(); inflictself(EXTRATURN); },Time Stop,NORMAL,,WEAPON,PINK,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Platinum Blade_downgraded,Do [sword]<d6> damage. On three|6s in a row[;] start an extra|turn & take this out of play,2,attack(d); if (d == 6) { self.setvar(~platinum~|self.getvar(~platinum~)+1); sfx(~_plasma~); } else { self.setvar(~platinum~|0); } if (self.getvar(~platinum~) >= 3) { e.removefromthisbattle(); inflictself(EXTRATURN); self.endturnnow(); },Time Stop,REQUIRE6,,WEAPON,PINK,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wrongo,Next enemy move applies|to both you and them,1,jinx(~Wrongo~|~blaah~|~Blah~|~inflict(\~reversenexttarget\~); inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,16,ITEM,RED,change_power,change_power,fury,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo_upgraded,Next enemy move applies|to both you and them,1,jinx(~Wrongo+~|~blaah~|~Blah~|~inflict(\~reversenexttarget\~); inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,12,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo_downgraded,Next enemy move|applies twice,1,jinx(~Wrongo-~|~blaah~|~Blah~|~inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,16,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo_weakened,Next enemy move|applies twice,1,jinx(~Wrongo-~|~blaah~|~Blah~|~inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,12,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo?,Next enemy move applies|to both you and them[;]|but is unusable next turn,1,jinx(~Wrongo?~|~blaah~|~Blah~|~inflict(\~reversenexttarget\~); inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,16,ITEM,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo?_upgraded,Next enemy move applies|to both you and them[;]|but is unusable next turn,1,jinx(~Wrongo?+~|~blaah~|~Blah~|~inflict(\~reversenexttarget\~); inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,12,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo?_downgraded,Next enemy move|applies twice[;] but is|unusable next turn,1,jinx(~Wrongo?-~|~blaah~|~Blah~|~inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,16,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Wrongo?_weakened,Next enemy move|applies twice[;] but is|unusable next turn,1,jinx(~Wrongo?-~|~blaah~|~Blah~|~inflict(FURY); sfx(\~_fury\~);~|target|self|1|0);,Dramatic Pause,COUNTDOWN,12,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Revolver,Do damage equal to|2x excess value inserted,1,var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; trace(sum); } trace(~SPAM~); trace(sum); if (sum - e.countdown > 0) { attack(2 * (sum - e.countdown)); sfxdamage(2 * (sum - e.countdown)); } else { self.textparticle(~No effect!~); } e.dicehistory = []; ,Dice Bash,COUNTDOWN,7,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Revolver_upgraded,Do damage equal to|2x excess value inserted,1,var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; trace(sum); } trace(~SPAM~); trace(sum); if (sum - e.countdown > 0) { attack(2 * (sum - e.countdown)); sfxdamage(2 * (sum - e.countdown)); } else { self.textparticle(~No effect!~); } e.dicehistory = []; ,Dice Bash,COUNTDOWN,3,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Revolver_downgraded,Do damage equal to|excess value inserted,1,var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; trace(sum); } trace(~SPAM~); trace(sum); if (sum - e.countdown > 0) { attack(sum - e.countdown); sfxdamage(sum - e.countdown); } else { self.textparticle(~No effect!~); } e.dicehistory = [] ,Dice Bash,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Revolver_weakened,Do damage equal to|excess value inserted,1,var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; trace(sum); } trace(~SPAM~); trace(sum); if (sum - e.countdown > 0) { attack(sum - e.countdown); sfxdamage(sum - e.countdown); } else { self.textparticle(~No effect!~); } e.dicehistory = [] ,Dice Bash,COUNTDOWN,3,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cubby,Receive all dice|put into this,1,givedice(e.dicehistory); e.dicehistory = []; //also make sure to add something in the on any equipment use section that checks if the card used is sneeze+; if this card is ready; and if this card's countdown is over 6; and if so do the snap thing,Magic Dice,COUNTDOWN,7,ITEM,RED,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cubby_upgraded,Receive all dice|put into this,1,givedice(e.dicehistory); e.dicehistory = []; //also don't put double quotes in comments; who knew,Magic Dice,COUNTDOWN,10,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cubby_downgraded,Roll a new dice,1,givedice(); e.dicehistory = [];,Magic Dice,COUNTDOWN,7,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cubby_weakened,Roll a new dice,1,givedice(); e.dicehistory = [];,Magic Dice,COUNTDOWN,10,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warhammer,Do 12 damage[;] if filled|perfectly[;] inflict [shock]3 shock,1,attack(12); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|3); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,16,WEAPON,YELLOW,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warhammer_upgraded,Do 9 damage[;] if filled|perfectly[;] inflict [shock]3 shock,1,attack(9); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|3); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,12,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warhammer_downgraded,Do 12 damage[;] if filled|perfectly[;] inflict [shock]1 shock,1,attack(12); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|1); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,16,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warhammer_weakened,Do 9 damage[;] if filled|perfectly[;] inflict [shock]1 shock,1,attack(9); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|1); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,12,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,var cubbymodulo = (e.remainingcountdown % 7); trace(~cubby modulo:~ + cubbymodulo); e.dicehistory.push(cubbymodulo); trace(~dicehistory:~ + e.dicehistory); var cubbysixes = ((e.remainingcountdown - cubbymodulo) / 6); trace(~cubby sixes:~ + cubbysixes); cubbysixes--; trace(~cubby sixes after being reduced:~ + cubbysixes); for(i in 0...cubbysixes) {e.dicehistory.push(6);} trace(~dicehistory:~ + e.dicehistory);,,
Warhammer 40K,Do 40[;]000 damage[;] if filled|perfectly[;] inflict [shock]20[yellow][;]000[],2,attack(40000); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|20000); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,99,WEAPON,YELLOW,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,var cubbymodulo = (e.remainingcountdown % 7); trace(~cubby modulo:~ + cubbymodulo); e.dicehistory.push(cubbymodulo); trace(~dicehistory:~ + e.dicehistory); var cubbysixes = ((e.remainingcountdown - cubbymodulo) / 6); trace(~cubby sixes:~ + cubbysixes); cubbysixes--; trace(~cubby sixes after being reduced:~ + cubbysixes); for(i in 0...cubbysixes) {e.dicehistory.push(6);} trace(~dicehistory:~ + e.dicehistory);,,
Warhammer 40K_upgraded,Do 40[;]000 damage[;] if filled|perfectly[;] inflict [shock]20[yellow][;]000[],2,attack(40000); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|20000); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,74,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warhammer 40K_downgraded,Do 40[;]000 damage[;] if filled|perfectly[;] inflict [shock]2[yellow][;]000[],2,attack(40000); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|2000); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,99,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warhammer 40K_weakened,Do 40[;]000 damage[;] if filled|perfectly[;] inflict [shock]2[yellow][;]000[],2,attack(40000); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(SHOCK|2000); sfx(~_shock~); } e.dicehistory = [];,Electrify,COUNTDOWN,74,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Baby's First Counting Book,Do [sword]5 damage[;]|on 1[;] 2[;] 3[;] 4[;] 5[;] do [sword]15,1,var coolflag = true; if(e.dicehistory.length = 5) { for(i in 0...4) { if(e.dicehistory[i].basevalue != i + 1) { coolflag = false; } } } else { coolflag = false; } if(coolflag == true) { attack(15); } else { attack(5); } e.dicehistory = [];,Berlin Nerf OMG,COUNTDOWN,15,WEAPON,YELLOW,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Baby's First Counting Book_upgraded,Do [sword]5 damage[;]|on 1[;] 2[;] 3[;] 4[;] 5[;] do [sword]15|,1,var coolflag = true; if(e.dicehistory.length = 5) { for(i in 0...4) { if(e.dicehistory[i].basevalue != i + 1) { coolflag = false; } } } else { coolflag = false; } if(coolflag == true) { attack(15); } else { attack(5); } e.dicehistory = [];,Berlin Nerf OMG,COUNTDOWN,15,WEAPON,YELLOW,,,,_damage,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Baby's First Counting Book_downgraded,Do [sword]5 damage[;]|on 5[;] 4[;] 3[;] 2[;] 1[;] do [sword]15,1,var coolflag = true; if(e.dicehistory.length = 5) { for(i in 0...4) { if(e.dicehistory[i].basevalue != 5 - i) { coolflag = false; } } } else { coolflag = false; } if(coolflag == true) { attack(15); } else { attack(5); } e.dicehistory = [];,Berlin Nerf OMG,COUNTDOWN,15,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Advanced Calculus,Divide 1st number by 2nd[;]|deal quotient as damage,1,attack((actualdice[0].basevalue / actualdice[1].basevalue));,Static Shock,NORMAL|NORMAL,,WEAPON,GREEN,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Advanced Calculus_downgraded,Divide 1st number by 2nd[;]|deal quotient as damage,1,attack((actualdice[0].basevalue / actualdice[1].basevalue)); //attack(1);,Static Shock,DOUBLES|DOUBLES,,WEAPON,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Advanced Calculus_upgraded,Divide 1st number by 2nd[;]|deal quotient as damage,1,attack((actualdice[0].basevalue / actualdice[1].basevalue)); //attack(d);,Static Shock,NORMAL|FREE1,,WEAPON,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gadsby Gun,Do [sword]2. If your gizmo's alias|lacks a particular common|Latin symbol[;] do [sword]5.,1,trace(Gadget.getcurrentgadget(self)); var g = Gadget.getcurrentgadget(self).split(~e~); if(g.length == 1) { attack(5); } else { attack(2); } trace(g.length); trace(g); //i wonder if you could mess with haxe enough to write this script without using the letter e as well,Plasma Gun,ODD,,WEAPON,YELLOW,change_power,complicate,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gadsby Gun_upgraded,Do [sword]3. If your gizmo's alias|lacks a particular common|Latin symbol[;] do [sword]6.,1,trace(Gadget.getcurrentgadget(self)); var g = Gadget.getcurrentgadget(self).split(~e~); if(g.length == 1) { attack(6); } else { attack(3); } trace(g.length); trace(g); //i wonder if you could mess with haxe enough to write this script without using the letter e as well,Plasma Gun,ODD,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dripping Yellow Madness,Do [sword]<d6> damage[;] on 6[;]|repaint an enemy card,1,attack(d); if(d == 6) { var cardlist = []; for(eq in target.equipment) { if (eq.equipmentcol != 4) { cardlist.push(eq); } } } if (cardlist.length > 0) { shuffle(cardlist); cardlist[0].changecolour(~YELLOW~); sfx(~_thinghappens~); },Zap,NORMAL,,WEAPON,YELLOW,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dripping Yellow Madness_upgraded,Do [sword]<d6> damage[;] on even[;]|repaint an enemy card,1,attack(d); if(d == 6) { var cardlist = []; for(eq in target.equipment) { if (eq.equipmentcol != 4) { cardlist.push(eq); } } } if (cardlist.length > 0) { shuffle(cardlist); cardlist[0].changecolour(~YELLOW~); sfx(~_thinghappens~); },Zap,NORMAL,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dripping Yellow Madness_downgraded,Do [sword]<d6> damage[;] on 6[;]|repaint one of your cards,1,attack(d); if(d == 6) { var cardlist = []; for(eq in self.equipment) { if (eq.equipmentcol != 4 && eq.ready) { cardlist.push(eq); } } } if(cardlist.length == 0) { for(eq in self.equipment) { if (eq.equipmentcol != 4) { cardlist.push(eq); } } } if (cardlist.length > 0) { shuffle(cardlist); if(cardlist[0].ready) { cardlist[0].animate(~flashandshake~); } cardlist[0].changecolour(~YELLOW~); sfx(~_thinghappens~); },Zap,NORMAL,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Going Really Fast,Take an extra turn. Resets if|you insert >1 dice this turn|[gray](once per battle),1,inflictself(EXTRATURN); self.endturnnow();,Time Stop,COUNTDOWN,18,ITEM,YELLOW,change_power,change_power,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,e.dicehistory = [];,,,,,if(e.remainingcountdown > 6) { roboterror(self| [e]); e.remainingcountdown = 18; },e.preventdefault = true; e.maintainfury = true;,if(e.dicehistory.length > 1 && e.ready) { e.destroydice(); e.animate(~flashandshake~); e.remainingcountdown = 18; e.dicehistory = []; }
Going Really Fast_upgraded,Gain an extra turn. Resets if|you insert >1 dice this turn|[gray](once per battle),1,inflictself(EXTRATURN);,Time Stop,COUNTDOWN,18,ITEM,YELLOW,,,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,e.dicehistory = [];,,,,,if(e.remainingcountdown > 6) { roboterror(self| [e]); e.remainingcountdown = 18; },e.preventdefault = true; e.maintainfury = true;,if(e.dicehistory.length > 1 && e.ready) { e.destroydice(); e.animate(~flashandshake~); e.remainingcountdown = 18; e.dicehistory = []; }
Going Really Fast_downgraded,Get three new dice. Resets if|you insert >1 dice this turn|[gray](once per battle),1,givedice(rand([1|2|3|4|5|6])); givedice(rand([1|2|3|4|5|6])); givedice(rand([1|2|3|4|5|6]));,Time Stop,COUNTDOWN,18,ITEM,YELLOW,,,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,e.dicehistory = [];,,,,,if(e.remainingcountdown > 6) { roboterror(self| [e]); e.remainingcountdown = 18; },e.preventdefault = true; e.maintainfury = true;,if(e.dicehistory.length > 1 && e.ready) { e.destroydice(); e.animate(~flashandshake~); e.remainingcountdown = 18; e.dicehistory = []; }
Paul of Mirrors,[]+1 dice this fight|(to Paul. Who's Paul?),1,donothing();,Plexiglass,REQUIRE6,,ITEM,PURPLE,simplify,doublerequirements,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Rod,GIMME,1,Gadget.changegadget(self| ~Heat Ray~| ~Rod~);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Operator,Do [sword]<d6> damage|In two turns[;] receive a <d6>,2,attack(d); jinx(~Operator~|~receive a %VAR%~|~Receive a %VAR%~|~inflict(\~stash\~+%VAR%); sfx(\~magic_gaindice\~); ~|self|self|2|d); sfx(~_thinghappens~);,Efficiency,MAX5,,WEAPON,PINK,simplify,complicate,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Broken Flashlight,50% chance to either|make 1 copy of each dice|or self-inflict [vanish]Vanish,1,var odds = 50; if(getstatusself(~luck~) > 0){ odds = 100; } else if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { var seen = []; for (mydice in self.dicepool){ if (mydice.available() && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); } } if(seen.length > 0) { for(i in 0...seen.length) { givedice(seen[i]); } } } else { inflictself(VANISH); sfx(~_vanish~); },Clone Device,ODD,,ITEM,PINK,simplify,complicate,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blind Justice,Do [sword]<d6> damage[;]|double if dice is [blind]blind,1,if (actualdice[0].blind == true) { attack(d * 2); } else { attack(d); },Obfuscate,MAX5,,WEAPON,PURPLE,add1,change_power,blind,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blind Justice_downgraded,Do [sword]<d6> damage|if dice is [blind]blind,1,if (actualdice[0].blind == true) { attack(d); },Obfuscate,MAX5,,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blind Justice?,Do [sword]<d6> damage[;]|double if you're [confuse]confused,1,if (actualdice[0].blind == true) { attack(d * 2); } else { attack(d); },Obfuscate,MAX5,,WEAPON,PURPLE,add1,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blind Justice?_downgraded,Do [sword]<d6> damage|if you're [confuse]confused,1,if (actualdice[0].blind == true) { attack(d); },Obfuscate,MAX5,,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirrorang,[]+2 dice this fight[;]|+1 dice for enemy,1,if(!simulation) { self.extradice+= 2; target.extradice++; } else { bonus(1000); },Plexiglass,REQUIRE6,,ITEM,PURPLE,simplify,change_power,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirrorang_downgraded,[]+1 dice this fight[;]|+1 dice for enemy,1,if(!simulation) { self.extradice++; target.extradice++; } else { bonus(1000); },Plexiglass,REQUIRE6,,ITEM,PURPLE,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Combat,Do [sword]<d6> damage|(You take [heart]2 dmg each turn),2,attack(d);,Lucky Shot,NORMAL|FREE3,,WEAPON,GRAY,,,,_damage,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Zombocombat,Do [sword]<d6> damage|(Get a random debuff each turn),2,attack(d);,Lucky Shot,NORMAL|FREE3,,WEAPON,GRAY,,,,_damage,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,var s = rand([0|1|2|2|2|2|3|3|3|3|4|4|4|5|5|5|6|6]); var statuspool = [CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]; var soundpool = [~_curse~|~_lock~|~_fire~|~_freeze~|~_weaken~|~_shock~|~_poison~]; inflictself(statuspool[s]); sfx(soundpool[s]);,,,,,,,
Sickle,Do [shock]<d6> damage[;]|on <d6>[;] inflict [shock]1 shock,2,var kludge = e.fulldescription.substr(22|1); attack(d|SHOCK); if(!e.fulldescription.substr(28|1) > 0) { e.fulldescription = ~Do [shock]<d6> damage[~ + ~;]~ + kludge + ~on ~ + d + ~[;~ + ~] inflict [shock]1 shock~; } if(d == e.fulldescription.substr(28|1) ) { inflict(SHOCK); sfx(~_shock~|~~|0.2); } sfxdamage(target|d); ,Electrify,NORMAL,,WEAPON,YELLOW,reducesize,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,e.fulldescription = ~Do [shock]<d6> damage[~ + ~;]~ + e.fulldescription.substr(24|1) + ~on <d6>[~ + ~;] inflict [shock]1 shock~;,e.fulldescription = ~Do [shock]<d6> damage[~ + ~;]~ + e.fulldescription.substr(24|1) + ~on <d6>[~ + ~;] inflict [shock]1 shock~;,,,,,,,,
Sickle_downgraded,Do [shock]<d6> damage,2,attack(d|SHOCK);,Electrify,NORMAL,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,e.fulldescription = ~Do [shock]<d6> damage[~ + ~;]~ + e.fulldescription.substr(24|1) + ~on <d6>[~ + ~;] inflict [shock]1 shock~;,,,,,,,,
Sickle_weakened,Do [shock]<d6> damage,1,attack(d|SHOCK);,Electrify,NORMAL,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,e.fulldescription = ~Do [shock]<d6> damage[~ + ~;]~ + e.fulldescription.substr(24|1) + ~on <d6>[~ + ~;] inflict [shock]1 shock~;,,,,,,,,
Constant Cauldron,Do [sword]1 damage[;] get|a particular dice (<var:constcauld>),1,attack(1); givedice(self.getvar(~constcauld~));,Magic Six,NORMAL,,MAGIC,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~constcauld~|rand([1|2|3|4|5|6]));,,,,,,,
Retroreflector,Roll one dice per|extra dice this fight,1,for (i in 0...self.extradice) { givedice(rand([1|2|3|4|5|6])); } if (self.extradice <= 0) {self.textparticle(~No effect!~);},Infinity Mirror,COUNTDOWN,6,ITEM,PURPLE,change_power,change_function,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,2,,,,,,,,,,
Retroreflector_upgraded,Roll one dice per|extra dice this fight[;]|+1 this fight if this fails,1,if (self.extradice <= 0) { self.extradice++; } else { for (i in 0...self.extradice) { givedice(rand([1|2|3|4|5|6])); } },Infinity Mirror,COUNTDOWN,6,ITEM,PURPLE,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Retroreflector_downgraded,Roll one dice per|extra dice this fight[;]|-1 this fight if this works,1,for (i in 0...self.extradice) { givedice(rand([1|2|3|4|5|6])); } if (self.extradice > 0) { self.extradice--; } else { self.textparticle(~No effect!~); },Infinity Mirror,COUNTDOWN,6,ITEM,PURPLE,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Golden Gun,Return the dice[;] or for [gold]<d6>:|do [sword]<double> damage,2,if (self.gold >= d) { self.gold -= d; attack(d * 2); sfxdamage(d * 2); sfx(~pickupgold~); } else { givedice(d); },Harvest,NORMAL,,WEAPON,YELLOW,change_power,complicate,,none,0,NO,NO,NO,NO,NO,YES,NO,NO,,,,,,,,,,,
Golden Gun_upgraded,Return the dice[;] or for [gold]<d6>-1:|do [sword]<double> damage,2,if (self.gold >= d - 1) { self.gold -= d - 1; attack(d * 2); sfxdamage(d * 2); sfx(~pickupgold~); } else {givedice(d); },Harvest,NORMAL,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,YES,NO,NO,,,,,,,,,,,
Snake Oil,Return the dice[;] or for [gold]<d6>:|inflict [poison]<d6> poison,2,if (self.gold >= d) { self.gold -= d; inflict(POISON|d); sfx(~_poison~); sfx(~pickupgold~); } else { givedice(d); },Acid Arrow,MAX4,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,YES,NO,NO,,,,,,,,,,,
Wall Street Shuffle,Get [gold]<d6> gold[;] decrease|max of this slot by <d6>|(disappears at max 0),2,var maxes = [~ODD~|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~NORMAL~]; var m = maxes.indexOf(e.getslots()[0]); trace(m); trace(d); if(m < d) { m = 0; } else { m = m - d; } trace(m); if(m == 0) { e.changeslots([]); } else { e.changeslots([maxes[m]]); } self.gold += d; if(m == 0) { self.setvar(~wallstreet~|null); } else { self.setvar(~wallstreet~|maxes[m]); },Harvest,NORMAL,,ITEM,YELLOW,,,,pickupgold,0,YES,NO,NO,NO,NO,YES,NO,NO,,,,if(e.getslots()[0] != self.getvar(~wallstreet~)) { e.changeslots([self.getvar(~wallstreet~)]); },,,,var maxes = [~ODD~|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~NORMAL~]; var m = maxes.indexOf(e.getslots()[0]); if (d == m) { e.onceperbattle = true; },,,
Winds of Christmas,Do [sword]1 damage for each|[gold]1 gold you have[;] then halve your gold|[gray](once per battle),1,if(self.gold > 0) {attack(self.gold); },Harvest,EVEN,,WEAPON,YELLOW,simplify,complicate,,_damage,0,NO,YES,NO,NO,NO,YES,NO,NO,,,,,,,,,,,
See No Evil,[Blind]Blind all your dice|on the next turn,1,jinx(~See No Evil~|~[blind]blind all your dice~|~[blind]Blind all your dice~|~inflict(BLIND|ALL);~|self|self|1|0); sfx(~_thinghappens~);,Science,NORMAL,,ITEM,GRAY,,,,_blind,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
See No Evil?,[Confuse]Confuse yourself|on the next turn,1,jinx(~See No Evil?~|~[confuse]confuse yourself~|~[confuse]Confuse yourself~|~inflict(CONFUSE);~|self|self|1|0); sfx(~_thinghappens~);,Science,NORMAL,,ITEM,GRAY,,,,_blind,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Whipcrack,Do [fire]<d6> damage[;] on 6[;]|next use inflicts [fire]3 burn,2,var kludge = e.fulldescription.substr(31|1); attack(d|FIRE); trace(e.fulldescription.length); if(e.fulldescription.length == 75) { inflict(FIRE|3); sfx(~_fire~|~~|0.2); } if(d == 6 && e.fulldescription.length != 75) { e.fulldescription = ~Do [fire]<d6> damage[~+ ~;~ + ~] on 6[~ + ~;]~ + kludge + ~next use inflicts [fire]3 burn~ + kludge + ~[red](ready)~; } if(d != 6) { e.fulldescription = ~Do [fire]<d6> damage[~+ ~;~ + ~] on 6[~+ ~;]~ + kludge + ~next use inflicts [fire]3 burn~; },Hellfire,NORMAL,,WEAPON,RED,reducesize,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,e.fulldescription = ~Do [fire]<d6> damage[~ + ~;~ + ~] on 6[~ + ~;]~ + e.fulldescription.substr(31|1) + ~next use inflicts [fire]3 burn~;,e.fulldescription = ~Do [fire]<d6> damage[~ + ~;~ + ~] on 6[~ + ~;]~ + e.fulldescription.substr(31|1) + ~next use inflicts [fire]3 burn~;,,,,,,,,
Whipcrack_downgraded,Do [fire]<d6> damage,2,attack(d|FIRE);,Helllfire,NORMAL,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Whipcrack_weakened,Do [fire]<d6> damage,1,attack(d|FIRE);,Hellfire,NORMAL,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gyrate Hook,Do [sword]<d6> damage[;] on|a random number (X)[;]|you can re-use this,2,attack(d);,Efficiency,NORMAL,,WEAPON,YELLOW,reducesize,change_function,reequipnext,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~you can re-use this~;,,,,if (d == e.fulldescription.substr(45|1)) { e.animate(~flashandshake~); inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2); var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~you can re-use this~; },,,
Gyrate Hook_downgraded,Do [sword]<d6> damage[;] on|a random number (5)[;]|you can re-use this,2,attack(d);,Efficiency,MAX5,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if (d == e.fulldescription.substr(45|1)) { e.animate(~flashandshake~); inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2); var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~you can re-use this~; },,,
Gyrate Hook_weakened,Do [sword]<d6> damage[;] on|a random number (5)[;]|you can re-use this,1,attack(d);,Efficiency,MAX5,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if (d == e.fulldescription.substr(45|1)) { e.animate(~flashandshake~); inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2); var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~you can re-use this~; },,,
Glacial Blade,Do [ice]<d6> damage[;] on 6[;]|next use inflicts [ice]3 freeze,2,for(i in 0...e.fulldescription.length) { trace(i + ~ ~ + e.fulldescription.substr(i|1)); } var kludge = e.fulldescription.substr(30|1); attack(d|ICE); trace(e.fulldescription.length); if(e.fulldescription.length == 76) { inflict(ICE|3); sfx(~_ice~|~~|0.2); } if(d == 6 && e.fulldescription.length != 82) { sfx(~_plasma~); e.fulldescription = ~Do [ice]<d6> damage[~+ ~;~ + ~] on 6[~ + ~;]~ + kludge + ~next use inflicts [ice]3 freeze~ + kludge + ~[blue](ready)~; } if(d != 6) { e.fulldescription = ~Do [ice]<d6> damage[~+ ~;~ + ~] on 6[~+ ~;]~ + kludge + ~next use inflicts [ice]3 freeze~; },Arctic Storm,NORMAL,,WEAPON,BRIGHTCYAN,reducesize,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,e.fulldescription = ~Do [ice]<d6> damage[~ + ~;~ + ~] on 6[~ + ~;]~ + e.fulldescription.substr(30|1) + ~next use inflicts [ice]3 freeze~;,e.fulldescription = ~Do [ice]<d6> damage[~ + ~;~ + ~] on 6[~ + ~;]~ + e.fulldescription.substr(30|1) + ~next use inflicts [ice]3 freeze~;,,,,,,,,
Glacial Blade_downgraded,Do [ice]<d6> damage,2,attack(d|ICE);,Arctic Storm,NORMAL,,WEAPON,BRIGHTCYAN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glacial Blade_weakened,Do [ice]<d6> damage,1,attack(d|ICE);,Arctic Storm,NORMAL,,WEAPON,BRIGHTCYAN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ashley Bat,Gain [fury]Fury (only 1) on 5[;]|then do [sword]<d6> damage,2,attack(d); e.setvar(~ashleyuses~|e.getvar(~ashleyuses~) + 1); if ( e.getvar(~ashleycheck~) == true ) { e.setvar(~ashleyuses~|0); e.setvar(~ashleycheck~|false); } if(getstatusself(FURY) == 0) { e.setvar(~ashleycheck~|true); }  //i don't feel comfortable fucking around with e.timesused for this,Fury,MAX5,,WEAPON,RED,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.setvar(~ashleyuses~|0);,,,,if(d == 5 && e.getvar(~ashleyuses~) == 0) { inflictself(FURY); sfx(~_fury~|~~|0.2); },,donothing(); //what happens if you use ashley while you have fury is handled in ashley's script,
Ashley Bat_upgraded,Do [sword]<d6> damage[;] then|gain [fury]Fury (only 1) on 5,2,attack(d); if(d == 5 && e.getvar(~ashleyuses~) == 0) { inflictself(FURY); sfx(~_fury~|~~|0.2); } e.setvar(~ashleyuses~|e.getvar(~ashleyuses~) + 1); if(e.preventdefault == true) { e.maintainfury = false; e.preventdefault = false; e.setvar(~ashleyuses~|0); } if(getstatusself(FURY) == 1) { e.maintainfury = true; e.preventdefault = true; },Fury,MAX5,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.setvar(~ashleyuses~|0);,,,,,,donothing();,
Ashley Bat_downgraded,Gain [fury]Fury (only 1) on 3[;]|then do [sword]<d6> damage,2,attack(d); e.setvar(~ashleyuses~|e.getvar(~ashleyuses~) + 1); if ( e.getvar(~ashleycheck~) == true ) { e.setvar(~ashleyuses~|0); e.setvar(~ashleycheck~|false); } if(getstatusself(FURY) == 0) { e.setvar(~ashleycheck~|true); },Fury,MAX3,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.setvar(~ashleyuses~|0);,,,,if(d == 3 && e.getvar(~ashleyuses~) == 0) { inflictself(FURY); sfx(~_fury~|~~|0.2); },,donothing();,
Heat Pump,Inflict [fire]1 burn[;] or|remove [fire]1 burn from self,1,,Purify,,,ITEM,RED,change_power,noeffect,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.setvar(~pumpactions~|1 - getstatusself(FIRE)); removestatusself(FIRE);,e.animate(~flashandshake~); if(e.getvar(~pumpactions~) > 0) { inflict(FIRE|e.getvar(~pumpactions~)); sfx(~_fire~); } //e.animate(~flashandshake~); var burnt = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.burn == true){ burnt.push(mydice); } } while(burnt.length > 2) { burnt.shift(); } if(burnt.length = 2) { for (mydice in burnt) { var val = mydice.basevalue; mydice.removedice(self.screenposition()); givedice(val); } } else { inflict(FIRE|2); sfx(~_fire~); },,,,,,
Heat Pump_upgraded,Inflict [fire]1 burn[;] and/or|remove [fire]1 burn from self,1,,Purify,,,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,removestatusself(FIRE);,e.animate(~flashandshake~); inflict(FIRE); sfx(~_fire~); //e.animate(~flashandshake~); var burnt = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.burn == true){ burnt.push(mydice); } } while(burnt.length > 2) { burnt.shift(); } if(burnt.length = 2) { for (mydice in burnt) { var val = mydice.basevalue; mydice.removedice(self.screenposition()); givedice(val); } } inflict(FIRE|2); sfx(~_fire~);,,,,,,
Berliner,Set a random dice to the|last dice you put in[;] and|recover [heart]4 health,1,var berlin = e.dicehistory[e.dicehistory.length - 1].basevalue; attackself(-4); var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != berlin){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(berlin| self.screenposition()); } e.dicehistory = [];,Regenerate,COUNTDOWN,7,ITEM,PINK,change_power,change_function,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Berliner_upgraded,Set two random dice to the|last dice you put in[;] and|recover [heart]4 health,1,var berlin = e.dicehistory[e.dicehistory.length - 1].basevalue; attackself(-4); var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != berlin){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(berlin| self.screenposition()); } if(dicelist.length > 1) { dicelist[1].animatereroll(berlin| self.screenposition()); } e.dicehistory = [];,Regenerate,COUNTDOWN,7,ITEM,PINK,,,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Berliner_downgraded,Recover [heart]4 health,1,attackself(-4); e.dicehistory = [];,Regenerate,COUNTDOWN,7,ITEM,PINK,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ping,Return last dice inserted,1,givedice(e.dicehistory[e.dicehistory.length - 1].basevalue); e.dicehistory = [];,Replicate,COUNTDOWN,6,ITEM,GREEN,change_power,change_function,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ping_upgraded,Return last dice inserted,1,givedice(e.dicehistory[e.dicehistory.length - 1].basevalue); e.dicehistory = [];,Replicate,COUNTDOWN,4,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ping_downgraded,Return excess inserted,1,var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum - e.countdown > 0) { givedice(sum - e.countdown); } else { self.textparticle(~No effect!~); } e.dicehistory = []; ,Replicate,COUNTDOWN,6,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ping_weakened,Return excess inserted,1,var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum - e.countdown > 0) { givedice(sum - e.countdown); } else { self.textparticle(~No effect!~); } e.dicehistory = []; ,Replicate,COUNTDOWN,4,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Thermostat,Inflict [ice]1 freeze[;] or|remove [ice]1 freeze from self,1,,Purify,,,ITEM,BRIGHTCYAN,change_power,noeffect,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.setvar(~thermoactions~|1 - getstatusself(ICE)); removestatusself(ICE);,e.animate(~flashandshake~); if(e.getvar(~thermoactions~) > 0) { inflict(ICE|e.getvar(~thermoactions~)); sfx(~_ice~); },,,,,,
Thermostat_upgraded,Inflict [ice]1 freeze[;] and/or|remove [ice]1 freeze from self,1,,Purify,,,ITEM,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,removestatusself(ICE);,inflict(ICE); sfx(~_ice~);,,,,,,
Aries Card,If this is never put into|the backpack[;] this will|turn into something good,1,,Tantrum,,,ITEM,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,var bosses = [~Madison~|~Buster~|~Audrey~|~Aoife~|~Drake~|~Scathach~|~Beatrice~]; if(bosses[bosses.indexOf(target.name)] != null) { sfx(~music_aries_card~); },,,,,,,,,
Ncr Overdrive,10 dmg,1,if(e.fulldescription.substr(0|1) == ~r~) { attack(10); e.castdirection = 0; } else { e.castdirection = 1; },Broken Gadget,NORMAL,,ITEM,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,e.animate(~flashandshake~); trace(e.fulldescription.substr(0|1)); if(e.fulldescription.substr(0|1) == ~1~) { e.equipmentcol = 0; e.fulldescription = ~recharge it~; e.changeslots([~NORMAL~|~NORMAL~]); e.needstotal = 9; } else { e.equipmentcol = 4; e.fulldescription = ~10 dmg~; e.changeslots([~NORMAL~]); },,,
Firetosser,Do [fire]<d6> dmg[;] inflict [fire]burn|[gray](twice per battle),1,attack(d|FIRE); inflict(FIRE);,Blowtorch,NORMAL,,WEAPON,RED,change_power,,,_fire,2,NO,NO,NO,NO,NO,NO,NO,YES,,,var fdstart = e.fulldescription.substr(0|47); var fdend = e.fulldescription.substr(e.fulldescription.length - 12|12); e.fulldescription = fdstart + ~twice~ + fdend; ,trace(e.fulldescription.substr(47|2)); if(getstatusself(~reequipnext~) == 0) { if(e.fulldescription.substr(47|2) == ~fo~) { e.usesleft = 4; } else if(e.fulldescription.substr(47|2) == ~th~) { e.usesleft = 3; } else if(e.fulldescription.substr(47|2) == ~tw~) { e.usesleft = 2; } else if(e.fulldescription.substr(47|2) == ~on~) { e.usesleft = 1; e.onceperbattle = true; } },,,,var fdstart = e.fulldescription.substr(0|47); trace(fdstart); var fdend = e.fulldescription.substr(e.fulldescription.length - 12|12); trace(fdend); if(getstatusself(~reequipnext~) == 0) { if(e.fulldescription.substr(47|1) == ~f~) { e.fulldescription = fdstart + ~three times~ + fdend; } else if(e.fulldescription.substr(47|2) == ~th~) { e.fulldescription = fdstart + ~twice~ + fdend; } else if(e.fulldescription.substr(47|2) == ~tw~) { e.fulldescription = fdstart + ~once~ + fdend; e.onceperbattle = true; } },,,
Firetosser_upgraded,Do [fire]<d6> dmg[;] inflict [fire]burn|[gray](four times per battle),1,attack(d|FIRE); inflict(FIRE);,Blowtorch,NORMAL,,WEAPON,RED,,,,_fire,4,NO,NO,NO,NO,NO,NO,NO,YES,,,var fdstart = e.fulldescription.substr(0|47); var fdend = e.fulldescription.substr(e.fulldescription.length - 12|12); e.fulldescription = fdstart + ~four times~ + fdend; ,trace(e.fulldescription.substr(47|2)); if(getstatusself(~reequipnext~) == 0) { if(e.fulldescription.substr(47|2) == ~fo~) { e.usesleft = 4; } else if(e.fulldescription.substr(47|2) == ~th~) { e.usesleft = 3; } else if(e.fulldescription.substr(47|2) == ~tw~) { e.usesleft = 2; } else if(e.fulldescription.substr(47|2) == ~on~) { e.usesleft = 1; e.onceperbattle = true; } },,,,var fdstart = e.fulldescription.substr(0|47); trace(fdstart); var fdend = e.fulldescription.substr(e.fulldescription.length - 12|12); trace(fdend); if(getstatusself(~reequipnext~) == 0) { if(e.fulldescription.substr(47|1) == ~f~) { e.fulldescription = fdstart + ~three times~ + fdend; } else if(e.fulldescription.substr(47|2) == ~th~) { e.fulldescription = fdstart + ~twice~ + fdend; } else if(e.fulldescription.substr(47|2) == ~tw~) { e.fulldescription = fdstart + ~once~ + fdend; e.onceperbattle = true; } },,,
Sacrificial Blade@3,Do [sword]<d6> damage|Can be scrapped 3 times,1,attack(d);,Scabbard (1/2),MAX3,,WEAPON,GRAY,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@3_upgraded,Do [sword]<d6> damage|Can be scrapped 5 times,1,attack(d);,Scabbard+ (1/4),MAX5,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@3_downgraded,Do [sword]<d6> damage|Can be scrapped 3 times,1,attack(d);,Scabbard (1/2),REQUIRE3,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@3_weakened,Do [sword]<d6> damage|Can be scrapped 5 times,1,attack(d);,Scabbard+ (1/4),REQUIRE5,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@2,Do [sword]<d6> damage|Can be scrapped twice,1,attack(d);,Scabbard (2/2),MAX2,,WEAPON,GRAY,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@2_upgraded,Do [sword]<d6> damage|Can be scrapped 4 times,1,attack(d);,Scabbard+ (2/4),MAX4,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@2_downgraded,Do [sword]<d6> damage|Can be scrapped twice,1,attack(d);,Scabbard (2/2),REQUIRE2,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@2_weakened,Do [sword]<d6> damage|Can be scrapped 4 times,1,attack(d);,Scabbard+ (2/4),REQUIRE4,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@1,Do [sword]<d6> damage|Scraps to Pea Gun,1,attack(d);,Pea Gun,REQUIRE1,,WEAPON,GRAY,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@1_upgraded,Do [sword]<d6> damage|Can be scrapped 3 times,1,attack(d);,Scabbard+ (3/4),MAX3,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@1_downgraded,No effect|Scraps to Pea Gun,1,attack(d);,Pea Gun,,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@1_weakened,Do [sword]<d6> damage|Can be scrapped 3 times,1,attack(d);,Scabbard+ (3/4),REQUIRE3,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@0,You shouldn't be seeing this,1,inflictself(VANISH); sfx(~_vanish~); target.textparticle(~Go shout at ncrecc!~);,Less Fluff,,,WEAPON,GRAY,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@0_upgraded,Do [sword]<d6> damage|Can be scrapped twice,1,attack(d);,Scabbard+ (4/4),MAX2,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@0_downgraded,You shouldn't be seeing this|either,1,inflictself(VANISH); sfx(~_vanish~); target.textparticle(~Really[;] go shout at ncrecc!~);,Less Fluff,,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@0_weakened,Do [sword]<d6> damage|Can be scrapped twice,1,attack(d);,Scabbard+ (4/4),REQUIRE2,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@X,You definitely shouldn't be|seeing this,1,inflictself(VANISH); sfx(~_vanish~); target.textparticle(~Go shout at ncrecc!~);,Less Fluff,,,WEAPON,GRAY,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@X_upgraded,Do [sword]<d6> damage|Scraps to Pea Gun,1,attack(d);,Pea Gun,REQUIRE1,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@X_downgraded,You really[;] definitely|shouldn't be seeing this,1,inflictself(VANISH); sfx(~_vanish~); target.textparticle(~Really[;] go shout at ncrecc!~);,Less Fluff,,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacrificial Blade@X_weakened,No effect|Scraps to Pea Gun,1,attack(d);,Pea Gun,,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Scabbard,GIMMMMME,1,sfx(~_vanish); self.textparticle(~Whatever~);,Scabbard (1/2),NORMAL,,ITEM,YELLOW,change_power,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Scabbard_upgraded,GIMMME,1,sfx(~_vanish); self.textparticle(~Whatever~);,Scabbard+ (1/3),NORMAL,,ITEM,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Virtue Grip,Get sum twice. Overflow|only returns excess dice,1,var s = (actualdice[0].basevalue + actualdice[1].basevalue) % 7; givedice([s|s]);,Battle Wrench,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_function,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Virtue Grip_upgraded,Get sum thrice. Overflow|only returns excess dice,1,var s = (actualdice[0].basevalue + actualdice[1].basevalue) % 7; givedice([s|s|s]);,Battle Wrench,NORMAL|NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Virtue Grip_downgraded,Get sum twice. Overflow|only returns excess dice,1,var s = (actualdice[0].basevalue + actualdice[1].basevalue) % 7; givedice([s|s]);,Battle Wrench,DOUBLES|DOUBLES,,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tear Down This Wall,Do [sword]<d6> damage. On 6[;]|set a random dice to <d6>,2,attack(d); if(d == 6) { var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d| self.screenposition()); } } //i am so original it is crazy!,Perfectionism,NORMAL,,WEAPON,PINK,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tear Down This Wall_upgraded,Do [sword]<d6> damage. On even[;]|set a random dice to <d6>,2,attack(d); if(d % 2 == 0) { var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d| self.screenposition()); } },Perfectionism,NORMAL,,WEAPON,PINK,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tear Down This Wall_downgraded,Do [sword]<d6> damage. On 6[;]|set a random dice to <d6>-1,2,attack(d); if(d == 6) { var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d - 1){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d - 1| self.screenposition()); } } //i am so original it is crazy!,Perfectionism,NORMAL,,WEAPON,PINK,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Two Handed Spike,Even total: [sword]<d6>|Odd total: [shield]<d6>|[gray](once per battle),1,if(d%2 == 0){ e.castdirection = 1; attack(d); sfx(~_shield~); } else { e.castdirection = 0; inflictself(SHIELD| d); sfx(~_shield~); },Pillow Fort,NORMAL|NORMAL,,WEAPON,RED,simplify,complicate,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rifle,Do 2x last dice value as dmg|Take excess value as dmg,2,attack(2 * e.dicehistory[e.dicehistory.length - 1].basevalue); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum - e.countdown > 0) { attackself(sum - e.countdown); sfxdamage(sum - e.countdown); } e.dicehistory = [],Dice Bash,COUNTDOWN,10,WEAPON,RED,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rifle_upgraded,Do 2x last dice value as dmg|Take [sword]2 damage,2,attack(2 * e.dicehistory[e.dicehistory.length - 1].basevalue); boomerang(2); e.dicehistory = [],Dice Bash,COUNTDOWN,10,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rifle_downgraded,Do last dice value as dmg|Take excess value as dmg,2,attack(e.dicehistory[e.dicehistory.length - 1].basevalue); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum - e.countdown > 0) { attackself(sum - e.countdown); sfxdamage(sum - e.countdown); } e.dicehistory = [],Dice Bash,COUNTDOWN,10,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme My Shit Back,Gives you your shit back,1,,Accelerate,,,ITEM,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,var gimmeback = ~if(e.dicehistory.length > 0) { var gimmeshit_h = e.dicehistory.length - 1; var gimmeshit_sum = 0; while(gimmeshit_sum < e.countdown) { gimmeshit_sum = gimmeshit_sum + e.dicehistory[gimmeshit_h]; trace(e.dicehistory[gimmeshit_h]); gimmeshit_h--; } if (e.countdown - gimmeshit_sum > 0) { givedice(e.countdown - gimmeshit_sum); } } ;~; for(eq in self.equipment) { if(eq.script.split(gimmeback).length > 1) { eq.script = eq.script.split(gimmeback)[1]; } },,,,,if(e.shockedsetting == 0) { var gimmeback = ~if(e.dicehistory.length > 0) { var gimmeshit_h = e.dicehistory.length - 1; var gimmeshit_sum = 0; while(gimmeshit_sum < e.countdown) { gimmeshit_sum = gimmeshit_sum + e.dicehistory[gimmeshit_h]; trace(e.dicehistory[gimmeshit_h]); gimmeshit_h--; } if (e.countdown - gimmeshit_sum > 0) { givedice(e.countdown - gimmeshit_sum); } } ~; for(eq in self.equipment) { if(eq.countdown > 0 && eq.script.split(gimmeback).length <= 1) { trace(eq.script); eq.script = gimmeback + eq.script; trace(eq.script); } } }
Look and Say,Describe these numbers,1,var a1 = actualdice[0].basevalue; var a2 = actualdice[1].basevalue; var a3 = actualdice[2].basevalue; if (a1 == a2) { if (a1 == a3) { givedice([3|a3]); } else { givedice([2|a1]); givedice([1|a3]); } } else { givedice([1|a1]); if (a2 == a3) { givedice([2|a2]); } else { givedice([1|a2]); givedice([1|a3]); } } //this item is ultra-niche and i cannot think of why anyone would want to use it. except maybe getting 3 extra pips on a countdown.,Magic Dice,NORMAL|NORMAL|NORMAL,,ITEM,GREEN,change_power,change_function,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Look and Say_upgraded,Describe these numbers|,1,var a1 = actualdice[0].basevalue; var a2 = actualdice[1].basevalue; var a3 = actualdice[2].basevalue; if (a1 == a2) { if (a1 == a3) { givedice([3|a3]); } else { givedice([2|a1]); givedice([1|a3]); } } else { givedice([1|a1]); if (a2 == a3) { givedice([2|a2]); } else { givedice([1|a2]); givedice([1|a3]); } },Magic Dice,NORMAL|NORMAL|NORMAL,,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Look and Say_downgraded,Describe these numbers,1,var a1 = actualdice[0].basevalue; var a2 = actualdice[1].basevalue; var a3 = actualdice[2].basevalue; if (a1 == a2) { if (a1 == a3) { givedice([3|a3]); } else { givedice([2|a1]); givedice([1|a3]); } } else { givedice([1|a1]); if (a2 == a3) { givedice([2|a2]); } else { givedice([1|a2]); givedice([1|a3]); } },Magic Dice,MAX4|MAX4|MAX4,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bumpbomb,Do [sword]<d6> damage. On 6[;]|bump all of your dice,2,attack(d); if(d == 6) { var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 6){ extradice.push(1); mydice.animatereroll(6| self.screenposition()| c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 1)| self.screenposition()| c * 0.05); } c++; } } givedice(extradice); } //yeah i literally just copypasted megabump into here. NO fear; baby!,Megabump,NORMAL,,ITEM,GREEN,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bumpbomb_upgraded,Do [sword]<d6> damage. On 5 or 6[;]|bump all of your dice,2,attack(d); if(d == 6 # d == 5) { var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 6){ extradice.push(1); mydice.animatereroll(6| self.screenposition()| c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 1)| self.screenposition()| c * 0.05); } c++; } } givedice(extradice); } //yeah i literally just copypasted megabump into here. NO fear; baby!,Megabump,NORMAL,,ITEM,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bumpbomb_downgraded,Do [sword]<d6> damage. On 6[;]|bump your highest dice,2,attack(d); if(d == 6 && self.dicepool.length > 0) { var max = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue > max) { max = mydice.basevalue; } } for (mydice in self.dicepool){ if(mydice.available() & mydice.basevalue == max) { if(mydice.basevalue != 6) { mydice.animatereroll(mydice.basevalue + 1); break; } else { mydice.animatereroll(6); givedice(1); break; } } } },Megabump,NORMAL,,ITEM,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scrap Petal,Mysterious junk. Gain [shield]???|(Always offered as scrap),1,var s = 0; for(d in actualdice){ if(d.basevalue == 3 # d.basevalue == 5) {s += d.basevalue - 1;} } if(s > 0) { inflictself(SHIELD| s); sfx(~_shield~); } else { self.textparticle(~No effect!~); },Protection,ODD,,ITEM,GRAY,change_power,complicate,,none,0,YES,NO,NO,NO,NO,NO,YES,NO,,,,,,,,,,,
Scrap Petal_upgraded,Mysterious junk. Gain [shield]<d6>|(Always offered as scrap),1,inflictself(SHIELD|d);,Protection,ODD,,ITEM,GRAY,,,,_shield,0,YES,NO,NO,NO,NO,NO,YES,NO,,,,,,,,,,,
Rosepetal Blade,Do [sword]??? damage[;]|receive random petals,2,var s = 0; for(d in actualdice){ if(d.basevalue == 3 # d.basevalue == 5) {s += d.basevalue - 1; givedice(d.basevalue - 1); } } if(s > 0) { attack(s); sfxdamage(s); } else { self.textparticle(~No effect!~); },Plasma Gun,NORMAL|NORMAL,,WEAPON,RED,change_power,change_function,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosepetal Blade_downgraded,Do [sword]??? damage[;]|receive a rose,2,var s = 0; for(d in actualdice){ if(d.basevalue == 3 # d.basevalue == 5) {s += d.basevalue - 1; givedice(1); } } if(s > 0) { attack(s); sfxdamage(s); } else { self.textparticle(~No effect!~); },Plasma Gun,NORMAL|NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosepetal Blade_upgraded,Do [sword]??? damage[;]|receive petals on 2nd use,2,if(d == 3 # d == 5) {attack(d - 1); sfxdamage(d - 1); givedice(d - 1); } else { self.textparticle(~No effect!~); },Plasma Gun,NORMAL,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Custard's Last Stand,Survive next fatal blow[;] but|[blind]Blind all dice next turn,1,inflictself(SURVIVE); jinx(~Custard's Last Stand~|~[blind]Blind all dice~|~[blind]Blind all dice~|~inflict(BLIND|ALL); sfx(\~_confuse\~|\~\~|0.2);~|self|self|1|1); sfx(~_thinghappens~);,Still Standing,ODD,,ITEM,YELLOW,simplify,complicate,,_survive,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gyrate Hook?,Do [sword]<d6> damage[;] on|a random number (X)[;]|keep the dice,2,attack(d);,Efficiency,NORMAL,,WEAPON,YELLOW,reducesize,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~keep the dice~;,,,,if (d == e.fulldescription.substr(45|1)) { e.animate(~flashandshake~); inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2); var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~keep the dice~; },,,
Gyrate Hook?_downgraded,Do [sword]<d6> damage[;] on|a random number (5)[;]|keep the dice,2,attack(d);,Efficiency,MAX5,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if (d == e.fulldescription.substr(45|1)) { e.animate(~flashandshake~); inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2); var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~keep the dice~; },,,
Gyrate Hook?_weakened,Do [sword]<d6> damage[;] on|a random number (5)[;]|keep the dice,1,attack(d);,Efficiency,MAX5,,WEAPON,YELLOW,,,,_damage,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if (d == e.fulldescription.substr(45|1)) { e.animate(~flashandshake~); inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2); var kludge = e.fulldescription.substr(27|1); e.fulldescription = ~Do [sword]<d6> damage[~ + ~;] on~ + kludge + ~a random number (~ + rand([1|2|3|4|5|6]) + ~)[~ + ~;]~ + kludge + ~keep the dice~; },,,
Cactus ,Briar Bush|Gain [thorns]2 thorns,2,inflictself(THORNS|2);,Plasma Gun,,,BACKUP,GREEN,,,,_thorns,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Set a Var,Does e.setvar stuff,1,if(e.getvar(~dothing~) == true) { attack(5); sfxdamage(5); e.setvar(~dothing|false~); } else { attack(2); sfxdamage(2); e.setvar(~dothing~|true); },Rod,NORMAL,,WEAPON,YELLOW,,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Set a Var_downgraded,Still does e.setvar stuff[;]|but 1 less damage,1,if(e.getvar(~dothing~) == true) { attack(4); sfxdamage(4); e.setvar(~dothing|false~); } else { attack(1); sfxdamage(1); e.setvar(~dothing~|true); },Rod,NORMAL,,WEAPON,YELLOW,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bounty Hunter,Hunter Thing|aaaaaa balls,2,sfx(~_vanish~);,Plasma Gun,,,BACKUP,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Drain monster@ncr,Monster Thing|big balsl,2,attackself(1);,Plasma Gun,,,BACKUP,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Check This Out,Cool Huh?|pretend this button|does something,2,sfx(~_vanish~);,Plasma Gun,,,BACKUP,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ultimate Tactics,Convert Ultima to Buster|On jackpot[;] vice versa,1,,Lucky Shot,,,ITEM,GRAY,,change_function,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,//for(eq in self.equipment) { if((eq.name == ~Ultima Weapon~ # eq.name == ~Buster Sword~) && eq.namemodifier == ~+~) { eq.setvar(~yeppiamupgraded~|true); } },for(eq in self.equipment) { if(eq.name == ~Ultima Weapon~ && (eq.namemodifier == ~+~ # eq.originallyupgraded == true)) { var wknme = false; if(eq.namemodifier == ~-~) { wknme = true; } var oldx = eq.x; var oldy = eq.y; eq.create(~Buster Sword~|true); eq.x = oldx; eq.y = oldy; if(wknme == true) { eq.downgrade(); } eq.animate(~flashandshake~); e.setvar(~flashflag~|true); } else if(eq.name == ~Ultima Weapon~) { var wknme = false; if(eq.namemodifier == ~-~) { wknme = true; } var oldx = eq.x; var oldy = eq.y; eq.create(~Buster Sword~|false); eq.x = oldx; eq.y = oldy; if(wknme == true) { eq.downgrade(); } eq.animate(~flashandshake~); e.setvar(~flashflag~|true); } } if(e.getvar(~flashflag~) == true) { e.animate(~flashandshake~); sfx(~openchest~); if(e.col != 0) { e.changecolour(~GRAY~); } e.setvar(~flashflag~|false); },//if(e.col != 0) { e.changecolour(~GRAY~); },if(self.roll_jackpot > 0) { for(eq in self.equipment) { if(eq.name == ~Buster Sword~ && (eq.namemodifier == ~+~ # eq.originallyupgraded == true)) { var wknme = false; if(eq.namemodifier == ~-~) { wknme = true; } var oldx = eq.x; var oldy = eq.y; eq.create(~Ultima Weapon+~|true); eq.x = oldx; eq.y = oldy; if(wknme == true) { eq.downgrade(); } eq.animate(~flashandshake~); e.setvar(~flashflag~|true); } else if(eq.name == ~Buster Sword~) { var wknme = false; if(eq.namemodifier == ~-~) { wknme = true; } var oldx = eq.x; var oldy = eq.y; eq.create(~Ultima Weapon~|false); eq.x = oldx; eq.y = oldy; if(wknme == true) { eq.downgrade(); } eq.animate(~flashandshake~); e.setvar(~flashflag~|true); } } if(e.getvar(~flashflag~) == true) { e.animate(~flashandshake~); if(e.col != 4) { e.changecolour(~YELLOW~); } sfx(~openchest~); e.setvar(~flashflag~|false); } },,,,
Ultimate Tactics_downgraded,Convert Ultima to Buster,1,,Lucky Shot,,,ITEM,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,//for(eq in self.equipment) { if((eq.name == ~Ultima Weapon~ # eq.name == ~Buster Sword~) && eq.namemodifier == ~+~) { eq.setvar(~yeppiamupgraded~|true); } },for(eq in self.equipment) { if(eq.name == ~Ultima Weapon~ && (eq.namemodifier == ~+~ # eq.originallyupgraded == true)) { var wknme = false; if(eq.namemodifier == ~-~) { wknme = true; } var oldx = eq.x; var oldy = eq.y; eq.create(~Buster Sword~|true); eq.x = oldx; eq.y = oldy; if(wknme == true) { eq.animate(~weaken~); } else { eq.animate(~flashandshake~); } e.setvar(~flashflag~|true); } else if(eq.name == ~Ultima Weapon~) { var wknme = false; if(eq.namemodifier == ~-~) { wknme = true; } var oldx = eq.x; var oldy = eq.y; eq.create(~Buster Sword~|false); eq.x = oldx; eq.y = oldy; if(wknme == true) { eq.animate(~weaken~); } else { eq.animate(~flashandshake~); } e.setvar(~flashflag~|true); } } if(e.getvar(~flashflag~) == true) { e.animate(~flashandshake~); sfx(~openchest~); if(e.col != 0) { e.changecolour(~GRAY~); } e.setvar(~flashflag~|false); },//if(e.col != 0) { e.changecolour(~GRAY~); },,,,,
Buster's Last Stand,Survive next fatal blow|[gray](immune to errors),1,inflictself(SURVIVE);,Still Standing,COUNTDOWN,18,ITEM,GRAY,change_power,change_function,survive,none,0,YES,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand_upgraded,Survive next fatal blow|[gray](immune to errors),1,inflictself(SURVIVE);,Still Standing,COUNTDOWN,12,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand_downgraded,No effect|(immune to errors),1,,Still Standing,COUNTDOWN,18,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand_weakened,No effect|(immune to errors),1,,Still Standing,COUNTDOWN,12,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Custard's Last Stand?,Survive for 3 turns[;] but|[confuse]Confuse self next turn|[gray](once per battle),1,inflictself(SURVIVE); jinx(~Custard's Last Stand?~|~[confuse]confuse yourself~|~[confuse]Confuse yourself~|~inflict(CONFUSE);~|self|self|1|); sfx(~_thinghappens~);,Still Standing,ODD,,ITEM,YELLOW,simplify,complicate,,_survive,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand?,Survive for 3 turns...|[gray](immune to errors)|[gray](once per battle),1,inflictself(SURVIVE);,Still Standing,COUNTDOWN,18,ITEM,GRAY,change_power,change_function,,none,0,YES,YES,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand?_upgraded,Survive for 3 turns...|[gray](immune to errors)|[gray](once per battle),1,inflictself(SURVIVE);,Still Standing,COUNTDOWN,18,ITEM,GRAY,,,,none,0,YES,YES,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand?_downgraded,No effect|(immune to errors),1,,Still Standing,COUNTDOWN,18,ITEM,GRAY,,,,none,0,YES,YES,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Buster's Last Stand?_weakened,No effect|(immune to errors),1,,Still Standing,COUNTDOWN,12,ITEM,GRAY,,,,none,0,YES,YES,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Snoop,snoop away buddey,1,,Still Standing,,,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,for(eq in self.equipment){ trace(eq.name + ~...~ + eq.namemodifier + ~...~ + eq.originallyupgraded); },,,,
Dont Focus,Gimme Uncofused,1,Gadget.givegadget(self|~Unfocused~|true);,Still Standing,NORMAL,,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hail Bat,Do [sword]<d6> damage[;]|but [ice]Freeze yourself,2,attack(d); inflictself(ICE); sfxdamage(d); sfx(~_ice~); var dicelist = []; var t = 0; if(ICE == ~ice~) { for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn){ dicelist.push(mydice); } } dicelist.sort(function(a|b) return -1 * (a.basevalue - b.basevalue)); for(i in 0...1) { dicelist[i].animate(~ice~|t); t += 0.1; } } if(ICE == ~alternate_ice~) { for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn) { mydice.animate(~alternate_ice~); } } },Flash Freeze,NORMAL|FREE3,,WEAPON,BRIGHTCYAN,reducesize,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hail Bat_downgraded,Do [sword]<d6> damage[;]|but [ice]Freeze yourself twice,2,attack(d); inflictself(ICE|2); sfxdamage(d); sfx(~_ice~); var dicelist = []; var t = 0; if(ICE == ~ice~) { for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn){ dicelist.push(mydice); } } dicelist.sort(function(a|b) return -1 * (a.basevalue - b.basevalue)); for(i in 0...2) { dicelist[i].animate(~ice~|t); t += 0.1; } } if(ICE == ~alternate_ice~) { sfx(~_ice~|0.2);  for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn) { mydice.animate(~alternate_ice~);  mydice.animate(~alternate_ice~|0.2); } } },Flash Freeze,NORMAL|FREE3,,WEAPON,BRIGHTCYAN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hail Bat_weakened,Do [sword]<d6> damage[;]|but [ice]Freeze yourself twice,1,attack(d); inflictself(ICE|2); sfxdamage(d); sfx(~_ice~); var dicelist = []; var t = 0; if(ICE == ~ice~) { for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn){ dicelist.push(mydice); } } dicelist.sort(function(a|b) return -1 * (a.basevalue - b.basevalue)); for(i in 0...2) { dicelist[i].animate(~ice~|t); t += 0.1; } } if(ICE == ~alternate_ice~) { sfx(~_ice~|0.2);  for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn) { mydice.animate(~alternate_ice~);  mydice.animate(~alternate_ice~|0.2); } } },Flash Freeze,NORMAL|FREE3,,WEAPON,BRIGHTCYAN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hot Bat,Do [sword]<d6> damage[;]|but [fire]Burn yourself|[90%][quote]Nail Bat but better[quote],2,attack(d); inflictself(FIRE); sfxdamage(d); sfx(~_fire~); var t = 0; var dicelist = []; for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn){ dicelist.push(mydice); } } shuffle(dicelist); for (i in 0...1) { dicelist[i].animate(FIRE|t); t += 0.2; } // not technically burn - burns a random dice instead of your first dice. however normally burn burning your first dice is random because it happens before you know what your first dice is,Blowtorch,NORMAL|FREE3,,WEAPON,RED,reducesize,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hot Bat_downgraded,Do [sword]<d6> damage[;]|but [fire]Burn yourself twice|[90%][quote]Ok now it's different[quote],2,attack(d); inflictself(FIRE|2); sfxdamage(d); sfx(~_fire~); var t = 0; var dicelist = []; for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn){ dicelist.push(mydice); } } shuffle(dicelist); for (i in 0...2) { dicelist[i].animate(FIRE|t); t += 0.2; },Blowtorch,NORMAL|FREE3,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hot Bat_weakened,Do [sword]<d6> damage[;]|but [fire]Burn yourself twice|[90%][quote]Ok now it's different[quote],1,attack(d); inflictself(FIRE|2); sfxdamage(d); sfx(~_fire~); var t = 0; var dicelist = []; for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn){ dicelist.push(mydice); } } shuffle(dicelist); for (i in 0...2) { dicelist[i].animate(FIRE|t); t += 0.2; },Blowtorch,NORMAL|FREE3,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
AWESOMESWORD,[300%]DO LIKE|[300%]A BUNCH|[300%]OF DAMAGE|[300%]HOLY CRAP,2,attack(2); sfxdamage(999);,THE [200%]GASDGFET,NORMAL|NORMAL,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
GIVE [200%]DGADETSGT,[300%]GIVE IT ME,1,Gadget.givegadget(self|~THE [200%]GASDGFET~|true);,THE [200%]GASDGFET,NORMAL,,ITEM,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swing Me Another 6,Do [sword]<d6> damage[;] roll a 6|[gray](once per battle),1,attack(d); givedice(6);,Magic Six,MAX5,,WEAPON,RED,change_power,change_function,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Swing Me Another 6_upgraded,Do [sword]<d6> damage[;] roll two 6s|[gray](once per battle),1,attack(d); givedice([6|6]);,Magic Six,MAX5|MAX5,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swing Me Another 6_downgraded,Do [sword]<d6>[;] set a dice to 6|[gray](once per battle),1,attack(d); var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != 6){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(6| self.screenposition()); } givedice(6);,Magic Six,MAX5,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Combat Slam,Reroll|Reroll unused dice,2,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll(rand([1|2|3|4|5|6])| self.screenposition()| c * 0.05); c++; } },Reroll,,,BACKUP,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Key,Set a dice to <d6>[;] return dice|,2,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d| self.screenposition()| 0); } givedice(d);,Berlin Nerf OMG,NORMAL,,ITEM,GRAY,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Bump,Dice value +1|,2,if(d >= 6){ givedice([6| 1]); } else { givedice(d + 1); },Megabump,NORMAL,,ITEM,GRAY,,,,none,3,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Tweak,First dice value +1|Second dice value -1|,2,var dicearray = []; dicearray.push(actualdice[0].basevalue + 1); if(actualdice[1].basevalue - 1 > 0) { dicearray.push(actualdice[1].basevalue - 1);} if(dicearray[0] == 7) { dicearray[0] = 6; dicearray.push(1); }givedice(dicearray);,Meganudge,NORMAL|NORMAL,,ITEM,GRAY,,,,none,3,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Bulb,Get 2x<d6>s next turn[;]|reroll the dice,2,inflictself(~stash~+d|2); inflictself(~illuminate~); givedice();,Magic Dice,NORMAL,,ITEM,GRAY,,,,magic,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Grip,Get sum twice. Overflow|only returns excess dice|,2,var s = (actualdice[0].basevalue + actualdice[1].basevalue) % 7; givedice([s|s]);,Battle Wrench,NORMAL|NORMAL,,ITEM,GRAY,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Doppel,Double dice value|,2,givedice(d * 2| ~combinedice~);,Clone Device,MAX3,,ITEM,GRAY,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Mirror,Reroll dice[;] on even[;]|get +1 dice this fight,2,if(d % 2 == 0) { if(simulation) { bonus(1000); } else{ self.extradice++; } } givedice();,Focus,NORMAL,,ITEM,GRAY,,,,magic_gaindice,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Dice,Free six,2,,Magic Six,SPARE6,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Gumball,Heal [heal]<d6>[;] reroll dice|,2,attackself(-d); givedice();,Regenerate,MAX3,,ITEM,GRAY,,,,_health,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Gold,Roll an even dice|(3 uses),2,givedice(rand([2|4|6]));,Random Roll,NORMAL,,ITEM,GRAY,,,,none,3,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Silver,Roll an odd dice|(3 uses),2,givedice(rand([1|3|5]));,Random Roll,NORMAL,,ITEM,GRAY,,,,none,3,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Flip,Megaflip|Flip all dice upside down,2,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll((7 - mydice.basevalue)| self.screenposition()| c * 0.05); c++; } },Megaflip,,,BACKUP,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Ungerade,Double dice value[;]|then subtract 1|(2 uses),2,givedice(((d * 2) - 1)| ~combinedice~);,Clone Device,MAX5,,ITEM,GRAY,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Spanner,Combine dice|(3 uses),2,for(ad in actualdice) { if(ad.basevalue == 6) bonus(-1000); } if(d >= 1) givedice(d| ~combinedice~);,Battle Wrench,NORMAL|NORMAL,,ITEM,GRAY,,,,none,3,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Calculate,Autoroll|Roll a random amount|of dice that add up to 12,2,//jacke suggested this card; cool guy,Magic Dice,,,BACKUP,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,var rolls = []; var left = 12; while(left > 0) { var r = rand([1|2|3|4|5|6]); if(r > left) { r = left; } rolls.push(r); left -= r; } givedice(rolls); sfx(~jackpot_autoroll~);,,,
Combat Keyhole,Flip & split[;] flip results|(2 uses),2,var s = split(7-d); givedice([7-s[0]|7-s[1]]);,Clone Device,MAX4,,ITEM,GRAY,,,,_splitdice,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Scroll,Bump dice under 6 when|you use any equipment,2,,Megabump,,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,if(e.shockedsetting == 0) { var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue < 6){ mydice.animatereroll((mydice.basevalue + 1)| self.screenposition()| c * 0.05); } c++; } } },,,,
Combat Innovate,Get a dice you don't have|(2 uses),2,var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) {givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); givedice(notseen[0]); },Berlin Nerf OMG,NORMAL,,ITEM,GRAY,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
GIMME A SWITCH,GIMME,1,Gadget.givegadget(self|~Light Switch~|true);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vanity Mirror,Turn start: roll an extra dice|Turn end: take [sword]4 if unused,1,e.setvar(~vmirrorused~|true);,Magic Dice,ODD,,ITEM,PURPLE,simplify,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,e.resetvar(~vmirrorused~);,e.animate(~flashandshake~); givedice();,e.animate(~flashandshake~); if(e.getvar(~vmirrorused~) != true) { attackself(4); } e.resetvar(~vmirrorused~);,,,,,
Vanity Mirror_downgraded,Turn start: roll an extra dice|Turn end: take [sword]6 if unused,1,e.setvar(~vmirrorused~|true);,Magic Dice,ODD,,ITEM,PURPLE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,e.resetvar(~vmirrorused~);,e.animate(~flashandshake~); givedice();,e.animate(~flashandshake~); if(e.getvar(~vmirrorused~) != true) { attackself(6); } e.resetvar(~vmirrorused~);,,,,,
Combat Crucible,Roll four new burning dice,2,inflictself(FIRE| 4); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,Random Roll,NORMAL,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Murk,Roll four new blind dice,2,inflictself(BLIND| 4); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,Obfuscate,NORMAL,,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Sword,Do [sword]<d6> damage[;] on 6[;]|this can kill vampires,2,if(d == 6 && target.hp <= 6 && getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE| ALL); } attack(d);,Heat Ray,NORMAL,,WEAPON,GRAY,change_power,change_power,vampire,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Sword_downgraded,Do [sword]<d6> damage[;] on 6[;]|this can kill vampires,2,if(d == 6 && target.hp <= 6 && getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE| ALL); } attack(d);,Heat Ray,MIN4,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Sword_upgraded,Do [sword]<d6> damage[;] on 6[;]|this can kill vampires,2,if(d == 8 && target.hp <= 8 && getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE| ALL); } attack(d),Heat Ray,NORMAL|FREE2,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Sword?,Do [sword]<d6> damage,2,attack(d):,Heat Ray,NORMAL|FREE6,,WEAPON,GRAY,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Sword?_downgraded,Do [sword]<d6> damage,2,attack(d):,Heat Ray,NORMAL|FREE3,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Sword?_upgraded,Do [sword]<d6> damage,2,attack(d):,Heat Ray,NORMAL|FREE3|FREE3|FREE3,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Molten Charm,+3 dice this fight[;] but|[fire]burn all dice each turn,1,self.extradice += 3; self.setvar(~magch~|true);,Infinity Mirror,COUNTDOWN,12,ITEM,ORANGE,change_power,change_function,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~magch~[;]false); e.changecolour(~ORANGE~);,self.setvar(~magch~[;]false); e.changecolour(~ORANGE~);,if(self.getvar(~magch~) == true) { e.changecolour(~RED~); inflictself(FIRE|ALL); },,,,,,,
Molten Charm_upgraded,+3 dice[;] and 3 now[;] but|[fire]burn all dice each turn,1,self.extradice += 3; self.setvar(~magch~|true); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,Infinity Mirror,COUNTDOWN,12,ITEM,ORANGE,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~magch~[;]false); e.changecolour(~ORANGE~);,self.setvar(~magch~[;]false); e.changecolour(~ORANGE~);,if(self.getvar(~magch~) == true) { e.changecolour(~RED~); inflictself(FIRE|ALL); },,,,,,,
Molten Charm_downgraded,+2 dice this fight[;] but|[fire]burn all dice each turn,1,self.extradice += 2; self.setvar(~magch~|true);,Infinity Mirror,COUNTDOWN,12,ITEM,ORANGE,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~magch~[;]false); e.changecolour(~ORANGE~);,self.setvar(~magch~[;]false); e.changecolour(~ORANGE~);,if(self.getvar(~magch~) == true) { e.changecolour(~RED~); inflictself(FIRE|ALL); },,,,,,,
Frozen Charm,+3 dice this fight[;] but|[ice]freeze all dice each turn|[90%][quote]Why[quote],1,self.extradice += 3; self.setvar(~froch~|true);,Infinity Mirror,COUNTDOWN,12,ITEM,GRAY,change_power,change_function,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~froch~[;]false); e.changecolour(~GRAY~);,self.setvar(~froch~[;]false); e.changecolour(~GRAY~);,if(self.getvar(~froch~) == true) { e.changecolour(~BRIGHTCYAN~); inflictself(ICE|ALL); },,,,,,,
Frozen Charm_upgraded,+3 dice[;] and 3 now[;] but|[ice]freeze all dice each turn|[90%][quote]Why[quote],1,self.extradice += 3; self.setvar(~froch~|true); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,Infinity Mirror,COUNTDOWN,12,ITEM,GRAY,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~froch~[;]false); e.changecolour(~GRAY~);,self.setvar(~froch~[;]false); e.changecolour(~GRAY~);,if(self.getvar(~froch~) == true) { e.changecolour(~BRIGHTCYAN~); inflictself(ICE|ALL); },,,,,,,
Frozen Charm_downgraded,+2 dice this fight[;] but|[ice]freeze all dice each turn|[90%][quote]Why[quote],1,self.extradice += 2; self.setvar(~froch~|true);,Infinity Mirror,COUNTDOWN,12,ITEM,GRAY,,,,magic_gaindice,0,YES,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~froch~[;]false); e.changecolour(~GRAY~);,self.setvar(~froch~[;]false); e.changecolour(~GRAY~);,if(self.getvar(~froch~) == true) { e.changecolour(~BRIGHTCYAN~); inflictself(ICE|ALL); },,,,,,,
Door Breach,Do [sword]<d6> damage[;]|split a random dice,2,attack(d); sfxdamage(d); var dicelist = []; if(!simulation) { for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { var randdice = rand(dicelist); randdice.removedice(self.screenposition()); givedice(split(randdice.basevalue)|~splitdice~); } },Magic Lockpick,NORMAL,,WEAPON,GREEN,change_power,change_function,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Door Breach_upgraded,Do [sword]<d6> damage[;]|split a random dice|On 6[;] split in 3 instead,2,attack(d); sfxdamage(d); var dicelist = []; if(!simulation) { for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { var randdice = rand(dicelist); randdice.removedice(self.screenposition()); if(d != 6) { givedice(split(randdice.basevalue)|~splitdice~); } else { givedice(split(randdice.basevalue| 3)|~splitdice~); } } },Magic Lockpick,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Door Breach_downgraded,Do [sword]<d6> damage[;]|split a random dice|no greater than 4,2,attack(d); sfxdamage(d); var dicelist = []; if(!simulation) { for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue <= 4 ){ dicelist.push(mydice); } } if(dicelist.length > 0) { var randdice = rand(dicelist); randdice.removedice(self.screenposition()); givedice(split(randdice.basevalue)|~splitdice~); } },Magic Lockpick,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pyrite,Gain [gold]12[;] lose it after fight|Delete this if you'd have debt|[gray](once per battle),2,self.gold += 12;,Harvest,COUNTDOWN,12,ITEM,PINK,change_power,change_function,,pickupgold,0,YES,YES,NO,NO,NO,YES,NO,NO,,,if(self.gold < 12) { e.setvar(~ncrsaysgetridofpyrite~|true); var cardlist = Deck.getcards(~all~); for(c in cardlist){ if(c.equipment.getvar(~ncrsaysgetridofpyrite~) == true) { c.delete(); } } } else { self.gold -= 12; },,,,,,,,
Pyrite_upgraded,Gain [gold]12[;] lose 10 after fight|Delete this if you'd have debt|[gray](once per battle),2,self.gold += 12;,Harvest,COUNTDOWN,12,ITEM,PINK,,,,pickupgold,0,YES,YES,NO,NO,NO,YES,NO,NO,,,if(self.gold < 10) { e.setvar(~ncrsaysgetridofpyrite~|true); var cardlist = Deck.getcards(~all~); for(c in cardlist){ if(c.equipment.getvar(~ncrsaysgetridofpyrite~) == true) { c.delete(); } } } else { self.gold -= 10; },,,,,,,,
Pyrite_downgraded,Gain [gold]10[;] lose 12 after fight|Delete this if you'd have debt|[gray](once per battle),2,self.gold += 10;,Harvest,COUNTDOWN,12,ITEM,PINK,,,,pickupgold,0,YES,YES,NO,NO,NO,YES,NO,NO,,,if(self.gold < 12) { e.setvar(~ncrsaysgetridofpyrite~|true); var cardlist = Deck.getcards(~all~); for(c in cardlist){ if(c.equipment.getvar(~ncrsaysgetridofpyrite~) == true) { c.delete(); } } } else { self.gold -= 12; },,,,,,,,
Pyrite_weakened,Gain [gold]10[;] lose it after fight|Delete this if you'd have debt|[gray](once per battle),2,self.gold += 10;,Harvest,COUNTDOWN,12,ITEM,PINK,,,,pickupgold,0,YES,YES,NO,NO,NO,YES,NO,NO,,,if(self.gold < 10) { e.setvar(~ncrsaysgetridofpyrite~|true); var cardlist = Deck.getcards(~all~); for(c in cardlist){ if(c.equipment.getvar(~ncrsaysgetridofpyrite~) == true) { c.delete(); } } } else { self.gold -= 10; },,,,,,,,
Distort,Reroll this dice|Lose [heart]<d6> health,1,if(self.hp > d) { bonus(d * 10000); } givedice(); pierceattackself(d);,Dice Bash,NORMAL,,ITEM,PURPLE,change_power,change_function,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Distort_upgraded,Reroll this dice|Lose [heart]<d6> health|,1,if(self.hp > d) { bonus(d * 10000); } givedice(); pierceattackself(d);,Dice Bash,NORMAL,,ITEM,PURPLE,,,,_heal,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Distort_downgraded,Reroll this dice|Lose [heart]<d6>x0.5 health,1,if(self.hp > d/2) { bonus(d * 5000);  } givedice(); pierceattackself(d/2);,Dice Bash,NORMAL,,ITEM,PURPLE,,,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Converted Chain,Heal [heal]<charge>[;] discharge [sword]<charge>|Damage yourself to charge,2,if(e.charge == 0) { bonus(-990000); } else { bonus(e.charge * 10000); } attack(e.charge); sfxdamage(e.charge); attackself(-e.charge); e.charge = 0; if(!simulation) { self.setvar(~selfdmg~|0); },Deep Breath,DOUBLES|DOUBLES,,WEAPON,PINK,change_power,change_function,,_heal,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } e.charge = self.getvar(~selfdmg~);,,var l = e.fulldescription.split(~<charge>~); if(l.length > 1) { e.fulldescription = l.join(e.charge); } self.setvar(~selfdmg~|e.charge);,,,,,
Converted Chain_downgraded,Heal and discharge[;] but|do zero damage,2,if(e.charge < 6) { bonus(-990000); } attackself(-e.charge); e.charge = 0; if(!simulation) { self.setvar(~selfdmg~|0); },Deep Breath,DOUBLES|DOUBLES,,WEAPON,PINK,,,,_heal,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } e.charge = self.getvar(~selfdmg~);,,var l = e.fulldescription.split(~<charge>~); if(l.length > 1) { e.fulldescription = l.join(e.charge); } self.setvar(~selfdmg~|e.charge);,,,,,
Converted Chain_upgraded,Heal [heal]1.5x<charge>[;] discharge [sword]<charge>|Damage yourself to charge,2,if(e.charge == 0) { bonus(-990000); } else { bonus(e.charge * 10000); } attack(e.charge); sfxdamage(e.charge); attackself(-(e.charge * 1.5)); e.charge = 0; if(!simulation) { self.setvar(~selfdmg~|0); },Deep Breath,DOUBLES|DOUBLES,,WEAPON,PINK,,,,_heal,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } e.charge = self.getvar(~selfdmg~);,,var l = e.fulldescription.split(~<charge>~); if(l.length > 1) { e.fulldescription = l.join(e.charge); } self.setvar(~selfdmg~|e.charge);,,,,,
Spite,Do [sword]<d6> damage|to both enemy and you,1,if(self.hp > d) { bonus(d * 10000); } else { bonus(-990000); } attack(d); attackself(d); sfxdamage(d);,Dramatic Pause,MAX4,,WEAPON,PURPLE,change_power,change_function,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spite_downgraded,Do [sword]<d6> damage|to both enemy and you,1,if(self.hp > d) { bonus(d * 10000); } else { bonus(-990000); } attack(d); attackself(d); sfxdamage(d); //originally folly downgraded was this; which i thought was kinda clever; but it doesn't make sense for jester since jester doesn't have fire resistance: if(self.hp > ((d/2) % 1 == 0 ? d/2 : d/2 + 0.5)) { bonus(d * 5000); } else { bonus(-990000); } attack(d|FIRE); attackself(d|FIRE); //help how do i ceiling,Dramatic Pause,MAX3,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spite_upgraded,Do [sword]<d6> damage|to both enemy and you[;]|and get a new dice,1,if(self.hp > d) { bonus(d * 10000); } else { bonus(-990000); } attack(d); attackself(d); sfxdamage(d); givedice();,Dramatic Pause,MAX4,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
AAAtracetestthing,atatatsa,1,trace(1/2 + 0.5);,Time Stop,NORMAL,,ITEM,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fool's Fool's Fire,Vanish one of your dice,1,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animate(~disappear~); } ,Time Stop,NORMAL,,ITEM,PINK,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fool's Fool's Fool's Fire,Vanish an enemy dice,1,var vanishshit = ~while(getstatusself(\~ncr_internalvanish\~) > 0) { var dicelist = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animate(\~disappear\~); if(getstatusself(\~ncr_internalvanish\~) > 0) { removestatusself(\~ncr_internalvanish\~); } } else { break; } } /*NCR VANISH END*/~; if(target.equipment.length > 0) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); sfx(~_vanish~); if (target.equipment[0].scriptonstartturn.split(vanishshit).length <= 1) { target.equipment[0].scriptonstartturn = vanishshit + target.equipment[0].scriptonstartturn; } } else { self.textparticle(~No effect!~); } while (getstatus(~ncr_vanish~) != getstatus(~ncr_internalvanish~)) { removestatus(~ncr_internalvanish~); } // that bit at the end is an edgecase with alt reduce,Time Stop,NORMAL,,ITEM,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
AAAFFiersjrjrsjrsrds,Remove all dupe dice from u,1,if(e.getvar(~helios~) != null && e.getvar(~helios~) < 5) { e.setvar(~helios~|e.getvar(~helios~) + 1); e.doequipmentaction(self|target|e.castdirection|[]|-1|true); } else { if(!simulation) { trace(self.dicepool); var t = 0.5; t += ((self.dice + self.bonusdice + self.extradice) - 1) * 0.1; var dicelist = []; var seen = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { for (mydice in self.dicepool){ if (mydice.available() && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); dicelist.remove(mydice); } } if(dicelist.length > 0) { for(mydice in dicelist) { if(seen[seen.indexOf(mydice.basevalue)] != null ) { trace(~vandish~); mydice.animate(~disappear~|t); t += 0.2; } } } } e.resetvar(~helios~); } },Time Stop,,,ITEM,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,if(!simulation ) { e.setvar(~helios~|0); e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused--; trace(~redirect~); },,,if(!simulation) { var t = 0.5; var dicelist = []; var seen = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { for (mydice in self.dicepool){ if (mydice.available() && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); dicelist.remove(mydice); } } if(dicelist.length > 0) { for(mydice in dicelist) { if(seen[seen.indexOf(mydice.basevalue)] != null ) { trace(~vandish~); mydice.animate(~disappear~|t); t += 0.2; } } } } },,,,
infict vanish on u,inficts vanish on u,1,,Time Stop,,,ITEM,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(VANISH);,,,,,,,
AAGive enemy the afasfsfad,give it to emeny,1,var names = []; for(eq in target.equipment) { names.push(eq.name); } if(names[names.indexOf(~AAAFFiersjrjrsjrsrds~)] == null) { giveenemyequipment(~AAAFFiersjrjrsjrsrds~|false|true); for(eq in target.equipment) { if(eq.name == ~AAAFFiersjrjrsjrsrds~) { eq.x = -9999; eq.y = -9999; } } },Time Stop,NORMAL,,ITEM,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Easios,try something easier,1,,Time Stop,,,ITEM,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(!simulation) { trace(self.dicepool); var t = 0; var dicelist = []; var seen = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { for (mydice in self.dicepool){ if (mydice.available() && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); dicelist.remove(mydice); } } if(dicelist.length > 0) { for(mydice in dicelist) { if(seen[seen.indexOf(mydice.basevalue)] != null ) { trace(~vandish~); mydice.animate(~disappear~|t); t += 0.05; } } } } },,if(!simulation) { trace(self.dicepool); var t = 0.5; var dicelist = []; var seen = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { for (mydice in self.dicepool){ if (mydice.available() && seen[seen.indexOf(mydice.basevalue)] == null ){ seen.push(mydice.basevalue); dicelist.remove(mydice); } } if(dicelist.length > 0) { for(mydice in dicelist) { if(seen[seen.indexOf(mydice.basevalue)] != null ) { trace(~vandish~); mydice.animate(~disappear~|t); t += 0.05; } } } } },,,,
AAAAgive easois,try something easier,1,var names = []; for(eq in target.equipment) { names.push(eq.name); } if(names[names.indexOf(~Easios~)] == null) { giveenemyequipment(~Easios~|false|false); for(eq in target.equipment) { if(eq.name == ~Easios~) { eq.x = 9999; eq.y = 9999; } } },Time Stop,NORMAL,,ITEM,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Whiplash,Burn [fire]<timesused> dice|Increases by 1 each turn,1,var turndamage = if(turn == e.timesused + 1) turn else e.timesused + 1; inflict(FIRE|turndamage); if(e.getvar(~reequip~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reequip~); e.resetvar(~reequip~); } } },Hellfire,,,ITEM,RED,change_power,change_power,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,//sweet n simple!,,,e.doequipmentaction(self|target|e.castdirection|[]|0|false);,if(getstatusself(EXTRATURN) > 0) { e.timesused--; },,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reequip~|mystat.value); mystat.value = 0; } } },,e.preventdefault = true; e.maintainfury = true;,
Whiplash_upgraded,Do [fire]2x<timesused> damage|Increases by 1 each turn,1,var turndamage = if(turn == e.timesused + 1) turn else e.timesused + 1; attack(turndamage * 2|FIRE); sfxdamage(turn * 2); if(e.getvar(~reequip~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reequip~); e.resetvar(~reequip~); } } },Hellfire,,,ITEM,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.doequipmentaction(self|target|e.castdirection|[]|0|false);,if(getstatusself(EXTRATURN) > 0) { e.timesused--; },,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reequip~|mystat.value); mystat.value = 0; } } },,e.preventdefault = true; e.maintainfury = true;,
Whiplash_downgraded,Burn [fire]<timesused> dice,1,var turndamage = if(turn == e.timesused + 1) turn else e.timesused + 1; inflict(FIRE|turndamage); if(e.getvar(~reequip~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reequip~); e.resetvar(~reequip~); } } },Hellfire,,,ITEM,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.doequipmentaction(self|target|e.castdirection|[]|0|false);,e.timesused--;,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reequip~|mystat.value); mystat.value = 0; } } },,e.preventdefault = true; e.maintainfury = true;,
Trace a Dace,trace the dace|TRACE THE DACE,1,for(mydice in self.dicepool) { trace(mydice.col); trace(~stop~); },Time Stop,,,BACKUP,YELLOW,,,,none,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,trace(d); trace(actualdice); e.destroydice(actualdice[1]); trace(d);,,,
Fastball,Do <triple> damage[;] but|lose 3 dice this fight|(no effect if you'd have 0 dice),2,attack(d * 3); sfxdamage(d * 3); self.extradice -= 3; if(self.dice + self.extradice < 1) { self.extradice = 1 - self.dice; },Infinity Mirror,NORMAL,,WEAPON,PURPLE,,,,magic_gaindice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Basic Geometry,Trisect this dice evenly with|a straightedge and compass|If you can't[;] do [sword]<d6>,1,attack(d);,Time Stop,NORMAL,,ITEM,GREEN,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Music Box,Heal 0.25x<charge>[;]return both dice|Take self-damage to charge,2,attackself(-e.charge * 0.25);,Regenerate,DOUBLES|DOUBLES,,ITEM,RED,,,,_heal,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~selfdmg_music~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } self.setvar(~selfdmg~|0); e.charge = 0;,var l = e.fulldescription.split(self.getvar(~selfdmg_music~)); if(l.length > 1) { e.fulldescription = l.join(~<charge>~); } e.charge = self.getvar(~selfdmg_music~);,,var l = e.fulldescription.split(~<charge>~); if(l.length > 1) { e.fulldescription = l.join(e.charge); } self.setvar(~selfdmg_music~|e.charge);,,,,,
Nunchucks shaped like wrenches,Combine dice[;] do [sword]<d6>|,1,attack(d); if(d >= 1) givedice(d| ~combinedice~);,Steal,MAX3|MAX3,,WEAPON,RED,increaserange,change_power,,_damage,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nunchucks shaped like wrenches_downgraded,Do [sword]<d6> damage|,1,attack(d);,Steal,MAX3|MAX3,,WEAPON,RED,,,,_damage,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Third Place Cauldron,Roll another dice[;] do [sword]3|,1,givedice(rand([1|2|4|5|6])); attack(2);,Time Stop,REQUIRE3,,WEAPON,ORANGE,,,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Holy Water,Recover [heal]<d6> health|[gray](once per battle),1,attackself(-d);,Regenerate,MAX4|MAX4,,ITEM,GREEN,change_power,decreaserange,,_heal,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Holy Water_upgraded,Recover [heal]<d6> health|[gray](once per battle),2,attackself(-d);,Regenerate,MAX4|MAX4|MAX4|MAX4,,ITEM,GREEN,,,,_heal,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wrench That Makes You Healthy,Combine dice. On doubles[;]|recover [heal]<slotdoubles> health,1,if(actualdice[0].basevalue == actualdice[1].basevalue) { attackself(-actualdice[0].basevalue); sfx(~_heal~); } if(d >= 1) givedice(d| ~combinedice~);,Battle Wrench,MAX3|MAX3,,ITEM,GREEN,increaserange,,,_heal,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Freeze,Error your skillcard[;]|roll two new dice|[gray](errors on jackpot),1,self.getskillcard().animate(~error~); givedice(); givedice();,Magic Dice,ODD,,ITEM,BRIGHTCYAN,simplify,doublerequirements,,roboterror,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,if(self.roll_jackpot > 0) { roboterror(self| [e]); },,,,
Junk Sword,Do [sword]<d6> damage. On 6[;]|if this is the last turn[;]|this is offered as scrap,1,attack(d); if(d == 6) { sfx(~_thinghappens~); e.appearsforparts = true; },Less Fluff,NORMAL,,WEAPON,GRAY,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.appearsforparts = false;,,,,,,,
Junk Sword_upgraded,Do [sword]<d6> damage|[gray](Always offered as scrap),1,attack(d);,Less Fluff,NORMAL,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,YES,NO,,,,,,,,,,,
Junk Sword_downgraded,Do [sword]<d6> damage. On 6[;]|if this is the last turn[;]|this is offered as scrap,1,attack(d); if(d == 6) { sfx(~_thinghappens~); e.appearsforparts = true; },Less Fluff,EVEN,,WEAPON,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Manual Turret,Deal [sword]3 damage,1,attack(3);,Dice Bash,MAX3|SPARE3,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Multiuse Spare,Lose [heart]6 health|,1,pierceattackself(6);,Magic Six,SPARE6,,ITEM,RED,,,,_heal,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Smartwatch,At start of turn[;] get a dice|equal to turn number|modulo 7,1,,Magic Dice,,,ITEM,GRAY,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,e.animate(~flash~); givedice(turn % 7); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,, ,,e.preventdefault = true; e.maintainfury = true;,
Smartwatch_upgraded,At start of turn[;] get a dice|equal to turn number|modulo 7[;] then do [sword]2,1,attack(2);,Magic Dice,,,ITEM,GRAY,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.animate(~flash~); givedice(turn % 7); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Smartwatch_downgraded,At start of turn[;] get a dice|equal to turn number|modulo 7[;] but take [sword]2,1,attackself(2);,Magic Dice,,,ITEM,GRAY,,,,_damage,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,e.animate(~flash~); givedice(turn % 7); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Bronze Dagger,Odd: do [sword]<d6> damage|Even: get an odd dice[;] reuse,2,if(d % 2 == 0) { givedice(rand([1|3|5])); } else { attack(d); sfxdamage(d); e.playcharactervoice(target.name); },Random Roll,NORMAL,,WEAPON,ORANGE,change_power,change_power,,none,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,if(d % 2 == 1) { e.usesleft = 0; e.castdirection = 1; } else { e.castdirection = 0; },,,
Bronze Dagger_upgraded,Even: do [sword]<d6> damage|Odd: get an odd dice[;] reuse,2,if(d % 2 == 1) { givedice(rand([1|3|5])); } else { attack(d); sfxdamage(d); e.playcharactervoice(target.name); },Random Roll,NORMAL,,WEAPON,ORANGE,,,,none,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,if(d % 2 == 0) { e.usesleft = 0; e.castdirection = 1; } else { e.castdirection = 0; },,,
Bronze Dagger_downgraded,Odd: do [sword]<d6> damage|Even: get an odd dice,2,if(d % 2 == 0) { givedice(rand([1|3|5])); } else { attack(d); sfxdamage(d); e.playcharactervoice(target.name); },Random Roll,NORMAL,,WEAPON,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,if(d % 2 == 1) { e.castdirection = 1; } else { e.castdirection = 0; },,,
Jester,Marotte|Pick lowest dice[;] do|[sword]<d6> and reroll it,2,//copy over code from npp,Random Roll,,,BACKUP,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,var dicelist = []; for (mydice in self.dicepool) { if (mydice.available()){ dicelist.push(mydice); } } dicelist.sort(function(a|b) { return a.basevalue - b.basevalue; } ); d = dicelist[0].basevalue;,,,
Ice Nine,Inflict [ice]<timesused> freeze[;]|+1 each turn,1,inflict(ICE|turn); e.timesused -= 1;,Arctic Storm,NORMAL|NORMAL,9,ITEM,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,e.timesused += 1;,,,,,
PyrotechnIX,Inflict [fire]<timesused> burn[;]|+1 each turn,1,inflict(FIRE|turn); e.timesused -= 1;,Hellfire,NORMAL|NORMAL,9,ITEM,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,e.timesused += 1;,,,,,
Octobar,Reduce countdowns by 10,1,boostcountdowns(actualdice[0].basevalue); boostcountdowns(actualdice[1].basevalue);,Accelerate,NORMAL|NORMAL,10,ITEM,ORANGE,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metacrowbar,Reduce countdowns by|the last dice inserted,1,boostcountdowns(e.dicehistory[e.dicehistory.length - 1].basevalue);,Accelerate,COUNTDOWN,12,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nail Bar,Boost countdowns by <d6>|(You lose [heart]2 hp each turn),1,boostcountdowns(3); boostcountdowns(actualdice[0].basevalue);,Accelerate,NORMAL|FREE3,,ITEM,RED,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); pierceattackself(2); sfx(~_damage~);,,,,,,
Wolf Puppy ,Bark Bark Bark|Repeat next action,2,inflictself(FURY); //normally this would replace the 'wolf puppy' card in backstage and that would make us all very sad; but i added the invisible character ALT+255 to the end of this card's name (and its associated enemy),Fury,,,BACKUP,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Wolf Puppy?,Injection|Next card use also|gives you a new dice,2,inflictself(~ncr_injection~); sfx(~_cure~); var cardlist = Deck.getcards(~all~); for(c in cardlist) { trace(c.equipment.script); c.equipment.script = ~if(getstatusself(\~ncr_injection\~) > 0) { givedice(); removestatusself(\~ncr_injection\~|1); } ~ + c.equipment.script; trace(c.equipment.script); },Efficiency,,,BACKUP,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wisp ,Spirit Bomb|Do [sword]2 per duplicate|dice[;] then destroy them,2,var dicelist = []; var t = 0; for(mydice in self.dicepool) { if(mydice.available()) { dicelist.push(mydice); } } for(i in 1...7) { for(mydice in self.dicepool) { if(mydice.basevalue == i) { dicelist.remove(mydice); break; } } } if(dicelist.length == 0) { self.textparticle(~No effect!~); } else { attack(dicelist.length); sfxdamage(dicelist.length); for(mydice in dicelist) { mydice.animate(~disappear~|t); t += 0.1; } },Dice Bash,,,BACKUP,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wisp?,Reflective Pool|Get a brilliant and|creative item,2,//$replacemewith(rand([~Bronze Dagger~|~Door Breach~|~Virtue Grip~|~Tear Down This Wall~|~Gas Lamp~|~Keyhole~|~Ashley Bat~|~Operator~|~Gyrate Hook~])| -1);,THE [200%]GASDGFET,,,BACKUP,PURPLE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Überbump,+<d6> to all dice values,2,var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue + d > 6){ extradice.push((mydice.basevalue + d) % 7); mydice.animatereroll(6| self.screenposition()| c * 0.05); } else { mydice.animatereroll((mydice.basevalue + d)| self.screenposition()| c * 0.05); } c++; } } givedice(extradice);,Megabump,MAX2,,ITEM,GREEN,increaserange,decreaserange,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Freeze Frame,Get a 6[;] but [ice]freeze|yourself twice each turn,1,,Refrigerator,,,ITEM,BRIGHTCYAN,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(ICE|2);,e.animate(~flash~); givedice(6); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Freeze Frame_upgraded,Get a 6[;] but [ice]freeze|yourself once each turn,1,,Refrigerator,,,ITEM,BRIGHTCYAN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(ICE);,e.animate(~flash~); givedice(6); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Freeze Frame_downgraded,Get a 5[;] but [ice]freeze|yourself twice each turn,1,,Refrigerator,,,ITEM,BRIGHTCYAN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(ICE|2);,e.animate(~flash~); givedice(5); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Freeze Frame_weakened,Get a 5[;] but [ice]freeze|yourself once each turn,1,,Refrigerator,,,ITEM,BRIGHTCYAN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(ICE);,e.animate(~flash~); givedice(5); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
000Traceshit,tracehsit|,1,trace((0 + ~~) == ~0~); trace(0 == 0); trace(~0~ == ~0~);,Time Stop,NORMAL,,,,,,,none,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,giveequipment(~Icecube~|true|false|e); sfx(~openchest~);,,,,,
Blockbuster,Turn start: make a random|card (not this) error-immune,1,//Blockbuster Video offers a great selection of  restricted movies inappropriate for viewers under seventeen  and provides computerized enforcement. You decide what kind of videos you want to watch and Blockbuster Video enforces your wishes.,Efficiency,,,ITEM,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~ncr_remove_errim~|~blah~);,,,var check = self.getvar(~ncr_remove_errim~); if(check != ~blah~) { for(eq in self.equipment) { if(eq.row == check[0] && eq.column == check[1]) { eq.immunetoerrors = false; } } } e.animate(~flashandshake~); var eqlist = []; for(eq in self.equipment) { if(eq.immunetoerrors != true && eq.skillcard == ~~ && eq != e) { eqlist.push(eq); } } if(eqlist != []) { var eq = rand(eqlist); eq.immunetoerrors = true; self.setvar(~ncr_remove_errim~|[eq.row|eq.column]); trace(self.getvar(~ncr_remove_errim~)); } else { self.setvar(~ncr_remove_errim~|~blah~); },,,,,,
Blockbuster_upgraded,Turn start: make a random|card (not this) error-immune[;]|indicate it with a flash,1,,Efficiency,,,ITEM,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~ncr_remove_errim~|~blah~);,,,var check = self.getvar(~ncr_remove_errim~); if(check != ~blah~) { for(eq in self.equipment) { if(eq.row == check[0] && eq.column == check[1]) { eq.immunetoerrors = false; } } } e.animate(~flashandshake~); var eqlist = []; for(eq in self.equipment) { if(eq.immunetoerrors != true && eq.skillcard == ~~ && eq != e) { eqlist.push(eq); } } if(eqlist != []) { var eq = rand(eqlist); eq.animate(~flashandshake~); eq.immunetoerrors = true; self.setvar(~ncr_remove_errim~|[eq.row|eq.column]); trace(self.getvar(~ncr_remove_errim~)); } else { self.setvar(~ncr_remove_errim~|~blah~); },,,,,,
Icebox,Do [ice]<d6> damage[;] on 4[;]|get an Icecube for this turn,1,attack(d|ICE); if(d == 4 && getstatusself(FURY) < 1) { giveequipment(~Icecube~|true); sfx(~_thinghappens~); } //icebox actually came before matchbox; mainly because matchstick isnt very good except in pu,Flash Freeze,MAX4,,WEAPON,BRIGHTCYAN,change_power,change_power,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Icebox_upgraded,Do [ice]<d6> damage[;] on 4[;]|get an Icecube pemanently,1,attack(d|ICE); if(d == 4 && getstatusself(FURY) < 1) { giveequipment(~Icecube~|true|false|e); sfx(~openchest~); },Flash Freeze,MAX4,,WEAPON,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Icebox_downgraded,Do [ice]<d6> damage[;] on 4[;]|inflict [ice]freeze,1,attack(d|ICE); if(d == 4 && getstatusself(FURY) < 1) { inflict(ICE); },Flash Freeze,MAX4,,WEAPON,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Matchbox,Do [fire]<d6> damage[;] on 4[;]|get a Matchstick for this turn,1,attack(d|FIRE); if(d == 4 && getstatusself(FURY) < 1) { giveequipment(~Matchstick~|true); sfx(~_thinghappens~); },Blowtorch,MAX4,,WEAPON,RED,change_power,change_power,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Matchbox_upgraded,Do [fire]<d6> damage[;] on 4[;]|get a Matchstick permanently,1,attack(d|FIRE); if(d == 4 && getstatusself(FURY) < 1) { giveequipment(~Matchstick~|true|false|e); sfx(~openchest~); },Blowtorch,MAX4,,WEAPON,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Matchbox_downgraded,Do [fire]<d6> damage[;] on 4[;]|inflict [fire]burn,1,attack(d|FIRE); if(d == 4 && getstatusself(FURY) < 1) { inflict(FIRE); },Blowtorch,MAX4,,WEAPON,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Hexagram,Get a 6[;] but [fire]burn|yourself twice each turn,1,,Ember,,,ITEM,RED,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(FIRE|2);,e.animate(~flash~); givedice(6); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Hexagram_upgraded,Get a 6[;] but [fire]burn|yourself once each turn,1,,Ember,,,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(FIRE);,e.animate(~flash~); givedice(6); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Hexagram_downgraded,Get a 5[;] but [fire]burn|yourself twice each turn,1,,Ember,,,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(FIRE|2);,e.animate(~flash~); givedice(5); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Hexagram_weakened,Get a 5[;] but [fire]burn|yourself once each turn,1,,Ember,,,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,inflictself(FIRE);,e.animate(~flash~); givedice(5); self.dicepool[self.dicepool.length - 1].x = e.x + 280; self.dicepool[self.dicepool.length - 1].y = e.y + 192; sfx(~jackpot_rolldice~); e.doequipmentaction(self|target|e.castdirection|[]|0.5|false);,,,,,e.preventdefault = true; e.maintainfury = true;,
Hunting Knife@large,Do [sword]<d6> damage[;] return this|but with a MAX 3 slot,2,attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@small~|false|false|e); } if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } },Steal,MIN4,,WEAPON,RED,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@small,Do [sword]<d6> damage[;] return this|but with a MIN 4 slot,2,attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@large~|false|false|e); } if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } },Steal,MAX3,,WEAPON,RED,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Whisp@F,Do [fire]<d6> damage[;]|inflict [fire]burn on 6[;]|inflict [weaken]weaken on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|FIRE); sfxdamage(target|d); if(d == 6) { inflict(FIRE); sfx(~_fire~|~~|0.2); } if(d == 5) { sfx(~_weaken~|~~|0.2); inflict(WEAKEN); if(getstatusself(FURY) < 1) { giveequipment(~Whisp@W~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Ember,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Whisp@W,Do [weaken]<d6> damage[;]|inflict [weaken]weaken on 6[;]|inflict [fire]burn on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|WEAKEN); sfxdamage(target|d); if(d == 6) { inflict(WEAKEN); sfx(~_weaken~|~~|0.2); } if(d == 5) { sfx(~_fire~|~~|0.2); inflict(FIRE); if(getstatusself(FURY) < 1) { giveequipment(~Whisp@F~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Mumble,NORMAL,,WEAPON,ORANGE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hamment@I,Do [ice]<d6> damage[;]|inflict [ice]freeze on 6[;]|inflict [shock]shock on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|ICE); sfxdamage(target|d); if(d == 6) { inflict(ICE); sfx(~_ice~|~~|0.2); } if(d == 5) { sfx(~_shock~|~~|0.2); inflict(SHOCK); if(getstatusself(FURY) < 1) { giveequipment(~Hamment@S~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Refrigerator,NORMAL,,WEAPON,BRIGHTCYAN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hamment@S,Do [shock]<d6> damage[;]|inflict [shock]shock on 6[;]|inflict [ice]freeze on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|SHOCK); sfxdamage(target|d); if(d == 6) { inflict(SHOCK); sfx(~_shock~|~~|0.2); } if(d == 5) { sfx(~_ice~|~~|0.2); inflict(ICE); if(getstatusself(FURY) < 1) { giveequipment(~Hamment@I~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Zap,NORMAL,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Whisp@F_downgraded,Do [fire]<d6> damage[;]|inflict [fire]burn on 6,2,attack(d|FIRE); if(d == 6) { inflict(ICE); sfx(~_fire~); } sfxdamage(target|d);,Ember,EVEN,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Whisp@W_downgraded,Do [weaken]<d6> damage[;]|inflict [weaken]weaken on 6,2,attack(d|WEAKEN); if(d == 6) { inflict(WEAKEN); sfx(~_weaken~); } sfxdamage(target|d);,Mumble,EVEN,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Hamment@I_downgraded,Do [ice]<d6> damage[;]|inflict [ice]freeze on 6,2,attack(d|ICE); if(d == 6) { inflict(ICE); sfx(~_ice~); } sfxdamage(target|d);,Refrigerator,EVEN,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Hamment@S_downgraded,Do [shock]<d6> damage[;]|inflict [shock]shock on 6,2,attack(d|SHOCK); if(d == 6) { inflict(SHOCK); sfx(~_shock~); } sfxdamage(target|d);,Zap,EVEN,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Whisp@F_upgraded,Do [fire]<d6> damage[;]|inflict [fire]burn on 6[;]|inflict [weaken]weaken on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|FIRE); sfxdamage(target|d); if(d == 8) { inflict(FIRE); sfx(~_fire~|~~|0.2); } if(d == 7) { sfx(~_weaken~|~~|0.2); inflict(WEAKEN); if(getstatusself(FURY) < 1) { giveequipment(~Whisp@W+~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Ember,NORMAL|FREE2,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Whisp@W_upgraded,Do [weaken]<d6> damage[;]|inflict [weaken]weaken on 6[;]|inflict [fire]burn on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|WEAKEN); sfxdamage(target|d); if(d == 8) { inflict(WEAKEN); sfx(~_weaken~|~~|0.2); } if(d == 7) { sfx(~_fire~|~~|0.2); inflict(FIRE); if(getstatusself(FURY) < 1) { giveequipment(~Whisp@F+~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Mumble,NORMAL|FREE2,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hamment@I_upgraded,Do [ice]<d6> damage[;]|inflict [ice]freeze on 6[;]|inflict [shock]shock on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|ICE); sfxdamage(target|d); if(d == 8) { inflict(ICE); sfx(~_ice~|~~|0.2); } if(d == 7) { sfx(~_shock~|~~|0.2); inflict(SHOCK); if(getstatusself(FURY) < 1) { giveequipment(~Hamment@S+~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Refrigerator,NORMAL|FREE2,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hamment@S_upgraded,Do [shock]<d6> damage[;]|inflict [shock]shock on 6[;]|inflict [ice]freeze on 5,2,var oldx = e.x; if(actualdice != []) { attack(d|SHOCK); sfxdamage(target|d); if(d == 8) { inflict(SHOCK); sfx(~_shock~|~~|0.2); } if(d == 7) { sfx(~_ice~|~~|0.2); inflict(ICE); if(getstatusself(FURY) < 1) { giveequipment(~Hamment@I+~|true|false|e); for(eq in self.equipment) { if(eq.y > 720 && eq.x == oldx && !e.getvar(~reeq~) > 0) { eq.x = 9000; eq.doequipmentaction(self|self|e.castdirection|[]|-1|true); break; } } } } } if(e.getvar(~reeq~) > 1) { inflictself(REEQUIPNEXT|e.getvar(~reeq~) - 1); e.resetvar(~reeq~); },Zap,NORMAL|FREE2,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@large_upgraded,Do [sword]<d6> damage[;] return this|but with a MAX 3 slot,1,attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@small+~|false|false|e); },Steal,MIN4,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@small_upgraded,Do [sword]<d6> damage[;] return this|but with a MIN 4 slot,1,attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@large+~|false|false|e); },Steal,MAX3,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@large_downgraded,Do [sword]<d6> damage[;] return this|but with a MAX 2 slot,2,var oldx = e.x; attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@small~|false|false|e); } for(eq in self.equipment) { if(eq.y < 0 && eq.x == oldx) { eq.downgrade(); } } if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } } ,Steal,MIN5,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@small_downgraded,Do [sword]<d6> damage[;] return this|but with a MIN 5 slot,2,var oldx = e.x; attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@large~|false|false|e); } for(eq in self.equipment) { if(eq.y < 0 && eq.x == oldx) { eq.downgrade(); } } if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } },Steal,MAX2,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@large_weakened,Do [sword]<d6> damage[;] return this|but with a MAX 2 slot,1,var oldx = e.x; attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@small+~|false|false|e); } for(eq in self.equipment) { if(eq.y < 0 && eq.x == oldx) { eq.downgrade(); } } if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } },Steal,MIN5,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Hunting Knife@small_weakened,Do [sword]<d6> damage[;] return this|but with a MIN 5 slot,1,var oldx = e.x; attack(d); if(getstatusself(FURY) < 1) { giveequipment(~Hunting Knife@large+~|false|false|e); } for(eq in self.equipment) { if(eq.y < 0 && eq.x == oldx) { eq.downgrade(); } } if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } },Steal,MAX2,,WEAPON,RED,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,donothing();,
Octobar_downgraded,Reduce countdowns by 8,1,boostcountdowns(actualdice[0].basevalue); boostcountdowns(actualdice[1].basevalue);,Turbo Boost,NORMAL|NORMAL,8,ITEM,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metacrowbar_downgraded,Reduce a random countdown|by the last dice inserted,1,var poss = []; for(eq in self.equipment){if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ poss.push(eq) } } if(self.stolencard){if(self.stolencard.countdown > 0 && self.stolencard.ready){poss.push(self.stolencard) } } if(poss.length > 0){ var r = rand(poss); givedice(e.dicehistory[e.dicehistory.length - 1].basevalue); r.assigndice(self.dicepool[self.dicepool.length - 1]); } //of course its not copypasted from rope dart; are you kidding; i removed the semicolons after the brackets and let the skillcard be a valid target and everything. had no idea self.stolencard was a thing though; that might come in handy eventually,Accelerate,COUNTDOWN,12,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nail Bar_downgraded,Boost countdowns by <d6>|(You lose [heart]2 hp each turn),1,boostcountdowns(actualdice[1].basevalue); boostcountdowns(actualdice[0].basevalue); //insertion order being swapped from octobar is probably especially janky here; but its consistent darn it!,Turbo Boost,NORMAL|MAX3,,ITEM,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); pierceattackself(2); sfx(~_damage~);,,,,,,
Octobar_upgraded,Reduce countdowns by 10,1,boostcountdowns(2); boostcountdowns(actualdice[0].basevalue); boostcountdowns(actualdice[1].basevalue);,Turbo Boost,NORMAL|NORMAL,8,ITEM,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metacrowbar_upgraded,Reduce countdowns by|the last dice inserted,1,boostcountdowns(e.dicehistory[e.dicehistory.length - 1].basevalue);,Accelerate,COUNTDOWN,8,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nail Bar_upgraded,Boost countdowns by <d6>|(You lose [heart]4 hp each turn)|,1,boostcountdowns(3); boostcountdowns(actualdice[0].basevalue);,Turbo Boost,NORMAL|FREE3,,ITEM,RED,,,,none,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); pierceattackself(4); sfx(~_damage~);,,,,,,
Metacrowbar_weakened,Reduce a random countdown|by the last dice inserted,1,var poss = []; for(eq in self.equipment){if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ poss.push(eq) } } if(self.stolencard){if(self.stolencard.countdown > 0 && self.stolencard.ready){poss.push(self.stolencard) } } if(poss.length > 0){ var r = rand(poss); givedice(e.dicehistory[e.dicehistory.length - 1].basevalue); r.assigndice(self.dicepool[self.dicepool.length - 1]); },Accelerate,COUNTDOWN,12,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bone Club,Do [sword]4 damage[;]|50% chance to [curse]Curse,1,attack(4); var odds = 50; if(getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { inflict(CURSE); sfx(~_curse~); },Dramatic Pause,COUNTDOWN,8,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bone Club_upgraded,Do [sword]4 damage[;]|if filled perfectly[;] [curse]Curse,1,attack(4); var sum = 0; for (i in 0...e.dicehistory.length) { sum = sum + e.dicehistory[i].basevalue; } if (sum == e.countdown) { inflict(CURSE); sfx(~_curse~); } e.dicehistory = [];,Dramatic Pause,COUNTDOWN,8,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bone Club_downgraded,Do [sword]4 damage[;]|50% chance to [curse]Curse[;] also|50% chance to [curse]Curse you,1,attack(4); var sfxdone = false; var odds = 50; if(getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { inflict(CURSE); sfx(~_curse~); sfxdone = true; } odds = 50; if(getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { inflictself(CURSE); if(!sfxdone) { sfx(~_curse~); } } ,Dramatic Pause,COUNTDOWN,8,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Table Flip,Reroll dice that aren't <d6>,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ mydice.animatereroll(rand([1|2|3|4|5|6])| self.screenposition()| c * 0.05); c++; } },Perfectionism,NORMAL,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Table Flip_downgraded,Reroll dice that aren't <d6>,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ mydice.animatereroll(rand([1|2|3|4|5|6])| self.screenposition()| c * 0.05); c++; } },Perfectionism,ODD,,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Table Flip_upgraded,Reroll dice that aren't <d6>|,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ mydice.animatereroll(rand([1|2|3|4|5|6])| self.screenposition()| c * 0.05); c++; } },Perfectionism,NORMAL,,ITEM,GREEN,,,,none,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gimme Harvest,gimme harvest,1,Gadget.givegadget(self|~Harvest~|true); Gadget.givegadget(self|~Harvest~|true);,Time Stop,NORMAL,,ITEM,GREEN,,,,none,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tragic Entrance,At start of combat[;] lose [heart]5|After combat[;] gain [heal]2 max hp,1,,Still Standing,,,ITEM,PURPLE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,self.maxhp +=2; self.hp += 2; ,,if(turn == 1) { e.animate(~flashandshake~); e.changecolour(~GRAY~); pierceattackself(-5); },,,,,,
Gimme Prox,gimme prox,1,Gadget.givegadget(self|~Proximity Mine~|true);,Time Stop,NORMAL,,ITEM,GREEN,,,,none,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Panacea,Restore [heal]ALL health[;]|destroy this on use,1,if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } } attackself(self.hp - self.maxhp); e.name = ~ncrsaysremoveme~; removeequipment(~ncrsaysremoveme~); ,Healthy Eating,ODD,,ITEM,GREEN,simplify,change_power,,_heal,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,,
Panacea_downgraded,Restore [heal]20 health[;]|destroy this on use,1,if(e.getvar(~reeq~) > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { mystat.value = e.getvar(~reeq~); e.resetvar(~reeq~); } } } attackself(-20); e.name = ~ncrsaysremoveme~; removeequipment(~ncrsaysremoveme~); ,Healthy Eating,ODD,,ITEM,GREEN,,,,_heal,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,e.resetvar(~reeq~);,,,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type == ~reequipnext~) { e.setvar(~reeq~|mystat.value); mystat.value = 0; } } },,,
,,,,,,,,,,,,,,,,,,,,,,,,,inflictself(REEQUIPNEXT);,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,self.equipment[1] = self.equipment[0];,,,,
