Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Category,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Parallel Universe,Special?,Error Immune,Show Gold,Appears For Parts,Hide Reuseable,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: End Turn,Script: On any equipment use,Script: Before execute,Script: On Snap,Script: On Fury,Script: On any countdown reduce
Pineapple,Do [fire]10 damage[;]|but then you explode,1,attack(10|FIRE); sfx(~magic_gaindice~); self.textparticle(~F~); self.x += 9000; self.y += 9000;,Time Stop,NORMAL,,WEAPON,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
ooer,OH MAN I AM VERY NOT GOOD|WITH DICEY PLS TO HELP,1,var eqlist = self.getvar(~acceptable~); if(self.getvar(~stop~) != true) { if(!self.getvar(~caffeineused~)) { sfx(~yakety~); self.setvar(~caffeineused~|true); self.setvar(~cycle~|1); } self.x += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(self.x < 0) { self.x = 0; } if(self.x > 2560) { self.x = 2560; } self.y += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(self.y < 0) { self.y = 0; } if(self.y > 1500) { self.y = 1500; } target.x += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]);  if(target.x < 0) { target.x += 10; } if(target.x > 2560) { target.x -= 10; } target.y += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(target.y < 0) { target.y += 10; } if(target.y > 1500) { target.y -= 10; } for(eq in eqlist) { eq.x += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(eq.x < 0 && eq.ready()) { eq.x += 10; } if(eq.x > 2560 && eq.ready()) { eq.x -= 10; } eq.y += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(eq.y < 0 && eq.ready()) { eq.y += 10; } if(eq.y > 1500 && eq.ready()) { eq.y -= 10; } if(self.getvar(~cycle~) == 8) { eq.equipmentcol = rand([0|2|3|4|5|8|9|11]); } } for(eq in target.equipment) { eq.x += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(eq.x < 0 && eq.ready()) { eq.x += 10; } if(eq.x > 2560 && eq.ready()) { eq.x -= 10; } eq.y += rand([-15|-14|-13|-12|-11|-10|-9|-8|-7|-6|-5|-4|-3|-2|-1|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15]); if(eq.y < 0 && eq.ready()) { eq.y += 10; } if(eq.y > 1500 && eq.ready()) { eq.y -= 10; } trace(self.getvar(~cycle~)); if(self.getvar(~cycle~) == 8) { eq.equipmentcol = rand([0|2|3|4|5|8|9|11]); } } if(self.getvar(~cycle~) == 8) { self.setvar(~cycle~|1); } self.setvar(~cycle~|self.getvar(~cycle~) + 1); self.equipmentused-=1; e.doequipmentaction(self|target|e.castdirection|[]|-1|true); },Bubble Gun,NORMAL,,ITEM,PURPLE,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,1,var acceptable = []; for(eq in self.equipment) { if(eq.name != ~ooer~) { acceptable.push(eq); } } self.setvar(~acceptable~|acceptable);,,e.setvar(~stop~|false);,,// e.setvar(~stop~|true);,,,,e.preventdefault = true; e.maintainfury = true;,
Hyperspeed,Next status inflicted is its|Parallel Universe variation,1,if(e.getslots() != []) { inflictself(~ncr_hyper~); var acceptablestats = [~silence~|~ice_all~|~fire_all~|~poison~|~fire~|~shock~|~ice~|~weaken~|~curse~|~blind~|~fury~|~lock~|~shield~|~reequipnext~|~dodge~|~thorns~|~confuse~|~counter_1~|~counter_2~|~counter_3~|~counter_4~|~counter_5~|~counter_6~|~dice_trigger_1~|~dice_trigger_2~|~dice_trigger_3~|~dice_trigger_4~|~dice_trigger_5~|~dice_trigger_6~|~reequipnext~|~survive~|~vampire~]; var statuslist = []; if(target.status.length > 0) { for(stat in target.status) { var copystat = new elements.StatusEffect(stat.type|stat.value); statuslist.push(copystat); } for(stat in statuslist) { if(acceptablestats.indexOf(stat.type) == -1) { statuslist.remove(stat); } } } self.setvar(~stored_tstatus~|statuslist); giveequipment(~Hyperspeed~); for(eq in self.equipment) { if(eq.name == ~Hyperspeed~ && eq.x == e.x && eq.y < 0) { eq.equipalpha = 0; eq.changeslots([]); } } } else { trace(~hi~); trace(target.status); var acceptablestats = [~silence~|~ice_all~|~fire_all~|~poison~|~fire~|~shock~|~ice~|~weaken~|~curse~|~blind~|~fury~|~lock~|~shield~|~reequipnext~|~dodge~|~thorns~|~confuse~|~counter_1~|~counter_2~|~counter_3~|~counter_4~|~counter_5~|~counter_6~|~dice_trigger_1~|~dice_trigger_2~|~dice_trigger_3~|~dice_trigger_4~|~dice_trigger_5~|~dice_trigger_6~|~reequipnext~|~survive~|~vampire~]; var oldstatlist = self.getvar(~stored_tstatus~); if(oldstatlist == 0 # oldstatlist == null) { oldstatlist = []; } var oldstatnames = []; var statstoremove = []; if(oldstatlist.length > 0) { for(stat in oldstatlist) { oldstatnames.push(stat.type); } } if(target.status.length > 0 && getstatusself(~ncr_hyper~) > 0) { for(stat in target.status) { if(acceptablestats.indexOf(stat.type) != -1) { if(oldstatlist.length == 0 ) { inflict(~alternate_~ + stat.type); statstoremove.push(stat.type); removestatusself(~ncr_hyper~); if(getstatusself(~ncr_hyper~) == 0) { break; } } else if(oldstatnames.indexOf(stat.type) == -1) { inflict(~alternate_~ + stat.type); statstoremove.push(stat.type); removestatusself(~ncr_hyper~); if(getstatusself(~ncr_hyper~) == 0) { break; } } else if(oldstatlist[oldstatnames.indexOf(stat.type)].value != stat.value) { inflict(~alternate_~ + stat.type); statstoremove.push(stat.type); removestatusself(~ncr_hyper~); if(getstatusself(~ncr_hyper~) == 0) { break; } } } } } if(statstoremove.length > 0) { for(stat in statstoremove) { removestatus(stat); } } },Overload,ODD,,ITEM,PINK,,,,_mana,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,self.resetvar(~stored_tstatus~);,trace(~aaa~); if(e.getvar(~counter~) == true) { trace(e.getslots()); trace(e.getslots().length); if(e.getslots() == [] # e.getslots().length == 0) { trace(~yo....~); e.timesused -= 1; self.equipmentused -= 1; e.setvar(~counter~|false); e.doequipmentaction(self|target|e.castdirection|[]|-1|true); } } else { e.setvar(~counter~|true); },,,,
